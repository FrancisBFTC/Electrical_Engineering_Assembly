MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; ******************************************************************************************************
                            ********
                      00002 ; Lista N.3 - Questão 1, 2 e 3 [Arquivo de Inclusão]                                                    
                                                                                       *
                      00003 ; Assembly Microcontrolador PIC16F877A                                                                  
                                                                                                       *
                      00004 ;                                                                                                       
                                                                                                                            
                      00005 ; Curso   : Eng. Elétrica da IFBA                                                                       
                                   *
                      00006 ; Disciplina: ENG421 - Microprocessadores & Microcontroladores                                          
                                   *
                      00007 ; Autora  : Dirlene Napoleão                      Criação: 06/12/2021     Revisão: 07/12                
                                                            *
                      00008 ; Clock   : 4MHz                                      Arquivo: ReactMain.asm                            
                                               *
                      00009 ; Programa: Sistema de Reator Industrial para despache da preparação de produtos                        
                                   *
                      00010 ;                                                                                                       
                                   *
                      00011 ;                                                                                                       
                                   *
                      00012 ; Descrição: Abaixo há um código de macros das equações booleanas do Reator. As operações estão         
                                   *
                      00013 ; abstraídas, pois todo o funcionamento é descrito por macros e definições nos arquivos de inclusão     
                                   *
                      00014 ; incluídas no "reactlib.inc", que por sua vez é incluída aqui. Neste código do MAIN há uma sequência   
                                   *
                      00015 ; lógica e organizada do que o reator deve fazer, as próprias macros são descritivas em relação a isto  
                                   *
                      00016 ; porém todo este sistema abaixo é executado por um loop, voltando novamente ao "Início das Operações   
                                   *
                      00017 ; do Reator", isto é feito até que o botão RESET seja pressionado pelo usuário, após isto o sistema     
                                   *
                      00018 ; é resetado, voltando a todas as configurações iniciais. O Botão RESET está conectado no MasterClear   
                                   *
                      00019 ; do Microcontrolador que reseta tudo quando identifica o nível lógico 0, o sistema inicial liga o LED  
                                   *
                      00020 ; vermelho ao lado do Botão quando é resetado no final ou indicando que o reator está ligado mas não    
                                   *
                      00021 ; está operando ainda e só irá operar quando for pressionado o Botão START.                             
                                   *
                      00022 ;                                                                                                       
                                   *
                      00023 ; O START inicia o processo contínuo e automatizado do reator criando uma fonte de retenção que será    
                                   *
                      00024 ; utilizada nos últimos módulos. Esta fonte de retenção é indicada pelo LED verde ao lado do Botão START
                            .      * 
                      00025 ; Já o botão STOP é conectado no pino RB0 que também funciona como interrupção externa, então isto é    
                                   *
                      00026 ; configurado nos registros para o sistema interromper as atividades e entrar num loop infinito dentro d
                            a      *
                      00027 ; ISR esperando que o usuário pressione o STOP novamente, quando novamente pressionado, o sistema volta 
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                                   *
                      00028 ; a operar de onde parou. O LED amarelo ao lado dos botões, indica finalização do sistema, quando       
                                   *
                      00029 ; todas as atividades importantes foram feitas, é como se fosse um "aviso" de que o usuário poderá      
                                   *
                      00030 ; finalmente pressionar o RESET.                                                                        
                                   *
                      00031 ;                                                                                                       
                                   *
                      00032 ; Todas as atividades são automatizadas, isto é, durante a execução não será necessário fazer nada para 
                            que    *
                      00033 ; as operações aconteçam, desta forma estamos levando para um contexto real da aplicação pois na vida re
                            al     *
                      00034 ; tudo será feito automaticamente do início ao fim, a menos que seja implementado um sistema durante a  
                                   *
                      00035 ; interrupção do STOP, onde o usuário poderia operar manualmente algo que fosse eminente, por isso foi  
                                   *
                      00036 ; decidido utilizar LEDs nos sensores no lugar de Botões e Motores DC nas válvulas no lugar de LEDs, poi
                            s      *
                      00037 ; assim o contexto real da aplicação fica bem mais intuitivo. Os motores DC foram conectados em transist
                            ores,  *
                      00038 ; para garantir uma entrada de 5V nestes módulos e no circuito há 4 temporizadores para mostrar o tempo 
                                   *
                      00039 ; de operação das válvulas.                                                                             
                                   *
                      00040 ; ******************************************************************************************************
                            ********
                      00041 
                      00042 ; ---------------------------------------------------------------------------------------------------
                      00043 ; Inclusão da API do reator com todas as inclusões --------------------------------------------------
                      00044 #include        <reactlib.inc>                                          ; API do reator - Todas as inclu
                            sões aqui
                      00001 ; ******************************************************************************************************
                            **************************************
                      00002 ; Lista N.3 - Questão 1, 2 e 3 [Arquivo de Inclusão]
                      00003 ; Assembly Microcontrolador PIC16F877A
                      00004 ;
                      00005 ; Curso   : Eng. Elétrica da IFBA 
                      00006 ; Disciplina: ENG421 - Microprocessadores & Microcontroladores
                      00007 ; Autora  : Dirlene Napoleão                      Criação: 06/12/2021     Revisão: 07/12
                      00008 ; Clock   : 4MHz                                      Arquivo: reactlib.inc 
                      00009 ; Programa: Sistema de Reator Industrial para despache da preparação de produtos
                      00010 ;
                      00011 ;
                      00012 ; Descrição: Aqui estão as inclusões de sistemas importantes para o funcionamento do reator.
                      00013 ; Este arquivo é incluído no "ReactMain.asm" e os arquivos incluídos são responsáveis por definir as SFR
                            s,GPRs e FLAGs utilizadas,
                      00014 ; Construção de Macros para selecionar bancos, operações lógicas e salvar/recuperar contextos de interru
                            pção,
                      00015 ; Configurações iniciais do microcontrolador, incluindo configuração dos registros necessários,
                      00016 ; Armazenamento das funções e ISRs que são utilizadas como 'VOID_INT' e 'Delay500ms',
                      00017 ; E construção das macros de cada conjunto de equações booleanas, equações responsáveis pelo funcionamen
                            to contínuo do Reator
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00018 ; Que operam em um loop infinito do ReactMain.asm.
                      00019 ; ******************************************************************************************************
                            **************************************
                      00020 
                      00021 #IFNDEF         __REACTLIB_INC__
                      00022 #DEFINE         __REACTLIB_INC__                ; Isto permite só incluir se ainda não foi incluído
                      00023 
                      00024 ; --------------------------------------------------------------------------------------------------
                      00025 ; Inclusões de arquivos do Reator ------------------------------------------------------------------
                      00026 #include <reactdata.inc>                        ; Inclue as Definições dos dados: GPRs, SFRs & FLAGs
                      00001 ; **************************************************************************************************
                      00002 ; Lista N.3 - Questão 1, 2 e 3 [Arquivo de Inclusão]
                      00003 ; Assembly Microcontrolador PIC16F877A
                      00004 ;
                      00005 ; Curso   : Eng. Elétrica da IFBA 
                      00006 ; Disciplina: ENG421 - Microprocessadores & Microcontroladores
                      00007 ; Autora  : Dirlene Napoleão                      Criação: 06/12/2021     Revisão: 07/12
                      00008 ; Clock   : 4MHz                                      Arquivo: reactdata.inc 
                      00009 ; Programa: Sistema de Reator Industrial para despache da preparação de produtos
                      00010 ;
                      00011 ;
                      00012 ; Descrição: Este é um arquivo de inclusão com definições de dados de entrada e saída,
                      00013 ; Relacionado as válvulas, sensores e motores. Os pinos de PORTB,PORTC e PORTD serão 
                      00014 ; Reservados para estes módulos porém os bits dos registros FLAG1 & FLAG2 são para acionamentos
                      00015 ; específicos equivalentes a temporização e contagens, como as contagens dos registros 
                      00016 ; COUNT, CELSIUS e PSI onde COUNT faz contagens auxiliares de tempo junto com TMR0 para algumas
                      00017 ; Válvulas, exceto V3 e V4 pois para V3 o registro CELSIUS faz a contagem de 100Cº e para V4
                      00018 ; o registro PSI faz a contagem de 120psi, no final das contagens o sistema desaciona FLAGs 
                      00019 ; que vai determinar se TT & TP serão acionados, respectivamente. As outras variáveis com o "_TEMP"
                      00020 ; são para armazenar/recuperar contextos dos dados durante a interrupção de RB0/INT, Pino que é conectad
                            o
                      00021 ; no Botão STOP, isto porque o sistema é pausado, logo todos os registros precisam ser salvos antes
                      00022 ; deles serem apagados dentro da Interrupção.
                      00023 ; **************************************************************************************************
                      00024 
                      00025 #IFNDEF         __REACTDATA_INC__
                      00026 #DEFINE         __REACTDATA_INC__       ; Isto permite só incluir se ainda não foi incluído
                      00027 
                      00028 
                      00029 #define         I0              PORTB    ; I0 será as entradas de dados do sistema (Apenas RB0 e RB1)
                      00030 #define         Q0              PORTD    ; Q0 será as 1ª saídas de dados do sistema
                      00031 #define         Q1              PORTC    ; Q1 será as 2ª saídas de dados do sistema
                      00032 
                      00033 #define         STOP    I0,RB0   ; STOP  -> PORTB,0 = Interrupção (Botão) 
                      00034 #define         START   I0,RB1   ; START -> PORTB,1 = Inicio      (Botão)
                      00035 
                      00036 #define         LH              Q1,RC0   ; LH   -> PORTC,0 = Nivel Alto  (LED-GREEN)
                      00037 #define         LM              Q1,RC1   ; LM   -> PORTC,1 = Nivel Médio (LED-RED)
                      00038 #define         LL              Q1,RC2   ; LL   -> PORTC,2 = Nivel Baixo (LED-YELLOW)
                      00039 #define         TT              Q1,RC3   ; TT   -> PORTC,3 = Temperatura (LED-BLUE)
                      00040 #define         TP              Q1,RC4   ; TP   -> PORTC,4 = Pressão     (LED-YELLOW)
                      00041 #define         ST              Q1,RC5   ; ST   -> PORTC,5 = Indica Reator Operando
                      00042 #define         FN              Q1,RC6   ; FN   -> PORTC,6 = Indica Reator Finalizando
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00043 #define         PS              Q1,RC7   ; PS   -> PORTC,7 = Indica Reator Pausado
                      00044 
                      00045 #define         V1              Q0,RD0   ; V1   -> PORTD,0 = Válvula 1 (Motor-DC)
                      00046 #define         V2              Q0,RD1   ; V2   -> PORTD,1 = Válvula 2 (Motor-DC)
                      00047 #define         V3              Q0,RD2   ; V3   -> PORTD,2 = Válvula 3 (Motor-DC)
                      00048 #define         V4              Q0,RD3   ; V4   -> PORTD,3 = Válvula 4 (Motor-DC)
                      00049 #define         V5              Q0,RD4   ; V5   -> PORTD,4 = Válvula 5 (Motor-DC)
                      00050 #define         V6              Q0,RD5   ; V6   -> PORTD,5 = Válvula 6 (Motor-DC)
                      00051 #define         MOT1    Q0,RD6   ; MOT1 -> PORTD,6 = Motor 1   (Motor-DC)
                      00052 #define         BOMB    Q0,RD7   ; BOMB -> PORTD,7 = Bomba     (Motor-DC)       
                      00053 
                      00054 #define         C100    FLAG1,0  ; Flag que indica 100 graus celsius de TT
                      00055 #define         T1              FLAG1,1  ; Flag de Retardo de 1s entre V1 e V2
                      00056 #define         RT      FLAG1,2  ; Flag de Repouso de 3s para Temperatura TT
                      00057 #define         P1L     FLAG1,3  ; Flag do nível baixo do Produto1 para sensor LL
                      00058 #define         P1M     FLAG1,4  ; Flag do nível médio do Produto1 para sensor LM
                      00059 #define         P2H     FLAG1,5  ; Flag do nível alto do Produto2 para sensor LH
                      00060 #define         T12     FLAG1,6  ; Flag de Retenção de 12s para MOT1
                      00061 #define         P3              FLAG1,7  ; Flag de Retenção de 3s para BOMBA do Produto3
                      00062 
                      00063 #define         LHON    FLAG2,0  ; Flag que indica LH acionado
                      00064 #define         LMON    FLAG2,1  ; Flag que indica LM acionado
                      00065 #define         LLON    FLAG2,2  ; Flag que indica LL acionado
                      00066 #define         RESC    FLAG2,3  ; Flag que indica reservatorio secundario cheio
                      00067 #define         P120    FLAG2,4  ; Flag que indica 120 psi de pressão
                      00068 #define         EOP     FLAG2,5  ; Flag que indica fim do programa
                      00069 
                      00070 #define         TIMER   PORTB,RB2       ; Utilizado como saída para módulo timer de V2 no Proteus       
                             
                      00071 #define         RESETS  PORTB,RB3       ; Utilizado como saída para LED de RESET
                      00072 
Warning[205]: Found directive in column 1. (CBLOCK)
                      00073 CBLOCK          H'20'                   ; Bloco da memória de dados
  00000020            00074         TEMP                                    ; Registro temporario p/ Instruções booleanas
  00000021            00075         W_TEMP                                  ; Registro WORK temporario p/ Interrupcoes Gerais
  00000022            00076         STATUS_TEMP                             ; Registro STATUS temporario p/ Interrupcoes Gerais
  00000023            00077         PCLATH_TEMP                             ; Registro PCLATH temporario p/ Interrupcoes Gerais
  00000024            00078         Q0_TEMP                                 ; Registro Q0 temporario (PORTD) p/ Interrupção do STOP
  00000025            00079         Q1_TEMP                                 ; Registro Q1 temporario (PORTC) p/ Interrupção do STOP
  00000026            00080         FLAG1_TEMP                              ; Registro FLAG1 temporario (Para temporizadores) p/ Int
                            errupção do STOP
  00000027            00081         FLAG2_TEMP                              ; Registro FLAG2 temporario (Para Acionamentos) p/ Inter
                            rupção do STOP
  00000028            00082         CELS_TEMP                               ; Registro contador CELSIUS temporario p/ Interrupção do
                             STOP
  00000029            00083         PSI_TEMP                                ; Registro contador PSI temporario p/ Interrupção do STO
                            P
  0000002A            00084         TMR0_TEMP                               ; Registro TMR0 temporario p/ Interrupção do STOP
  0000002B            00085         COUNT_TEMP                              ; Registro COUNT temporario p/ Interrupção do STOP
  0000002C            00086         FLAG1                                   ; Registro de Flags para tempo e contagens
  0000002D            00087         FLAG2                                   ; Registro de Flags de acionamento
  0000002E            00088         COUNT                                   ; Contador de Tempo para valvulas (Exceto pra V3 e V4)
  0000002F            00089         CELSIUS                                 ; Registro contador de Graus Celsius para TT
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000030            00090         PSI                                     ; Registro contador de Pressão Interna para TP
  00000031            00091         DELAY1                                  ; Registro para contagem de Delay na ISR p/ Interrupção 
                            do STOP
  00000032            00092         DELAY2                                  ; Registro para contagem de Delay na ISR p/ Interrupção 
                            do STOP
Warning[205]: Found directive in column 1. (ENDC)
                      00093 ENDC                                            ; Fim do Bloco da memória de dados
                      00094 
                      00095 #ENDIF
                      00027 #include <reactmacr.inc>                        ; Inclue as Macros para seleção de bancos, instruções ló
                            gicas e contextos.
                      00001 ; **************************************************************************************************
                      00002 ; Lista N.3 - Questão 1, 2 e 3 [Arquivo de Inclusão]
                      00003 ; Assembly Microcontrolador PIC16F877A
                      00004 ;
                      00005 ; Curso   : Eng. Elétrica da IFBA 
                      00006 ; Disciplina: ENG421 - Microprocessadores & Microcontroladores
                      00007 ; Autora  : Dirlene Napoleão                      Criação: 06/12/2021     Revisão: 07/12
                      00008 ; Clock   : 4MHz                                      Arquivo: reactmacr.inc 
                      00009 ; Programa: Sistema de Reator Industrial para despache da preparação de produtos
                      00010 ;
                      00011 ;
                      00012 ; Descrição: Este é um arquivo de Macros para seleção de bancos, salvamento de contextos durante
                      00013 ; a interrupção e operações lógicas OR, AND, XOR, NOT, ORN, ANDN, XORN e as operações auxiliares 
                      00014 ; IN e OUT. IN é a entrada do dado (INPUT) que serve para carregar um valor lógico inicial 0 ou 1
                      00015 ; de um módulo específico e OUT é a saída do dado (OUTPUT) que serve para enviar o resultado final
                      00016 ; para um módulo específico. O OUT de fato vai alterar o estado do módulo, tornando-o ativo ou inativo.
                      00017 ; Já a operação WHEN é algo novo, pois ela simboliza o "tempo de operação" de um módulo. O WHEN 
                      00018 ; Opera em 10 módulos diferentes, sendo eles: LL,LM,LH,V2,MOT1,V3,TT,V5,V4 e BOMB. Os módulos com tempo
                      00019 ; de retenção de acionamento são MOT1 e BOMB, Já de V2 é o tempo de retardo para ser ligado após o 
                      00020 ; o desligamento de V1, porém tem os tempos adicionais utilizados em outros módulos, como LL,LM e LH. 
                      00021 ; Entre o acionamento destes sensores, existe um intervalo de tempo para simbolizar que os produtos estã
                            o 
                      00022 ; sendo despejados, vamos dizer que num contexto real, o "líquido" do produto tem um tempo natural para 
                      00023 ; encher o reservatório até chegar naquele nível, então eu presumir este tempo através do WHEN. V3 é 
                      00024 ; responsável por aquecer o reservatório até 100 graus e V4 por dar a pressão interna de 120psi, então t
                            ambém 
                      00025 ; presumir que tanto a temperatura como a pressão, poderiam ser determinados por um timer. V5 faz o proc
                            esso 
                      00026 ; inverso de V1 e V2, enquanto que V1 e V2 "aciona" os sensores de baixo para cima (Enchendo o reservató
                            rio), V5 
                      00027 ; "desaciona" os sensores de cima para baixo, ou seja, despachando a mistura do 1ª reservatório para
                      00028 ; o 2ª reservatório, portanto V5 também terá o mesmo tempo que V1 e V2 teve para despachar o líquido.
                      00029 ; Os únicos módulos que não tem um timer definido é V1 e V6, porque V1 não depende definitivamente do Te
                            mpo
                      00030 ; mas sim, do sensor LM. Enquanto que V6 também não depende do tempo mas sim, do usuário. V6 fica ligado
                      00031 ; até que o usuário pressione RESET, após isto, todo o sistema é reiniciado, esperando novamente que
                      00032 ; o usuário pressione START para recomeçar tudo.
                      00033 ; **************************************************************************************************
                      00034 
                      00035 #IFNDEF         __REACTMACR_INC__
                      00036 #DEFINE         __REACTMACR_INC__       ; Isto permite só incluir se ainda não foi incluído
                      00037 
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00038 
                      00039 ; --- Macro para seleção de bancos de memoria ------------------------------------------------------
                      00040 ; --------------------------------------------------------------------------------------------------
                      00041 BANK_SELECT   macro     num             ; Nome da Macro
                      00042         IF      num==0                                  ; Argumento é igual ao Banco 0?
                      00043                 bcf     STATUS,RP0              ; Sim, limpe o bit RP0 de STATUS
                      00044                 bcf     STATUS,RP1              ; Sim, limpe o bit RP1 de STATUS
                      00045         ENDIF
                      00046         IF      num==1                                  ; Argumento é igual ao Banco 1?
                      00047                 bsf     STATUS,RP0              ; Sim, sete o bit RP0 de STATUS
                      00048                 bcf     STATUS,RP1              ; Sim, limpe o bit RP1 de STATUS
                      00049         ENDIF
                      00050         IF      num==2                                  ; Argumento é igual ao Banco 2?
                      00051                 bcf     STATUS,RP0              ; Sim, limpe o bit RP0 de STATUS
                      00052                 bsf     STATUS,RP1              ; Sim, sete o bit RP1 de STATUS
                      00053         ENDIF
                      00054         IF      num==3                                  ; Argumento é igual ao Banco 3?
                      00055                 bsf     STATUS,RP0              ; Sim, sete o bit RP0 de STATUS
                      00056                 bsf     STATUS,RP1              ; Sim, sete o bit RP1 de STATUS
                      00057         ENDIF
Warning[205]: Found directive in column 1. (ENDM)
                      00058 ENDM                                                    ; Fim da Macro
                      00059 ; --------------------------------------------------------------------------------------------------
                      00060 
                      00061 ; --- Macro para Armazenamento de Contextos --------------------------------------------------------
                      00062 ; --------------------------------------------------------------------------------------------------
                      00063 STORE_CONTEXT   macro                   ; Macro STORE_CONTEXT (0 argumento)
                      00064         movwf    W_TEMP                         ; Salve W em W_TEMP 
                      00065         swapf    STATUS,W               ; Faça uma troca de Nibbles de STATUS, mova para W
                      00066         clrf     STATUS                         ; Limpe o conteúdo de STATUS
                      00067         movwf    STATUS_TEMP            ; Salve W em STATUS_TEMP
                      00068         movf     PCLATH, W              ; Mova PCLATH para W
                      00069         movwf    PCLATH_TEMP            ; Salve W em PCLATH_TEMP
                      00070         clrf     PCLATH                 ; Limpe o conteúdo de PCLATH
Warning[205]: Found directive in column 1. (ENDM)
                      00071 ENDM                                                    ; Fim da Macro
                      00072 ; --------------------------------------------------------------------------------------------------
                      00073 
                      00074 ; --- Macro para Recuperação de Contextos ----------------------------------------------------------
                      00075 ; --------------------------------------------------------------------------------------------------
                      00076 RESTORE_CONTEXT         macro           ; Macro RESTORE_CONTEXT (0 argumento)
                      00077 IEND:                                                   ; Label para fim da interrupcao
                      00078         movf     PCLATH_TEMP, W         ; Mova PCLATH_TEMP para W
                      00079         movwf    PCLATH                 ; Recupere o conteúdo de PCLATH
                      00080         swapf    STATUS_TEMP,W          ; Faça uma troca de Nibbles de STATUS_TEMP, mova para W   
                      00081         movwf    STATUS                 ; Recupere o conteúdo de STATUS
                      00082         swapf    W_TEMP,F                       ; Faça uma troca de Nibbles de W_TEMP, salva nele mesmo
                      00083         swapf    W_TEMP,W               ; Faça uma troca de Nibbles de W_TEMP, recupera W
Warning[205]: Found directive in column 1. (ENDM)
                      00084 ENDM                                                    ; Fim da Macro
                      00085 ; --------------------------------------------------------------------------------------------------
                      00086 
                      00087 ; --- Entrada de um dado lógico --------------------------------------------------------------------
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00088 ; --------------------------------------------------------------------------------------------------
                      00089 IN              macro   reg,bit                 ; Macro IN: Argumentos reg e bit
                      00090         clrw                                            ; Limpe o conteudo de W -> W = 0
                      00091         btfsc   reg,bit                         ; O BIT 'bit' do registro 'reg' é 0?
                      00092         movlw   H'01'                           ; Não, Salve 1 em W
                      00093         nop                                                     ; Sim, W permanece em 0
Warning[205]: Found directive in column 1. (ENDM)
                      00094 ENDM                                                    ; Fim da Macro
                      00095 ; --------------------------------------------------------------------------------------------------
                      00096 
                      00097 ; --- Carrega um dado lógico negado ----------------------------------------------------------------
                      00098 ; --------------------------------------------------------------------------------------------------
                      00099 NOT             macro   reg,bit                 ; Macro NOT: Argumentos reg e bit
                      00100         clrw                                            ; Limpe o conteúdo de W -> W = 0
                      00101         btfss   reg,bit                         ; O BIT 'bit' do registro 'reg' é 1?
                      00102         movlw   H'01'                           ; Não, Muda 0 para 1 em W
                      00103         nop                                                     ; Sim, W permanece em 0
Warning[205]: Found directive in column 1. (ENDM)
                      00104 ENDM                                                    ; Fim da Macro
                      00105 ; --------------------------------------------------------------------------------------------------
                      00106 
                      00107 ; --- Operação OR com o dado em TEMP ---------------------------------------------------------------
                      00108 ; --------------------------------------------------------------------------------------------------
                      00109 OR              macro   reg,bit                 ; Macro OR: Argumentos reg e bit
                      00110         movwf   TEMP                            ; Salva o dado anterior em TEMP
                      00111         clrw                                            ; Limpa o W, W = 0
                      00112         btfsc   reg,bit                         ; O dado atual é 0?
                      00113         movlw   H'01'                           ; Não, Então W será 1
                      00114         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
Warning[205]: Found directive in column 1. (ENDM)
                      00115 ENDM                                                    ; Fim da Macro
                      00116 ; --------------------------------------------------------------------------------------------------
                      00117 
                      00118 ; --- Operação OR negado com o dado em TEMP --------------------------------------------------------
                      00119 ; --------------------------------------------------------------------------------------------------
                      00120 ORN             macro   reg,bit                 ; Macro ORN: Argumentos reg e bit
                      00121         movwf   TEMP                            ; Salva o dado anterior em TEMP
                      00122         clrw                                            ; Limpa o W, W = 0
                      00123         btfss   reg,bit                         ; O dado atual é 1?
                      00124         movlw   H'01'                           ; Não, Então W será 1
                      00125         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
Warning[205]: Found directive in column 1. (ENDM)
                      00126 ENDM                                                    ; Fim da Macro
                      00127 ; --------------------------------------------------------------------------------------------------
                      00128 
                      00129 ; --- Operação AND com o dado em TEMP --------------------------------------------------------------
                      00130 ; --------------------------------------------------------------------------------------------------
                      00131 AND             macro   reg,bit                 ; Macro AND: Argumentos reg e bit
                      00132         movwf   TEMP                            ; Salva o dado anterior em TEMP
                      00133         clrw                                            ; Limpa o W, W = 0
                      00134         btfsc   reg,bit                         ; O dado atual é 0?
                      00135         movlw   H'01'                           ; Não, Então W será 1
                      00136         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[205]: Found directive in column 1. (ENDM)
                      00137 ENDM                                                    ; Fim da Macro
                      00138 ; --------------------------------------------------------------------------------------------------
                      00139 
                      00140 ; --- Operação AND negado com o dado em TEMP -------------------------------------------------------
                      00141 ; --------------------------------------------------------------------------------------------------
                      00142 ANDN    macro   reg,bit                 ; Macro ANDN: Argumentos reg e bit
                      00143         movwf   TEMP                            ; Salva o dado anterior em TEMP
                      00144         clrw                                            ; Limpa o W, W = 0
                      00145         btfss   reg,bit                         ; O dado atual é 1?
                      00146         movlw   H'01'                           ; Não, Então W será 1
                      00147         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
Warning[205]: Found directive in column 1. (ENDM)
                      00148 ENDM                                                    ; Fim da Macro
                      00149 ; --------------------------------------------------------------------------------------------------
                      00150 
                      00151 ; --- Operação XOR com o dado em TEMP --------------------------------------------------------------
                      00152 ; --------------------------------------------------------------------------------------------------
                      00153 XOR         macro   reg,bit                     ; Macro XOR: Argumentos reg e bit
                      00154         movwf   TEMP                            ; Salva o dado anterior em TEMP
                      00155         clrw                                            ; Limpa o W, W = 0
                      00156         btfsc   reg,bit                         ; O dado atual é 0?
                      00157         movlw   H'01'                           ; Não, Então W será 1
                      00158         xorwf   TEMP,W                          ; Sim, Salva em W um XOR de W com o dado anterior
Warning[205]: Found directive in column 1. (ENDM)
                      00159 ENDM                                                    ; Fim da Macro
                      00160 ; --------------------------------------------------------------------------------------------------
                      00161 
                      00162 ; --- Operação XOR negada com o dado em TEMP -------------------------------------------------------
                      00163 ; --------------------------------------------------------------------------------------------------
                      00164 XORN      macro   reg,bit               ; Macro XORN: Argumentos reg e bit
                      00165         movwf   TEMP                            ; Salva o dado anterior em TEMP
                      00166         clrw                                            ; Limpa o W, W = 0
                      00167         btfss   reg,bit                         ; O dado atual é 1?
                      00168         movlw   H'01'                           ; Não, Então W será 1
                      00169         xorwf   TEMP,W                          ; Sim, Salva em W um XOR de W com o dado anterior
Warning[205]: Found directive in column 1. (ENDM)
                      00170 ENDM                                                    ; Fim da Macro
                      00171 ; --------------------------------------------------------------------------------------------------
                      00172 
                      00173 ; --- Saída de um resultado no bit do registro -----------------------------------------------------
                      00174 ; --------------------------------------------------------------------------------------------------
                      00175 OUT     macro   reg,bit                 ; Macro OUT: Argumentos reg e bit
                      00176         movwf   TEMP                            ; Salva o dado anterior em TEMP
                      00177         andlw   H'01'                           ; Faça um AND de W com 1
                      00178         btfss   STATUS,Z                        ; O resultado do AND deu 0?
                      00179         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
                      00180         bcf     reg,bit                         ; Sim, Então limpe o BIT 'bit' do registro 'reg'
                      00181         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
                      00182         bsf     reg,bit                         ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
                      00183         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
Warning[205]: Found directive in column 1. (ENDM)
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00184 ENDM                                                    ; Fim da macro
                      00185 ; --------------------------------------------------------------------------------------------------
                      00186 
                      00187 
                      00188 ; --- Macro para tempo de operação -----------------------------------------------------------------
                      00189 ; Esta macro com o seu nome 'WHEN' exprime uma noção de "tempo", pois é quando algo ocorre. Ela faz
                      00190 ; exatamente isto, ela é uma condição para um ou dois módulos : se este(s) módulo(s) está ligado ou 
                      00191 ; desligado, a responsabilidade do WHEN é iniciar uma temporização, setando uma FLAG específica para
                      00192 ; aquele módulo dizendo que a contagem de tempo está ativa, quando o tempo finaliza, a FLAG que foi
                      00193 ; setada é agora limpada, onde o valor da FLAG será utilizada para determinar o resultado do módulo.
                      00194 ; Após a FLAG ser limpada, o temporizador fica inativo.
                      00195 ; --------------------------------------------------------------------------------------------------
                      00196 WHEN   macro    reg,bit                                 ; Macro WHEN: Argumentos reg e bit
                      00197 
                      00198         ; Retardo de 1 segundo para ligar V2
                      00199         if      reg==FLAG1 & bit==1                             ; Se argumento for a FLAG T1 então faça 
                            o código abaixo...
                      00200                         btfsc   LH                                      ; Se LH estiver inativo, salte 1
                             instrução
                      00201                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                      00202                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                      00203                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                      00204                         btfsc   V1                                      ; Se V1 estiver desligado salte 
                            1 instrução
                      00205                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                      00206                         btfsc   V2                                      ; Se V2 estiver desligado salte 
                            1 instrução
                      00207                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim     
                      00208                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                      00209                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim                     
                      00210                         btfsc   T1                                      ; Se T1 estiver inativo, inicie 
                            o temporizador
                      00211                         goto    ENDV10                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                      00212                         movlw   D'11'                           ; Mova o valor 11 para W
                      00213                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 11 a
                            té 255 (245 contagens)
                      00214                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                      00215                         bsf     T1                                      ; Ative a Flag T1 pra indicar qu
                            e a temporização está ativa
                      00216                         bsf     TIMER                           ; Ligue o display de tempo do Proteus
                      00217                 ENDV10:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                      00218                         movlw   D'16'                           ; Mova o valor 16 para W
                      00219                         xorwf   COUNT,W                         ; Compare COUNT com 16 (COUNT vai de 0 a
                             16)
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00220                         btfss   STATUS,Z                        ; Z=1? ou 16 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=16
                      00221                         goto    ENDV1                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                      00222                         bcf     TIMER                           ; Desligue o display de tempo do Proteus
                      00223                         bcf     T1                                      ; Se sim, então desative a Flag 
                            T1
                      00224                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                      00225                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                      00226                 ENDV1:                                                  ; Fim da Execução
                      00227         endif                                                           ; Fim da Condição
                      00228 
                      00229         ; Tempo de 2,2 segundos para ativar LL (Tempo imaginário de enchimento)
                      00230         if      reg==FLAG1 & bit==3                             ; Se argumento for a FLAG P1L então faça
                             o código abaixo...
                      00231                         btfsc   LL                                      ; Se LL estiver inativo salte 1 
                            instrução
                      00232                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                      00233                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
                      00234                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                      00235                         btfsc   P1L                                     ; Se P1L estiver inativo, inicie
                             o temporizador
                      00236                         goto    ENDLL0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                      00237                         movlw   D'6'                            ; Mova o valor 6 para W
                      00238                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)
                      00239                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                      00240                         bsf     P1L                                     ; Ative a Flag P1L pra indicar q
                            ue a temporização está ativa
                      00241                 ENDLL0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                      00242                         movlw   D'35'                           ; Mova o valor 35 para W
                      00243                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)
                      00244                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                      00245                         goto    ENDLL                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                      00246                         bcf     P1L                                     ; Se sim, então desative a Flag 
                            P1L
                      00247                         bsf     LLON                            ; Ative a Flag LLON pra indicar que LL e
                            stá ativo
                      00248                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                      00249                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                      00250                 ENDLL:                                                  ; Fim da Execução
                      00251         endif                                                           ; Fim da Condição
                      00252         
                      00253         ; Tempo de 2,2 segundos para ativar LM (Tempo imaginário de enchimento)
                      00254         if      reg==FLAG1 & bit==4                             ; Se argumento for a FLAG P1M então faça
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                             o código abaixo...
                      00255                         btfsc   LM                                      ; Se LM estiver inativo salte 1 
                            instrução
                      00256                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                      00257                         btfss   LL                                      ; Se LL estiver ativo, salte 1 i
                            nstrução
                      00258                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                      00259                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
                      00260                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                      00261                         btfsc   P1M                                     ; Se P1M estiver inativo, inicie
                             o temporizador
                      00262                         goto    ENDLM0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                      00263                         movlw   D'6'                            ; Mova o valor 6 para W 
                      00264                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                      00265                         bsf     INTCON,TMR0IE           ; Inicie o temporizador         
                      00266                         bsf     P1M                                     ; Ative a Flag P1M pra indicar q
                            ue a temporização está ativa
                      00267                 ENDLM0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                      00268                         movlw   D'35'                           ; Mova o valor 35 para W        
                      00269                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                      00270                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35      
                      00271                         goto    ENDLM                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                      00272                         bcf     P1M                                     ; Se sim, então desative a Flag 
                            P1M     
                      00273                         bsf     LMON                            ; Ative a Flag LMON pra indicar que LM e
                            stá ativo
                      00274                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                      00275                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                      00276                 ENDLM:                                                  ; Fim da Execução
                      00277         endif                                                           ; Fim da Condição
                      00278 
                      00279         ; Tempo de 2,2 segundos para ativar LH
                      00280         if      reg==FLAG1 & bit==5                             ; Se argumento for a FLAG P1H então faça
                             o código abaixo...
                      00281                         btfsc   LH                                      ; Se LH estiver inativo salte 1 
                            instrução
                      00282                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                      00283                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                      00284                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                      00285                         btfss   V2                                      ; Se V2 estiver ativo, salte 1 i
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            nstrução
                      00286                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                      00287                         btfsc   P2H                                     ; Se P1H estiver inativo, inicie
                             o temporizador
                      00288                         goto    ENDLH0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                      00289                         movlw   D'6'                            ; Mova o valor 6 para W         
                      00290                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                      00291                         bsf     INTCON,TMR0IE           ; Inicie o temporizador 
                      00292                         bsf     P2H                                     ; Ative a Flag P2H pra indicar q
                            ue a temporização está ativa
                      00293                 ENDLH0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                      00294                         movlw   D'35'                           ; Mova o valor 35 para W        
                      00295                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                      00296                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                      00297                         goto    ENDLH                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                      00298                         bcf     P2H                                     ; Se sim, então desative a Flag 
                            P2H  
                      00299                         bsf     LHON                            ; Ative a Flag LHON pra indicar que LH e
                            stá ativo
                      00300                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                      00301                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                      00302                 ENDLH:                                                  ; Fim da Execução
                      00303         endif                                                           ; Fim da Condição
                      00304         
                      00305         ; Tempo de retenção de 12 segundos para desligar MOT1
                      00306         if      reg==FLAG1 & bit==6                             ; Se argumento for a FLAG T12 então faça
                             o código abaixo...             
                      00307                         btfss   MOT1                            ; Se MOT1 estiver ligado salte 1 instruç
                            ão      
                      00308                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim 
                      00309                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
                      00310                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim
                      00311                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                      00312                         goto    MOT1OFF                         ; Não execute o temporizador, Vai para o
                             fim
                      00313                         btfsc   T12                                     ; Se T12 estiver inativo, inicie
                             o temporizador         
                      00314                         goto    COUNTER                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.              
                      00315                         movlw   D'6'                            ; Mova o valor 6 para W                 
                      00316                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00317                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                      00318                         bsf     T12                                     ; Ative a Flag T12 pra indicar q
                            ue a temporização está ativa
                      00319                 COUNTER:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                      00320                         movlw   D'153'                          ; Mova o valor 153 para W       
                      00321                         xorwf   COUNT,W                         ; Compare COUNT com 153 (COUNT vai de 0 
                            a 153)  
                      00322                         btfss   STATUS,Z                        ; Z=1? ou 153 xor COUNT = 0? Se sim, sig
                            nifica que COUNT=153    
                      00323                         goto    MOT1OFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                      00324                         bcf     T12                                     ; Se sim, então desative a Flag 
                            T12   
                      00325                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                      00326                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                      00327                 MOT1OFF:                                                ; Fim da Execução
                      00328         endif                                                           ; Fim da Condição
                      00329 
                      00330         ; Tempo de 3,9 segundos para chegar a 100Cº
                      00331         if      reg==FLAG1 & bit==0                             ; Se argumento for a FLAG C100 então faç
                            a o código abaixo...    
                      00332                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução     
                      00333                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                      00334                         btfsc   TT                                      ; Se LH estiver inativo salte 1 
                            instrução
                      00335                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                      00336                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
                      00337                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                      00338                         btfsc   MOT1                            ; Se MOT1 estiver desligado salte 1 inst
                            rução   
                      00339                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                      00340                         btfsc   C100                            ; Se C100 estiver inativo, inicie o temp
                            orizador
                      00341                         goto    ENDTT0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                      00342                         movlw   D'100'                          ; Mova o valor 100 para W               
                      00343                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 100 
                            até 255 (156 contagens)         
                      00344                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                      00345                         bsf     C100                            ; Ative a Flag C100 pra indicar que a te
                            mporização está ativa
                      00346                 ENDTT0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                      00347                         movlw   D'100'                          ; Mova o valor 100 para W       
                      00348                         xorwf   CELSIUS,W                       ; Compare CELSIUS com 100Cº (CELSIUS vai
                             de 0 a 100)    
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00349                         btfss   STATUS,Z                        ; Z=1? ou 100 xor CELSIUS = 0? Se sim, s
                            ignifica que CELSIUS=100
                      00350                         goto    ENDTT                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                      00351                         bcf     C100                            ; Se sim, então desative a Flag C100   
                      00352                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                      00353                 ENDTT:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo CELSIUS, para fins de depuração.
                      00354         endif                                                           ; Fim da Condição
                      00355         
                      00356         ; Tempo de 3 segundos do repouso do aquecimento
                      00357         if      reg==FLAG1 & bit==2                             ; Se argumento for a FLAG RT então faça 
                            o código abaixo...
                      00358                         btfss   TT                                      ; Se TT estiver ativo salte 1 in
                            strução 
                      00359                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                      00360                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                      00361                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                      00362                         btfsc   RT                                      ; Se RT estiver inativo, inicie 
                            o temporizador
                      00363                         goto    ENDR0                           ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                      00364                         movlw   D'6'                            ; Mova o valor 6 para W         
                      00365                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)                   
                      00366                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                      00367                         bsf     RT                                      ; Ative a Flag RT pra indicar qu
                            e a temporização está ativa
                      00368                 ENDR0:                                                  ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                      00369                         movlw   D'47'                           ; Mova o valor 47 para W        
                      00370                         xorwf   COUNT,W                         ; Compare COUNT com 47 (COUNT vai de 0 a
                             47)    
                      00371                         btfss   STATUS,Z                        ; Z=1? ou 47 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=47
                      00372                         goto    ENDR                            ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                      00373                         bcf     RT                                      ; Se sim, então desative a Flag 
                            RT   
                      00374                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                      00375                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                      00376                 ENDR:                                                   ; Fim da Execução
                      00377         endif                                                           ; Fim da Condição
                      00378 
                      00379         ; Tempo de 2,2 segundos para desativar LH,LM e LL nesta ordem
                      00380         if      reg==Q0 & bit==4                                ; Se argumento for V5 então faça o códig
                            o abaixo...
                      00381                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                      00382                         goto    STARTV5                         ; Se estiver ligado, Começe as verificaç
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            ões
                      00383                         goto    ENDV5                           ; Salte para o fim e não faça nada
                      00384                 STARTV5:                                                ; VERIFICAÇÃO DOS SENSORES -----
                            -------------------
                      00385                         btfsc   LH                                      ; LH está ativado?
                      00386                         goto    LHSTART                         ; Sim, então verifique o tempo de LH
                      00387                         btfsc   LM                                      ; Não, LM está ativado?
                      00388                         goto    LMSTART                         ; Sim, então verifique o tempo de LM
                      00389                         btfsc   LL                                      ; Não, LL está ativado?
                      00390                         goto    LLSTART                         ; Sim, então verifique o tempo de LL
                      00391                         goto    ENDV5                           ; Não, Então saia e não faça nada
                      00392                 LHSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LH ---
                            --------------------
                      00393                         btfss   P2H                                     ; A Flag P2H está acionada?
                      00394                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                      00395                         movlw   D'35'                           ; Sim, então mova 35 para W
                      00396                         xorwf   COUNT,W                         ; Compara COUNT com 35
                      00397                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                      00398                         goto    ENDV5                           ; Não, então vai para o fim
                      00399                         clrf    COUNT                           ; Sim, então limpe o contador
                      00400                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0
                      00401                         bcf     P2H                                     ; desacione a Flag P2H
                      00402                         bcf     P1L                                     ; desacione a Flag P1L
                      00403                         bcf     P1M                                     ; desacione a Flag P1M
                      00404                         bcf     LHON                            ; desacione a Flag LHON indicando que LH
                             está inativo
                      00405                         goto    ENDV5                           ; Finalize as operações
                      00406                 LMSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LM ---
                            --------------------
                      00407                         btfss   P1M                                     ; A Flag P1M está acionada?
                      00408                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                      00409                         movlw   D'35'                           ; Sim, então mova 35 para W     
                      00410                         xorwf   COUNT,W                         ; Compara COUNT com 35  
                      00411                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                      00412                         goto    ENDV5                           ; Não, então vai para o fim     
                      00413                         clrf    COUNT                           ; Sim, então limpe o contador
                      00414                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0 
                      00415                         bcf     P2H                                     ; desacione a Flag P2H
                      00416                         bcf     P1L                                     ; desacione a Flag P1L
                      00417                         bcf     P1M                                     ; desacione a Flag P1M
                      00418                         bcf     LMON                            ; desacione a Flag LMON indicando que LM
                             está inativo
                      00419                         goto    ENDV5                           ; Finalize as operações
                      00420                 LLSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LL ---
                            --------------------
                      00421                         btfss   P1L                                     ; A Flag P1L está acionada?
                      00422                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                      00423                         movlw   D'35'                           ; Sim, então mova 35 para W             
                      00424                         xorwf   COUNT,W                         ; Compara COUNT com 35          
                      00425                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                      00426                         goto    ENDV5                           ; Não, então vai para o fim             
                      00427                         clrf    COUNT                           ; Sim, então limpe o contador
                      00428                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0  
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00429                         bcf     P2H                                     ; desacione a Flag P2H
                      00430                         bcf     P1L                                     ; desacione a Flag P1L
                      00431                         bcf     P1M                                     ; desacione a Flag P1M
                      00432                         bcf     LLON                            ; desacione a Flag LLON indicando que LL
                             está inativo
                      00433                         bsf     RESC                            ; acione a Flag RESC indicando que o 2ª 
                            reservatorio esta cheio
                      00434                         goto    ENDV5                           ; Finalize as operações
                      00435                 STARTTIMER:                                             ; INICIALIZAÇÃO DO TEMPORIZADOR 
                            ----------------------
                      00436                         movlw   D'6'                            ; Mova o valor 6 para W
                      00437                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                      00438                         bsf     INTCON,TMR0IE           ; Ative o temporizador   
                      00439                         bsf     P1L                                     ; Acione a Flag P1L
                      00440                         bsf     P1M                                     ; Acione a Flag P1M
                      00441                         bsf     P2H                                     ; Acione a Flag P2H
                      00442                 ENDV5:                                                  ; Fim da Execução
                      00443         endif                                                           ; Fim da Condição
                      00444 
                      00445         ; Tempo de 4,1 segundos para chegar a 120psi
                      00446         if      reg==FLAG2 & bit==4                             ; Se argumento for a FLAG P120 então faç
                            a o código abaixo...
                      00447                         btfss   V4                                      ; Se V4 estiver ligado salte 1 i
                            nstrução        
                      00448                         goto    ENDV4                           ; Não execute o temporizador, Vai para o
                             fim
                      00449                         btfsc   P120                            ; Se P120 estiver inativo salte 1 instru
                            ção
                      00450                         goto    ENDRES                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                      00451                         movlw   D'120'                          ; Mova o valor 120 para W               
                      00452                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 120 
                            até 255 (136 contagens)         
                      00453                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                      00454                         bsf     P120                            ; Ative a Flag P120 pra indicar que a te
                            mporização está ativa
                      00455                 ENDRES:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                      00456                         movlw   D'120'                          ; Mova o valor 120 para W       
                      00457                         xorwf   PSI,W                           ; Compare PSI com 120psi (PSI vai de 0 a
                             120)   
                      00458                         btfss   STATUS,Z                        ; Z=1? ou 120 xor PSI = 0? Se sim, signi
                            fica que PSI=120
                      00459                         goto    ENDV4                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                      00460                         bcf     P120                            ; Se sim, então desative a Flag P120
                      00461                         bcf     RESC                            ; Desative a FLAG RESC
                      00462                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                      00463                 ENDV4:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo PSI, para fins de depuração.
                      00464         endif                                                           ; Fim da Condição
                      00465 
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00466         ; Tempo de retenção de 5 segundos para desligar BOMB 
                      00467         if      reg==Q0 & bit==7                                ; Se argumento for BOMB então faça o cód
                            igo abaixo...   
                      00468                         btfss   BOMB                            ; Se BOMB estiver ligado salte 1 instruç
                            ão              
                      00469                         goto    BOMBOFF                         ; Não execute o temporizador, Vai para o
                             fim 
                      00470                         btfsc   P3                                      ; Se P3 estiver inativo, inicie 
                            o temporizador          
                      00471                         goto    COUNTP3                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                      00472                         movlw   D'6'                            ; Mova o valor 6 para W
                      00473                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                      00474                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                      00475                         bsf     P3                                      ; Ative a Flag P3 pra indicar qu
                            e a temporização está ativa     
                      00476                 COUNTP3:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                      00477                         movlw   D'78'                           ; Mova o valor 78 para W
                      00478                         xorwf   COUNT,W                         ; Compare COUNT com 78 (COUNT vai de 0 a
                             78)    
                      00479                         btfss   STATUS,Z                        ; Z=1? ou 78 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=78
                      00480                         goto    BOMBOFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                      00481                         bcf     P3                                      ; Se sim, então desative a Flag 
                            P3 
                      00482                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                      00483                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                      00484                         bsf     EOP                                     ; Ative a Flag EOP para indicar 
                            que será "Fim do Programa"
                      00485                 BOMBOFF:                                                ; Fim da Execução
                      00486         endif                                                           ; Fim da Condição
Warning[205]: Found directive in column 1. (ENDM)
                      00487 ENDM
                      00488 ; --------------------------------------------------------------------------------------------------
                      00489 
                      00490 #ENDIF
                      00028 #include <reactconf.inc>                        ; Inclue a Palavra de configuração, vetores e configuraç
                            ão dos registros.
                      00001 ; **************************************************************************************************
                      00002 ; Lista N.3 - Questão 1, 2 e 3 [Arquivo de Inclusão]
                      00003 ; Assembly Microcontrolador PIC16F877A
                      00004 ;
                      00005 ; Curso   : Eng. Elétrica da IFBA 
                      00006 ; Disciplina: ENG421 - Microprocessadores & Microcontroladores
                      00007 ; Autora  : Dirlene Napoleão                      Criação: 06/12/2021     Revisão: 07/12
                      00008 ; Clock   : 4MHz                                      Arquivo: reactconf.inc 
                      00009 ; Programa: Sistema de Reator Industrial para despache da preparação de produtos
                      00010 ;
                      00011 ;
                      00012 ; Descrição: Primeiramente configura o microcontrolador sem proteções de memória, WatchDog Timer
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00013 ; Desativado e Oscilação XT 4 MHz, depois inicia a configuração dos registros especiais, no qual
                      00014 ; configuramos as entradas em PORTB e Saídas em PORTC e PORTD. Vamos trabalhar com o Prescaler 256
                      00015 ; do TMR0 porque será configurado a interrupção por overflow do TMR0 para sistemas de tempo. Vou
                      00016 ; utilizar a contagem mais usada aqui que seria ((TMR0-6) x Prescaler), onde o 6 será definida para um
                      00017 ; contador, no entanto para PSI e CELSIUS, os valores vão simbolizar o que esta na prova, como 120 e 100
                      00018 ; pra ficar mais coerente. Interrupção Global e Periférica são habilitadas como sempre, porém a diferenç
                            a
                      00019 ; é que no momento eu vou habilitar só a interrupção externa de RB0 para o Botão STOP. A Interrupção do 
                            TMR0
                      00020 ; (TMR0IE) vou deixar pra habilitar direto nas macros e desabilitar livremente. Decidi fazer isto porque
                             tive
                      00021 ; muitos problemas em relação ao tempo contínuo, que poderia interromper o sistema em tempos indevidos
                      00022 ; em momentos diversos, então decidi habilitar ou desabilitar em locais específicos somente em situações
                      00023 ; necessárias. Justamente por isso habilitei no Banco 0, pois todo o código estar no Banco 0 e INTCON
                      00024 ; pode ser acessado por qualquer Banco, então pra não ficar mudando de Banco o tempo todo, decidi ativar
                      00025 ; logo no Banco 0. Depois disso só limpar todos os registros e saltar para o MAIN.
                      00026 ; **************************************************************************************************
                      00027 
                      00028 #IFNDEF         __REACTCONF_INC__
                      00029 #DEFINE         __REACTCONF_INC__       ; Isto permite só incluir se ainda não foi incluído
                      00030 
                      00031 ; -----------------------------------------------------------------------------------------
                      00032 ; Palavra de Configuração e Definições do Microcontrolador --------------------------------
Warning[205]: Found directive in column 1. (LIST)
                      00033 LIST p=16F877A                             ; Microcontrolador PIC16F877A
                      00034 
                      00035 #include        <p16f877a.inc>     ; Inclue arquivo do microcontrolador
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877A processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00566         LIST
                      00036 
Warning[205]: Found directive in column 1. (__config)
2007   3F39           00037 __config        _XT_OSC &  _WDT_OFF & _LVP_OFF & _BOREN_OFF & _CPD_OFF & _CP_OFF
                      00038 ; -----------------------------------------------------------------------------------------
                      00039 
                      00040 
                      00041 ; -----------------------------------------------------------------------------------------
                      00042 ; Vetores da memória de Programa ----------------------------------------------------------
Warning[205]: Found directive in column 1. (ORG)
0000                  00043 ORG     H'0000'                ; Vetor de RESET
0000   2806           00044                 goto    INIT_CONF      ; Inicie as configurações
                      00045 
Warning[205]: Found directive in column 1. (ORG)
0004                  00046 ORG     H'0004'                ; Vetor de interrupção
0004   2020           00047                 call    VOID_INT       ; Chame a ISR 'VOID_INT'
Warning[203]: Found opcode in column 1. (retfie)
0005   0009           00048 retfie                                             ; Retorna da Interrupção
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00049 ; -----------------------------------------------------------------------------------------
                      00050 
                      00051 
                      00052 ; -----------------------------------------------------------------------------------------
                      00053 ; Inicialização das Configurações do PIC16F877A -------------------------------------------
0006                  00054 INIT_CONF:
                      00055         BANK_SELECT 1                           ; Seleciona Banco 1 de memoria
                          M         IF      1==0                                    ; Argumento é igual ao Banco 0?
                          M                 bcf     STATUS,RP0              ; Sim, limpe o bit RP0 de STATUS
                          M                 bcf     STATUS,RP1              ; Sim, limpe o bit RP1 de STATUS
                          M         ENDIF
                          M         IF      1==1                                    ; Argumento é igual ao Banco 1?
0006   1683               M                 bsf     STATUS,RP0              ; Sim, sete o bit RP0 de STATUS
0007   1303               M                 bcf     STATUS,RP1              ; Sim, limpe o bit RP1 de STATUS
                          M         ENDIF
                          M         IF      1==2                                    ; Argumento é igual ao Banco 2?
                          M                 bcf     STATUS,RP0              ; Sim, limpe o bit RP0 de STATUS
                          M                 bsf     STATUS,RP1              ; Sim, sete o bit RP1 de STATUS
                          M         ENDIF
                          M         IF      1==3                                    ; Argumento é igual ao Banco 3?
                          M                 bsf     STATUS,RP0              ; Sim, sete o bit RP0 de STATUS
                          M                 bsf     STATUS,RP1              ; Sim, sete o bit RP1 de STATUS
                          M         ENDIF
0008   3003           00056         movlw   B'00000011'                     ; Mova para W o valor H'03'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0009   0086           00057         movwf   TRISB                           ; TRISB = W   -> PORTB apenas RB0 e RB1 como entrada
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   0187           00058         clrf    TRISC                           ; Limpe TRISC -> PORTC tudo como saída
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000B   0188           00059         clrf    TRISD                           ; Limpe TRISD -> PORTD tudo como saída
000C   30C7           00060         movlw   B'11000111'                     ; Pull-Ups desabilitados, Int. Por subida em RB0 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000D   0081           00061         movwf   OPTION_REG                      ; TMR0 Prescaler = 256 -> 111
                      00062         BANK_SELECT 0                           ; Seleciona Banco 0 de memoria
                          M         IF      0==0                                    ; Argumento é igual ao Banco 0?
000E   1283               M                 bcf     STATUS,RP0              ; Sim, limpe o bit RP0 de STATUS
000F   1303               M                 bcf     STATUS,RP1              ; Sim, limpe o bit RP1 de STATUS
                          M         ENDIF
                          M         IF      0==1                                    ; Argumento é igual ao Banco 1?
                          M                 bsf     STATUS,RP0              ; Sim, sete o bit RP0 de STATUS
                          M                 bcf     STATUS,RP1              ; Sim, limpe o bit RP1 de STATUS
                          M         ENDIF
                          M         IF      0==2                                    ; Argumento é igual ao Banco 2?
                          M                 bcf     STATUS,RP0              ; Sim, limpe o bit RP0 de STATUS
                          M                 bsf     STATUS,RP1              ; Sim, sete o bit RP1 de STATUS
                          M         ENDIF
                          M         IF      0==3                                    ; Argumento é igual ao Banco 3?
                          M                 bsf     STATUS,RP0              ; Sim, sete o bit RP0 de STATUS
                          M                 bsf     STATUS,RP1              ; Sim, sete o bit RP1 de STATUS
                          M         ENDIF
                      00063 
0010   018B           00064         clrf    INTCON                          ; Limpe o Registro INTCON
0011   178B           00065         bsf     INTCON,GIE                      ; Habilita Interrupção Global
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0012   170B           00066         bsf     INTCON,PEIE                 ; Habilita Interrupção Periférica
0013   160B           00067         bsf     INTCON,INTE                 ; Habilita Interrupção externa RB0
                      00068    ;bsf         INTCON,TMR0IE           ; Não irei habilitar esta interrupção por aqui
                      00069 
0014   0185           00070         clrf    PORTA                           ; Limpe o Registro PORTA
0015   0186           00071         clrf    PORTB                           ; Limpe o Registro PORTB
0016   0187           00072         clrf    PORTC                           ; Limpe o Registro PORTC
0017   0188           00073         clrf    PORTD                           ; Limpe o Registro PORTD
0018   0189           00074         clrf    PORTE                           ; Limpe o Registro PORTE
0019   01AC           00075         clrf    FLAG1                           ; Limpa os bits de Flags dos contadores
001A   01AD           00076         clrf    FLAG2                           ; Limpa os bits de Flags dos contadores
001B   01AE           00077         clrf    COUNT                           ; Limpa o Contador de tempo
001C   01AF           00078         clrf    CELSIUS                         ; Limpa o contador de Graus Celsius
001D   01B0           00079         clrf    PSI                             ; Limpa o contador de pressão
001E   1586           00080         bsf     RESETS                          ; Acione LED de RESET caso iniciar ou resetar
                      00081                                 
001F   2893           00082         goto    R_MAIN                          ; Salte para o MAIN do Reator
                      00083 ; -----------------------------------------------------------------------------------------
                      00084 
                      00085 #ENDIF
                      00029 #include <reactintr.inc>                        ; Inclue o Arquivo de funções e rotinas de interrupção.
                      00001 ; **************************************************************************************************
                      00002 ; Lista N.3 - Questão 1, 2 e 3 [Arquivo de Inclusão]
                      00003 ; Assembly Microcontrolador PIC16F877A
                      00004 ;
                      00005 ; Curso   : Eng. Elétrica da IFBA 
                      00006 ; Disciplina: ENG421 - Microprocessadores & Microcontroladores
                      00007 ; Autora  : Dirlene Napoleão                      Criação: 06/12/2021     Revisão: 07/12
                      00008 ; Clock   : 4MHz                                      Arquivo: reactintr.inc 
                      00009 ; Programa: Sistema de Reator Industrial para despache da preparação de produtos
                      00010 ;
                      00011 ;
                      00012 ; Descrição: Este é um arquivo da função da interrupção (A ISR), aqui também podem ser colocados
                      00013 ; outras funções, como a de Delay. Após armazenar contextos de W e STATUS, o sistema verifica
                      00014 ; a origem da interrupção, se é por TMR0 ou por RB0, sendo TMR0 a isr vai incrementar contadores
                      00015 ; de tempo, dependendo da Flag que for acionada, por Ex.: Quando Valvula V3 for acionada, ela deve
                      00016 ; aquecer o reservatório em 100Cº, então a Flag C100 será acionada e sendo acionada, o contador 
                      00017 ; CELSIUS irá incrementar até 100, TMR0 começando com 100, irá dar um tempo aproximado de 4 segundos,
                      00018 ; Enquanto que no caso de V4, a pressão interna deve atingir 120psi no reservatório secundário, V4
                      00019 ; ligado, aciona a Flag P120, que incrementa PSI 120 vezes, com TMR0 iniciando com 120, dá um tempo
                      00020 ; de 4,17 segundos, quando o contador atual chega ao máximo exigido (100 ou 120), a Flag atual é 
                      00021 ; limpada e isto que vai determinar o acionamento dos sensores TT ou TP. De uma forma simbólica, apenas
                      00022 ; por imaginação, se o sistema deve ficar de repouso por 3s após o aquecimento de 100Cº que levou 4s,
                      00023 ; Logo o repouso é 90% do aquecimento, se fosse 10 minutos de aquecimento, seria 9 minutos de repouso,
                      00024 ; o que por ventura teríamos um reservatório até bem repousado.
                      00025 ; Agora já no caso da origem de interrupção for por RB0, então o sistema salva o contexto dos registros
                      00026 ; Pois estes registros são zerados e 2 tipos de interrupção são desabilitadas, pra garantir que nada
                      00027 ; vai interferir o "pause" do sistema, por motivos de segurança. Se estamos falando de um sistema 
                      00028 ; real de reator, então vamos imaginar que, o STOP poderia ser um botão de emergência, para se analisar
                      00029 ; possíveis ocorridos ou inserir mais ou menos produtos, talvez um gerenciamento manual. Isto significa
                      00030 ; que durante a espera do botão ser novamente pressionado, outros sistemas com controle manual poderiam
                      00031 ; ser inseridos, sem prejudicar o percurso original do reator. Se o botão for novamente pressionado, 
                      00032 ; os dados são recuperados e o processo volta de onde parou. Mas cabe salientar que eu precisei fazer
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00033 ; uma rotina de Delay, pois o tempo é muito rápido pra processar o botão, a entrada na interrupção
                      00034 ; é até estável mas na saída pode ocorrer falhas, no caso do botão, ou seja, existe uma duração certa
                      00035 ; pra segurar o botão e o sistema sair da interrupção mas este pressionamento não pode passar do
                      00036 ; necessário, se não poderá entrar novamente na interrupção, justamente por isto os 500ms de Delay
                      00037 ; ajudará muito nisso.
                      00038 ; **************************************************************************************************
                      00039 
                      00040 #IFNDEF         __REACTINTR_INC__
                      00041 #DEFINE         __REACTINTR_INC__       ; Isto permite só incluir se ainda não foi incluído
                      00042 
                      00043 ; *****************************************************************************************
                      00044 ; INICIO DA INTERRUPÇÃO
0020                  00045 VOID_INT:                                               ; Inicio da ISR chamada em 0x0004
                      00046         STORE_CONTEXT                           ; Armazena o contexto de STATUS e W
0020   00A1               M         movwf    W_TEMP                         ; Salve W em W_TEMP 
0021   0E03               M         swapf    STATUS,W               ; Faça uma troca de Nibbles de STATUS, mova para W
0022   0183               M         clrf     STATUS                         ; Limpe o conteúdo de STATUS
0023   00A2               M         movwf    STATUS_TEMP            ; Salve W em STATUS_TEMP
0024   080A               M         movf     PCLATH, W              ; Mova PCLATH para W
0025   00A3               M         movwf    PCLATH_TEMP            ; Salve W em PCLATH_TEMP
0026   018A               M         clrf     PCLATH                 ; Limpe o conteúdo de PCLATH
                      00047 
                      00048 ; --------------------------------------------------------------------------------------
                      00049 ; Código para Interrupção RB0 do Botão STOP --------------------------------------------
0027                  00050 STOP_BUTTON:
0027   1C8B           00051         btfss   INTCON,INTF                     ; Ouve uma interrupcao Externa?
0028   2862           00052         goto    TIMER0INT                       ; Não! Entao veja se a próxima interrupção é TMR0
0029   108B           00053         bcf     INTCON,INTF                     ; Sim! Então limpe a Flag setada pela interrupcao
                      00054 
                      00055 ; Salvar contextos de registros utilizados
002A                  00056 SaveDatas:
002A   0801           00057         movf    TMR0,W                          ; Salve o contador de tempo TMR0
002B   00AA           00058         movwf   TMR0_TEMP                       ; Para o registro temporario de TMR0
002C   082E           00059         movf    COUNT,W                         ; Salve o contador auxiliar do TMR0
002D   00AB           00060         movwf   COUNT_TEMP                      ; Para o registro temporario do contador
002E   0808           00061         movf    Q0,W                            ; Salve os estados de pinos de PORTD
002F   00A4           00062         movwf   Q0_TEMP                         ; Para o registro temporario de PORTD
0030   0807           00063         movf    Q1,W                            ; Salve o registro temporario de PORTC
0031   00A5           00064         movwf   Q1_TEMP                         ; Para o registro temporario de PORTC
0032   082C           00065         movf    FLAG1,W                         ; Salve os sinalizadores de tempo e contagem
0033   00A6           00066         movwf   FLAG1_TEMP                      ; Para o registro temporario destes sinalizadores
0034   082D           00067         movf    FLAG2,W                         ; Salve os sinalizadores de acionamento
0035   00A7           00068         movwf   FLAG2_TEMP                      ; Para o registro temporario destes sinalizadores
0036   082F           00069         movf    CELSIUS,W                       ; Salve o contador de Graus Celsius
0037   00A8           00070         movwf   CELS_TEMP                       ; Para o registro temporario do contador de Graus
0038   0830           00071         movf    PSI,W                           ; Salve o contador de psi de pressão
0039   00A9           00072         movwf   PSI_TEMP                        ; Para o registro temporario do contador de Psi
                      00073         
                      00074 ; Após salvar, limpe os registros
003A   0185           00075         clrf    PORTA                           ; Limpe o Registro PORTA
003B   0186           00076         clrf    PORTB                           ; Limpe o Registro PORTB
003C   0187           00077         clrf    PORTC                           ; Limpe o Registro PORTC
003D   0188           00078         clrf    PORTD                           ; Limpe o Registro PORTD
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003E   0189           00079         clrf    PORTE                           ; Limpe o Registro PORTE
003F   01AC           00080         clrf    FLAG1                           ; Limpe os bits das Flags de contagem
0040   01AD           00081         clrf    FLAG2                           ; Limpe os bits das Flags de acionamento
0041   01AE           00082         clrf    COUNT                           ; Limpe o contador
0042   01AF           00083         clrf    CELSIUS                         ; Limpe o contador de Graus Celsius
0043   01B0           00084         clrf    PSI                             ; Limpe o contador de pressão
0044   1787           00085         bsf     PS                                      ; Acione o LED azul ao lado do STOP
                      00086 
                      00087 ; Se TMR0 Int. estiver habilitada, desabilite e salva estado
0045   120B           00088         bcf     INTCON,INTE                     ; Desative por enquanto a interrupção RB0
0046   1E8B           00089         btfss   INTCON,TMR0IE           ; Teste se Interrupção por TMR0 esta habilitada
0047   284A           00090         goto    WaitTime                        ; Se não, então só salte para Delay
0048   128B           00091         bcf     INTCON,TMR0IE           ; Se sim, então desabilite o TMR0 Int.
0049   142D           00092         bsf     FLAG2,0                         ; Isto vai nos garantir que TMR0 estava habilitada antes
                      00093 
                      00094 
                      00095 ; Espere 500ms e Após, Espere STOP ser pressionado novamente
004A                  00096 WaitTime:
004A   2083           00097         call    Delay500ms                      ; Espere por retardo de 500ms
004B                  00098 WaitStop:
004B   1C06           00099         btfss   STOP                            ; Botão STOP foi pressionado novamente?
004C   284B           00100         goto    WaitStop                        ; Não, então aguarda ele ser 
                      00101                                                                 ; Sim...
                      00102 
                      00103 ; Se TMR0 Int. Estava habilitada antes, habilite novamente
004D   1C2D           00104         btfss   FLAG2,0                         ; Se este bit foi setado, então TMR0IE estava acionada
004E   2850           00105         goto    RestoreDatas            ; Se não estava, logo não nos preocupamos com TMR0IE
004F   168B           00106         bsf     INTCON,TMR0IE           ; Se estava, então reabilite a interrupção do TMR0
                      00107 
                      00108 ; Recuperar contextos de registros utilizados
0050                  00109 RestoreDatas:
0050   0824           00110         movf     Q0_TEMP,W                      ; Recupere o valor de PORTD armazenado
0051   0088           00111         movwf    Q0                                     ; Reponha no registro PORTD
0052   0825           00112         movf     Q1_TEMP,W                      ; Recupere o valor de PORTC armazenado
0053   0087           00113         movwf    Q1                                     ; Reponha no registro PORTC
0054   0826           00114         movf     FLAG1_TEMP,W           ; Recupere o valor dos sinalizadores de tempo
0055   00AC           00115         movwf    FLAG1                          ; Reponha no registro destes sinalizadores
0056   0827           00116         movf     FLAG2_TEMP,W           ; Recupere o valor dos sinalizadores de acionamento
0057   00AD           00117         movwf    FLAG2                          ; Reponha no registro destes sinalizadores
0058   0828           00118         movf     CELS_TEMP,W            ; Recupere o valor do contador de Graus Celsius
0059   00AF           00119         movwf    CELSIUS                        ; Reponha no registro contador de Graus
005A   0829           00120         movf     PSI_TEMP,W                     ; Recupere o valor do contador de psi da pressão
005B   00B0           00121         movwf    PSI                            ; Reponha no registro de contador de psi
005C   082B           00122         movf     COUNT_TEMP,W           ; Recupere o valor do contador auxiliar de tempo
005D   00AE           00123         movwf    COUNT                          ; Reponha no registro do contador auxiliar
005E   082A           00124         movf     TMR0_TEMP,W            ; Recupere o valor da contagem do TMR0
005F   0081           00125         movwf    TMR0                           ; Reponha no registro do contador TMR0
0060   160B           00126         bsf      INTCON,INTE            ; Reabilite a interrupção externa RB0
0061   287C           00127         goto     END_INT                        ; Saia da Interrupção
                      00128 ; --------------------------------------------------------------------------------------
                      00129 
                      00130 
                      00131 ; --------------------------------------------------------------------------------------
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00132 ; Código dos temporizadores e contadores aqui ------------------------------------------
0062                  00133 TIMER0INT:
0062   1D0B           00134         btfss   INTCON,TMR0IF           ; Ouve uma interrupção por Overflow do TMR0?
0063   287C           00135         goto    END_INT                         ; Não, saia da interrupção        
0064   110B           00136         bcf     INTCON,TMR0IF           ; Sim, Zere a Flag TMR0IF de INTCON
                      00137         
0065   182C           00138         btfsc   C100                            ; Se a Flag C100 estiver acionada
0066   286C           00139         goto    IncCelsius                      ; Vai para o incremento de CELSIUS
0067   1A2D           00140         btfsc   P120                            ; Se a Flag P120 estiver acionada
0068   2870           00141         goto    IncPsi                          ; Vai para o incremento de PSI
0069   18AC           00142         btfsc   T1                                      ; Se a Flag T1 estiver acionada
006A   2878           00143         goto    DefTimer1                       ; Vai para a redefinição de tempo entre V1 e V2
006B   2874           00144         goto    DefTimer                        ; Se não, Vai para o incremento do contador geral
006C                  00145 IncCelsius:
006C   0AAF           00146         incf    CELSIUS,F                       ; Incremente +1 em Graus Celsius
006D   3064           00147         movlw   D'100'                          ; Mova a literal 100 (Simbolizando 100Cº)
006E   0081           00148         movwf   TMR0                            ; ..Para TMR0, logo (256-100)x256 = 39936us x 100 ~= 4s
006F   287C           00149         goto    IEND                            ; Saia da interrupção
0070                  00150 IncPsi:
0070   0AB0           00151         incf    PSI,F                           ; Incremente +1 em PSI da Pressão
0071   3078           00152         movlw   D'120'                          ; Mova a literal 120 (Simbolizando 120psi)
0072   0081           00153         movwf   TMR0                            ; ...Para TMR0, logo (256-120)x256 = 34816usx120 ~= 4,18
                            s
0073   287C           00154         goto    IEND                            ; Saia da interrupção
0074                  00155 DefTimer:
0074   0AAE           00156         incf    COUNT,F                         ; incremente +1 no contador auxiliar das válvulas
0075   3006           00157         movlw   D'6'                            ; Move a literal 6 para W e de W para TMR0
0076   0081           00158         movwf   TMR0                            ; (256-6)x256 = 64ms, o tempo final será reajustado em C
                            OUNT
0077   287C           00159         goto    IEND                            ; Saia da interrupção   
0078                  00160 DefTimer1:
0078   0AAE           00161         incf    COUNT,F                         ; incremente +1 no contador auxiliar das válvulas
0079   300B           00162         movlw   D'11'                           ; Move a literal 11 para W e de W para TMR0
007A   0081           00163         movwf   TMR0                            ; (256-11)x245 = 62ms, o tempo final será reajustado em 
                            COUNT
007B   287C           00164         goto    IEND                            ; Saia da interrupção
                      00165 ; --------------------------------------------------------------------------------------
                      00166 
007C                  00167 END_INT:
                      00168         RESTORE_CONTEXT                 ; Recupera o contexto de STATUS e W
007C                      M IEND:                                                   ; Label para fim da interrupcao
007C   0823               M         movf     PCLATH_TEMP, W         ; Mova PCLATH_TEMP para W
007D   008A               M         movwf    PCLATH                 ; Recupere o conteúdo de PCLATH
007E   0E22               M         swapf    STATUS_TEMP,W          ; Faça uma troca de Nibbles de STATUS_TEMP, mova para W   
007F   0083               M         movwf    STATUS                 ; Recupere o conteúdo de STATUS
0080   0EA1               M         swapf    W_TEMP,F                       ; Faça uma troca de Nibbles de W_TEMP, salva nele mesmo
0081   0E21               M         swapf    W_TEMP,W               ; Faça uma troca de Nibbles de W_TEMP, recupera W
Warning[203]: Found opcode in column 1. (return)
0082   0008           00169 return                                          ; Retorna pra chamada da ISR em 0x0004
                      00170 
                      00171 ; FIM DA INTERRUPÇÃO (retfie em 0x0004)
                      00172 ; *****************************************************************************************
                      00173 
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00174 
                      00175 
                      00176 ; --------------------------------------------------------------------------------------
                      00177 ; Sub-Rotina de Delay de 500ms para o STOP ---------------------------------------------
0083                  00178 Delay500ms:
0083   30C8           00179         movlw   D'200'                  ; Move o valor 200 para W
0084   00B1           00180         movwf   DELAY1                  ; Inicializa com 200 registro DELAY1
0085                  00181 Time1:                                          ; Já gastou 4 ciclos de máquina
0085   30FA           00182         movlw   D'250'                  ; Move o valor 250 para W
0086   00B2           00183         movwf   DELAY2                  ; Inicializa com 250 registro DELAY2
0087                  00184 Time2:
0087   0000           00185         nop                                             ; Gasta 1 ciclo de máquina
0088   0000           00186         nop                                             ; Gasta 1 ciclo de máquina
0089   0000           00187         nop                                             ; Gasta 1 ciclo de máquina
008A   0000           00188         nop                                             ; Gasta 1 ciclo de máquina
008B   0000           00189         nop                                             ; Gasta 1 ciclo de máquina
008C   0000           00190         nop                                             ; Gasta 1 ciclo de máquina
008D   0000           00191         nop                                             ; Gasta 1 ciclo de máquina
Message[305]: Using default destination of 1 (file).
008E   0BB2           00192         decfsz  DELAY2                  ; Decrementa DELAY2 até que seja igual a 0
008F   2887           00193         goto    Time2                   ; Vai para a label Time2
                      00194                                                         ; GOTO gasta 2 ciclos de máquinas, logo foram 10
                             ciclos
                      00195                                                         ; 250 x 10 ciclos de máquina = 2500 ciclos
Message[305]: Using default destination of 1 (file).
0090   0BB1           00196         decfsz  DELAY1                  ; Decrementa DELAY1 até que seja igual a 0
0091   2885           00197         goto    Time1                   ; Vai para a label Time1
                      00198                                                         ; Instruções acima gastou 3 ciclos de máquina
                      00199                                                         ; 2500 x 200 = 500000 ciclos de máquina
Warning[203]: Found opcode in column 1. (return)
0092   0008           00200 return                                          ; Retorna para a chamada
                      00201 ; --------------------------------------------------------------------------------------
                      00202 
                      00203 #ENDIF
                      00030 #include <reactbools.inc>                       ; Inclue as Macros de equações booleanas do reator.
                      00001 ; ******************************************************************************************************
                            **************************************
                      00002 ; Lista N.3 - Questão 1, 2 e 3 [Arquivo de Inclusão]
                      00003 ; Assembly Microcontrolador PIC16F877A
                      00004 ;
                      00005 ; Curso   : Eng. Elétrica da IFBA 
                      00006 ; Disciplina: ENG421 - Microprocessadores & Microcontroladores
                      00007 ; Autora  : Dirlene Napoleão                      Criação: 06/12/2021     Revisão: 07/12
                      00008 ; Clock   : 4MHz                                      Arquivo: reactbools.inc 
                      00009 ; Programa: Sistema de Reator Industrial para despache da preparação de produtos
                      00010 ;
                      00011 ; Descrição: Este é um arquivo de Macros de Equações booleanas, composta de 17 equações, cada uma
                      00012 ; com sua respectiva macro (Exceto __INI_REACTOR__ e __END_REACTOR__ que é a label e o retorno do Main).
                             
                      00013 ; Estas macros são incluídas no "reactlib.inc" e utilizadas no arquivo "ReactMain.asm".
                      00014 ; As operações de cada macro são descritas a seguir ->
                      00015 ;
                      00016 ; __INI_REACTOR__ -> Inicio das equações booleanas do reator
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00017 ; __END_REACTOR__ -> Fim das equações booleanas do reator e re-execução.
                      00018 ; __REACTOR_ON -> Armazena a retenção elétrica do reator através do botão START.
                      00019 ; __OPEN_V1_UNTIL_LM -> Liga a válvula V1 para despejar o produto1 até o sensor de nível médio ser ativa
                            do.
                      00020 ; __OPEN_V2_UNTIL_LH -> Liga a válvula V2 (após 1s) para despejar o produto2 até o sensor de nível alto 
                            ser ativado.
                      00021 ; __ACTIVATE_LL_WHEN_DETECTS_P1 -> Aciona o sensor de nível baixo quando detectar o Produto 1.
                      00022 ; __ACTIVATE_LM_WHEN_DETECTS_P1 -> Aciona o sensor de nível médio quando detectar o Produto 1.
                      00023 ; __ACTIVATE_LH_WHEN_DETECTS_P2 -> Aciona o sensor de nível alto quando detectar o Produto 2.
                      00024 ; __TURNS_ON_MOTOR_UNTIL_12S -> Liga o motor 1 até que se passe 12 segundos,após isto desligue.
                      00025 ; __OPEN_V3_UNTIL_TT -> Liga a válvula V3 para aquecer até o sensor TT ser ativado,após isto desligue.
                      00026 ; __ACTIVATE_TT_WHEN_DETECTS_100C -> Aciona o sensor TT quando detectar 100 Graus Celsius.
                      00027 ; __OPEN_V5_WHEN_3S_UNTIL_LL_OFF -> Liga a válvula V5, quando passar 3 segundos do repouso, até LL ser d
                            esativado, após isto desligue.
                      00028 ; __TURNS_OFF_LH_LM_LL_WHEN_V5 -> Desative os sensores LH,LM e LL quando V5 estiver ligado, o produto es
                            ta sendo despejado no 2ª reservatório.
                      00029 ; __OPEN_V4_UNTIL_TP -> Liga a válvula V4 até que TP seja ativado,isto é, TP detectar 120psi de Pressão 
                            interna,após isto desligue.
                      00030 ; __ACTIVATE_TP_WHEN_DETECTS_120PSI -> Aciona o sensor TP quando detectar 120psi de pressão interna
                      00031 ; __TURNS_ON_BOMB_UNTIL_5S -> Liga a Bomba para despejar o Produto 3 no 2ª reservatório, até que se pass
                            e 5 segundos,após isto desligue.
                      00032 ; __OPEN_V6_UNTIL_RESET -> Liga a válvula V6 para despachar a mistura do 2ª reservatório até que o usuár
                            io pressione o Botão RESET.
                      00033 ; __TURNS_OFF_OPERATION_STATE -> Desligue o LED de Estado de Operação, indicando que todo o processo con
                            tínuo finalizou.
                      00034 ; __TURNS_ON_FINALIZATION_STATE -> Ligue o LED de Finalização dos processos e espere pelo RESET do usuár
                            io.
                      00035 ; __TURNS_OFF_RESET_STATE -> Desligue o LED reset após o pressionamento do START
                      00036 ; ******************************************************************************************************
                            **************************************
                      00037 
                      00038 #IFNDEF         __REACTBOOLS_INC__
                      00039 #DEFINE         __REACTBOOLS_INC__      ; Isto permite só incluir se ainda não foi incluído
                      00040 
                      00041 ; Inicio das Equações do Reator
                      00042 __INI_REACTOR__ macro
                      00043         R_MAIN:
Warning[205]: Found directive in column 1. (ENDM)
                      00044 ENDM
                      00045 
                      00046 ; Fim das Equações do Reator
                      00047 __END_REACTOR__ macro
                      00048         goto    R_MAIN
Warning[205]: Found directive in column 1. (ENDM)
                      00049 ENDM
                      00050 
                      00051 ; Para salvar o nível lógico do Botao START.
                      00052 ; Isto Indica que o reator esta ligado
                      00053 __REACTOR_ON            macro
                      00054         IN              START
                      00055         OR              ST
                      00056         OUT     ST              ; ST = START+ST
Warning[205]: Found directive in column 1. (ENDM)
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00057 ENDM
                      00058         
                      00059 ; Se START foi pressionado e o Reator ligou e LM e LH desacionados, 
                      00060 ; Abre V1 e Fecha V1 quando LM esta acionado
                      00061 __OPEN_V1_UNTIL_LM      macro
                      00062         IN              START
                      00063         OR              V1
                      00064         ANDN    LH
                      00065         ANDN    LM
                      00066         OUT     V1      ; V1 = (START+V1).LH´.LM´
Warning[205]: Found directive in column 1. (ENDM)
                      00067 ENDM
                      00068 
                      00069         
                      00070 ; Se LM e LL estão acionados e LH,V1 e V5 desacionado
                      00071 ; Abre V2, Quando tempo chegar a 1 segundo (Quando Flag T1 é limpada).
                      00072 ; Tal que T1 desligado implica que V5 ligado.
                      00073 __OPEN_V2_UNTIL_LH      macro
                      00074         WHEN    T1
                      00075         IN              V2
                      00076         OR              LM
                      00077         ANDN    T1
                      00078         AND     LL
                      00079         ANDN    LH
                      00080         ANDN    V1
                      00081         ANDN    V5
                      00082         OUT     V2      ; V2 = (V2+LM).T1´.LL.LH´.V1´.V5´ | T1´->V5
Warning[205]: Found directive in column 1. (ENDM)
                      00083 ENDM    
                      00084         
                      00085 ; Quando P1L ser 0 e LL estiver desligado ou V1 ligado
                      00086 ; Aciona o Nível Baixo LL.
                      00087 ; Tal que P1L desligado implica que LL ligado.
                      00088 __ACTIVATE_LL_WHEN_DETECTS_P1   macro
                      00089         WHEN    P1L
                      00090         IN              LL
                      00091         OR              V1
                      00092         ANDN    P1L
                      00093         OR              LL
                      00094         OUT     LL              ; LL = (LL+V1).P1L´+LL | P1L´->LL
Warning[205]: Found directive in column 1. (ENDM)
                      00095 ENDM
                      00096         
                      00097 ; Quando P1M ser 0 e LM estiver desligado ou V1 ligado
                      00098 ; Aciona o Nível Médio LM, caso LL já foi acionado.
                      00099 ; Tal que P1M desligado implica que LM ligado.
                      00100 __ACTIVATE_LM_WHEN_DETECTS_P1   macro
                      00101         WHEN    P1M
                      00102         IN              LM
                      00103         OR              V1
                      00104         ANDN    P1M
                      00105         AND     LL
                      00106         OR              LM
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107         OUT     LM              ; LM = (LM+V1).P1M´.LL+LM | P1M´->LM
Warning[205]: Found directive in column 1. (ENDM)
                      00108 ENDM
                      00109         
                      00110 ; Quando P2H já chegar no nível 0 e LH estiver desligado ou V2 ligado
                      00111 ; Aciona o Nível Alto LH, caso LM já foi acionado.
                      00112 ; Tal que P2H desligado implica que LH ligado.
                      00113 __ACTIVATE_LH_WHEN_DETECTS_P2   macro
                      00114         WHEN    P2H
                      00115         IN              LH
                      00116         OR              V2
                      00117         ANDN    P2H
                      00118         AND     LM
                      00119         OR              LH
                      00120         OUT     LH              ; LH = (LH+V2).P2H´.LM+LH | P2H´->LH
Warning[205]: Found directive in column 1. (ENDM)
                      00121 ENDM
                      00122 
                      00123 
                      00124 ; Liga MOT1 após V2 abrir mas não desliga MOT1
                      00125 ; Se V2 fechar no momento que LH estiver acionado.
                      00126 ; Quando MOT1 estiver ligado, Tempo de 12s é acionado. 
                      00127 ; Quando Tempo T12 for 0, então MOT1 é desligado, ou seja,
                      00128 ; T12 ligado implica MOT1 ligado . Enquanto que V2 garante que 
                      00129 ; MOT1 seja ligado.
                      00130 __TURNS_ON_MOTOR_UNTIL_12S      macro
                      00131         IN              MOT1
                      00132         OR              V2
                      00133         OUT     MOT1    ; MOT1 = MOT1+V2
                      00134         WHEN    T12
                      00135         IN              MOT1
                      00136         AND             T12
                      00137         OR              V2
                      00138         OUT     MOT1    ; MOT1 = MOT1.T12+V2 | T12->MOT1
Warning[205]: Found directive in column 1. (ENDM)
                      00139 ENDM
                      00140 
                      00141 
                      00142 ; Se LH,LM e LL estiverem acionados e
                      00143 ; TT, MOT1 e V2 estiverem desligados então Liga V3
                      00144 ; até que TT seja acionado. Flag C100 deve estar ativada.
                      00145 __OPEN_V3_UNTIL_TT      macro
                      00146         IN              TT
                      00147         ORN             MOT1
                      00148         AND             LL
                      00149         AND             LM
                      00150         AND             LH
                      00151         ANDN    V2
                      00152         AND     C100
                      00153         OUT             V3              ; V3 = (TT+MOT1´).LL.LM.LH.V2´.C100
Warning[205]: Found directive in column 1. (ENDM)
                      00154 ENDM
                      00155         
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00156 ; Se TT está desligado ou V3 ligado e V5 desligado, faça a 
                      00157 ; contagem de até 100 graus celsius, Quando C100 valer 0,
                      00158 ; significa que é 100 graus, então aciona TT. Tal que,
                      00159 ; C100 desligado implica que TT ligado.
                      00160 __ACTIVATE_TT_WHEN_DETECTS_100C macro
                      00161         WHEN    C100
                      00162         IN              TT
                      00163         OR              V3
                      00164         ANDN    C100
                      00165         ANDN    V5
                      00166         OUT     TT              ; TT = (TT+V3).C100´.V5´ | C100´->TT
Warning[205]: Found directive in column 1. (ENDM)
                      00167 ENDM
                      00168         
                      00169 ; Ligue V5 quando o Repouso de TT passar 3 segundos (RT valer 0)
                      00170 ; e LL estiver acionado mas se LL se tornar 0, desligue V5.
                      00171 ; Tal que, RT desligado implica que TT desligado implicando V5 ligado.
                      00172 __OPEN_V5_WHEN_3S_UNTIL_LL_OFF  macro
                      00173         WHEN    RT
                      00174         IN              V5
                      00175         OR              TT
                      00176         ANDN    RT
                      00177         AND     LL
                      00178         OUT     V5              ; V5 = (V5+TT).RT´.LL | RT´->TT´->V5
Warning[205]: Found directive in column 1. (ENDM)
                      00179 ENDM
                      00180         
                      00181 ; Desligue LH,LM ou LL se LHON,LMON ou LLON estiverem desligados,
                      00182 ; respectivamente, isto é, quando V5 e o respectivo sensor estiver ligado
                      00183 ; e o produto do nível atual chegar a 0, Ex.: LM é igual a LM desligado
                      00184 ; quando LMON for desligado se, e somente se, V5 e LM estiver ligado e 
                      00185 ; P1M for 0. Isto indiscretamente ativa RESC.
                      00186 __TURNS_OFF_LH_LM_LL_WHEN_V5 macro
                      00187         WHEN    V5
                      00188         IN              LH
                      00189         AND     LHON
                      00190         OUT     LH              ; LH = LH´->LHON´<->(V5.LH.P2H´) | LH=LH.LHON
                      00191         IN              LM
                      00192         AND     LMON
                      00193         OUT     LM              ; LM = LM´->LMON´<->(V5.LM.P1M´) | LM=LM.LMON
                      00194         IN              LL
                      00195         AND     LLON
                      00196         OUT     LL              ; LL = LL´->LLON´<->(V5.LL.P1L´) | LL=LL.LLON
Warning[205]: Found directive in column 1. (ENDM)
                      00197 ENDM
                      00198         
                      00199 ; Quando V4 estiver desligado ou LL desligado e RESC ligado (Reservatorio
                      00200 ; Secundario cheio), entao liga V4 até identificar a pressão de 120 psi,
                      00201 ; ou seja, Quando P120 chegar a 0 e TP ser acionado, tal que,
                      00202 ; P120 ligado implica que V4 ligado.
                      00203 __OPEN_V4_UNTIL_TP      macro
                      00204         WHEN    P120
                      00205         IN              V4
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00206         ORN     LL
                      00207         AND     RESC
                      00208         OR              P120
                      00209         OUT     V4              ; V4 = ((V4+LL´).RESC+P120) | P120->V4
Warning[205]: Found directive in column 1. (ENDM)
                      00210 ENDM
                      00211         
                      00212 ; ST se manten ligado para ativar TP caso a pressão chegou a 120 psi,
                      00213 ; mas só ativará também se V1,LL,V5,V4 e P120 estiverem desligados, ou seja,
                      00214 ; O unico momento plausível para TP ser acionado. Pois no início, Quando ST
                      00215 ; liga, V1 já liga, logo TP nunca é acionado até o momento certo.
Warning[208]: Label truncated at 32 characters. (__ACTIVATE_TP_WHEN_DETECTS_120PSI)
                      00216 __ACTIVATE_TP_WHEN_DETECTS_120PSI macro
                      00217         IN              ST
                      00218         ANDN    V1
                      00219         ANDN    LL
                      00220         ANDN    V5
                      00221         ANDN    V4
                      00222         ANDN    P120
                      00223         OUT     TP              ; TP = ST.V1´.LL´.V5´.V4´.P120´
Warning[205]: Found directive in column 1. (ENDM)
                      00224 ENDM
                      00225 
                      00226 ; Liga a Bomba se TP estiver ligado.
                      00227 ; Quando a Bomba estiver ligada, liga P3, despeje o Produto P3 até que
                      00228 ; Passe 5s, quando terminar, P3 vale 0 e se for 0, desligue a Bomba.
                      00229 ; Tal que, TP ligada implica P3 ligada que implica Bomba ligada.
                      00230 __TURNS_ON_BOMB_UNTIL_5S macro
                      00231         IN              BOMB
                      00232         OR              TP
                      00233         OUT     BOMB    ; BOMB = (BOMB+TP)      
                      00234         WHEN    BOMB
                      00235         IN              BOMB
                      00236         AND             P3
                      00237         OUT     BOMB    ; BOMB = BOMB.P3 | TP->P3->BOMB
Warning[205]: Found directive in column 1. (ENDM)
                      00238 ENDM
                      00239 
                      00240 ; V6 é a última condição e só liga com 1 condição: Se ST estiver desligado
                      00241 ; Pela primeira vez e EOP for ligado. EOP é uma Flag reservada a V6, que
                      00242 ; significa "END OF PROGRAM", setada após a Bomba. 
                      00243 ; Agora se espera o pressionamento do Botão RESET.
                      00244 ; OBS.: O Botão de RESET é ligado no MasterClear, então automaticamente ao pressionar,
                      00245 ; O Botão envia o nível lógico 0 para o pino MCLR, Reiniciando o sistema.
                      00246 __OPEN_V6_UNTIL_RESET macro
                      00247         IN              V6              
                      00248         ORN     ST
                      00249         AND     EOP
                      00250         OR              V6
                      00251         OUT     V6              ; V6 = ST´.EOP+V6
Warning[205]: Found directive in column 1. (ENDM)
                      00252 ENDM
                      00253 
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00254 ; Condição necessária para Retenção de desligamento da Bomba, pois TP sempre
                      00255 ; Liga a Bomba e TP só é ativo se ST esta ativo, logo ST só estará ativo em 
                      00256 ; todas as válvulas antes de V6 (Exceto V2 pois MOT1 já faz o papel). ST 
                      00257 ; simboliza o Estado de inicialização e execução do reator.
                      00258 __TURNS_OFF_OPERATION_STATE  macro
                      00259         IN              TP
                      00260         AND             BOMB
                      00261         OR              V5
                      00262         OR              V4
                      00263         OR              V3
                      00264         OR              V1
                      00265         OR              MOT1
                      00266         OR              TT
                      00267         OUT     ST              ; ST = TP.BOMB+V5+V4+V3+V2+MOT1+TT
Warning[205]: Found directive in column 1. (ENDM)
                      00268 ENDM
                      00269 
                      00270 ; Logo  ST desligado e V6 ligado, dar margens pra acionar o LED de finalização FN
                      00271 ; (Ao lado do Botão START), O LED amarelo é ligado para indicar que o programa
                      00272 ; Esta na sua fase final e o usuário já pode pressionar o Botão de RESET.
                      00273 __TURNS_ON_FINALIZATION_STATE macro
                      00274         IN              FN
                      00275         ORN             ST
                      00276         AND     V6
                      00277         OR              FN
                      00278         OUT     FN              ; FN = FN+ST´.V6+FN
Warning[205]: Found directive in column 1. (ENDM)
                      00279 ENDM
                      00280 
                      00281 ; Desligue o LED vermelho de RESET após START ser pressionado.
                      00282 ; No Vetor de RESET, ou sistema foi iniciado ou foi reiniciado, logo
                      00283 ; o led vermelho irá acender nestes dois momentos.
                      00284 __TURNS_OFF_RESET_STATE  macro
                      00285         IN              RESETS
                      00286         OR              RESETS
                      00287         ANDN    ST
                      00288         OUT     RESETS  ; RESETS = RESETS.ST´
Warning[205]: Found directive in column 1. (ENDM)
                      00289 ENDM
                      00290 
                      00291 
                      00292 #ENDIF
                      00031 ; --------------------------------------------------------------------------------------------------
                      00032 
                      00033 #ENDIF
                      00045 ;#include       <equations.inc>                                         ; Inclua isto após __INI_REACTOR
                            , apenas se precisar
                      00046                                                                                                 ; depura
                            r e comente as macros abaixo também
                      00047 ; ---------------------------------------------------------------------------------------------------
                      00048 
                      00049 ; ---------------------------------------------------------------------------------------------------
                      00050 ; Operações contínuas e automatizadas do Reator -----------------------------------------------------
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00051 
Warning[206]: Found call to macro in column 1. (__INI_REACTOR__)
                      00052 __INI_REACTOR__                                                                 ; Início das Operações d
                            o Reator (MAIN)
Warning[207]: Found label after column 1. (R_MAIN)
0093                      M         R_MAIN:
                      00053         __REACTOR_ON                                                            ; Ligue as operações do 
                            Reator
                          M         IN              START
0093   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
0094   1886               M         btfsc   PORTB,RB1                       ; O BIT 'bit' do registro 'reg' é 0?
0095   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
0096   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         OR              ST
0097   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0098   0103               M         clrw                                            ; Limpa o W, W = 0
0099   1A87               M         btfsc   PORTC,RC5                       ; O dado atual é 0?
009A   3001               M         movlw   H'01'                           ; Não, Então W será 1
009B   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         OUT     ST              ; ST = START+ST
009C   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
009D   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
009E   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
009F   28A2               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
00A0   1287               M         bcf     PORTC,RC5                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
00A1   28A3               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
00A2   1687               M         bsf     PORTC,RC5                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
00A3   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                      00054         __OPEN_V1_UNTIL_LM                                                      ; Abra a válvula V1 até 
                            que o sensor LM seja acionado
                          M         IN              START
00A4   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
00A5   1886               M         btfsc   PORTB,RB1                       ; O BIT 'bit' do registro 'reg' é 0?
00A6   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
00A7   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         OR              V1
00A8   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
00A9   0103               M         clrw                                            ; Limpa o W, W = 0
00AA   1808               M         btfsc   PORTD,RD0                       ; O dado atual é 0?
00AB   3001               M         movlw   H'01'                           ; Não, Então W será 1
00AC   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         ANDN    LH
00AD   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
00AE   0103               M         clrw                                            ; Limpa o W, W = 0
00AF   1C07               M         btfss   PORTC,RC0                       ; O dado atual é 1?
00B0   3001               M         movlw   H'01'                           ; Não, Então W será 1
00B1   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         ANDN    LM
00B2   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
00B3   0103               M         clrw                                            ; Limpa o W, W = 0
00B4   1C87               M         btfss   PORTC,RC1                       ; O dado atual é 1?
00B5   3001               M         movlw   H'01'                           ; Não, Então W será 1
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B6   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         OUT     V1      ; V1 = (START+V1).LH´.LM´
00B7   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
00B8   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
00B9   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
00BA   28BD               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
00BB   1008               M         bcf     PORTD,RD0                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
00BC   28BE               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
00BD   1408               M         bsf     PORTD,RD0                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
00BE   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                      00055         __ACTIVATE_LL_WHEN_DETECTS_P1                           ; Acione o sensor LL quando detectar o P
                            1
                          M         WHEN    P1L
                          M 
                          M         ; Retardo de 1 segundo para ligar V2
                          M         if      FLAG1==FLAG1 & 3==1                             ; Se argumento for a FLAG T1 então faça 
                            o código abaixo...
                          M                         btfsc   LH                                      ; Se LH estiver inativo, salte 1
                             instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   V1                                      ; Se V1 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   V2                                      ; Se V2 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim     
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim                     
                          M                         btfsc   T1                                      ; Se T1 estiver inativo, inicie 
                            o temporizador
                          M                         goto    ENDV10                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'11'                           ; Mova o valor 11 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 11 a
                            té 255 (245 contagens)
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                          M                         bsf     T1                                      ; Ative a Flag T1 pra indicar qu
                            e a temporização está ativa
                          M                         bsf     TIMER                           ; Ligue o display de tempo do Proteus
                          M                 ENDV10:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'16'                           ; Mova o valor 16 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 16 (COUNT vai de 0 a
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                             16)
                          M                         btfss   STATUS,Z                        ; Z=1? ou 16 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=16
                          M                         goto    ENDV1                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     TIMER                           ; Desligue o display de tempo do Proteus
                          M                         bcf     T1                                      ; Se sim, então desative a Flag 
                            T1
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                          M                 ENDV1:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LL (Tempo imaginário de enchimento)
                          M         if      FLAG1==FLAG1 & 3==3                             ; Se argumento for a FLAG P1L então faça
                             o código abaixo...
00BF   1907               M                         btfsc   LL                                      ; Se LL estiver inativo salte 1 
                            instrução
00C0   28D1               M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
00C1   1C08               M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
00C2   28D1               M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
00C3   19AC               M                         btfsc   P1L                                     ; Se P1L estiver inativo, inicie
                             o temporizador
00C4   28C9               M                         goto    ENDLL0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
00C5   3006               M                         movlw   D'6'                            ; Mova o valor 6 para W
00C6   0081               M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)
00C7   168B               M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
00C8   15AC               M                         bsf     P1L                                     ; Ative a Flag P1L pra indicar q
                            ue a temporização está ativa
Warning[207]: Found label after column 1. (ENDLL0)
00C9                      M                 ENDLL0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
00C9   3023               M                         movlw   D'35'                           ; Mova o valor 35 para W
00CA   062E               M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)
00CB   1D03               M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
00CC   28D1               M                         goto    ENDLL                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
00CD   11AC               M                         bcf     P1L                                     ; Se sim, então desative a Flag 
                            P1L
00CE   152D               M                         bsf     LLON                            ; Ative a Flag LLON pra indicar que LL e
                            stá ativo
00CF   01AE               M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
00D0   128B               M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
Warning[207]: Found label after column 1. (ENDLL)
00D1                      M                 ENDLL:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         
                          M         ; Tempo de 2,2 segundos para ativar LM (Tempo imaginário de enchimento)
                          M         if      FLAG1==FLAG1 & 3==4                             ; Se argumento for a FLAG P1M então faça
                             o código abaixo...
                          M                         btfsc   LM                                      ; Se LM estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   LL                                      ; Se LL estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   P1M                                     ; Se P1M estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLM0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W 
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador         
                          M                         bsf     P1M                                     ; Ative a Flag P1M pra indicar q
                            ue a temporização está ativa
                          M                 ENDLM0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35      
                          M                         goto    ENDLM                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P1M                                     ; Se sim, então desative a Flag 
                            P1M     
                          M                         bsf     LMON                            ; Ative a Flag LMON pra indicar que LM e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDLM:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LH
                          M         if      FLAG1==FLAG1 & 3==5                             ; Se argumento for a FLAG P1H então faça
                             o código abaixo...
                          M                         btfsc   LH                                      ; Se LH estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfss   V2                                      ; Se V2 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   P2H                                     ; Se P1H estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLH0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W         
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador 
                          M                         bsf     P2H                                     ; Ative a Flag P2H pra indicar q
                            ue a temporização está ativa
                          M                 ENDLH0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                          M                         goto    ENDLH                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P2H                                     ; Se sim, então desative a Flag 
                            P2H  
                          M                         bsf     LHON                            ; Ative a Flag LHON pra indicar que LH e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 ENDLH:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de retenção de 12 segundos para desligar MOT1
                          M         if      FLAG1==FLAG1 & 3==6                             ; Se argumento for a FLAG T12 então faça
                             o código abaixo...             
                          M                         btfss   MOT1                            ; Se MOT1 estiver ligado salte 1 instruç
                            ão      
                          M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim 
                          M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
                          M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    MOT1OFF                         ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   T12                                     ; Se T12 estiver inativo, inicie
                             o temporizador         
                          M                         goto    COUNTER                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.              
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         movlw   D'6'                            ; Mova o valor 6 para W                 
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     T12                                     ; Ative a Flag T12 pra indicar q
                            ue a temporização está ativa
                          M                 COUNTER:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'153'                          ; Mova o valor 153 para W       
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 153 (COUNT vai de 0 
                            a 153)  
                          M                         btfss   STATUS,Z                        ; Z=1? ou 153 xor COUNT = 0? Se sim, sig
                            nifica que COUNT=153    
                          M                         goto    MOT1OFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     T12                                     ; Se sim, então desative a Flag 
                            T12   
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 MOT1OFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 3,9 segundos para chegar a 100Cº
                          M         if      FLAG1==FLAG1 & 3==0                             ; Se argumento for a FLAG C100 então faç
                            a o código abaixo...    
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução     
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   TT                                      ; Se LH estiver inativo salte 1 
                            instrução
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   MOT1                            ; Se MOT1 estiver desligado salte 1 inst
                            rução   
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   C100                            ; Se C100 estiver inativo, inicie o temp
                            orizador
                          M                         goto    ENDTT0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'100'                          ; Mova o valor 100 para W               
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 100 
                            até 255 (156 contagens)         
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     C100                            ; Ative a Flag C100 pra indicar que a te
                            mporização está ativa
                          M                 ENDTT0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         movlw   D'100'                          ; Mova o valor 100 para W       
                          M                         xorwf   CELSIUS,W                       ; Compare CELSIUS com 100Cº (CELSIUS vai
                             de 0 a 100)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 100 xor CELSIUS = 0? Se sim, s
                            ignifica que CELSIUS=100
                          M                         goto    ENDTT                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     C100                            ; Se sim, então desative a Flag C100   
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDTT:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo CELSIUS, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de 3 segundos do repouso do aquecimento
                          M         if      FLAG1==FLAG1 & 3==2                             ; Se argumento for a FLAG RT então faça 
                            o código abaixo...
                          M                         btfss   TT                                      ; Se TT estiver ativo salte 1 in
                            strução 
                          M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   RT                                      ; Se RT estiver inativo, inicie 
                            o temporizador
                          M                         goto    ENDR0                           ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W         
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)                   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                          M                         bsf     RT                                      ; Ative a Flag RT pra indicar qu
                            e a temporização está ativa
                          M                 ENDR0:                                                  ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'47'                           ; Mova o valor 47 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 47 (COUNT vai de 0 a
                             47)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 47 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=47
                          M                         goto    ENDR                            ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     RT                                      ; Se sim, então desative a Flag 
                            RT   
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 ENDR:                                                   ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para desativar LH,LM e LL nesta ordem
                          M         if      FLAG1==Q0 & 3==4                                ; Se argumento for V5 então faça o códig
                            o abaixo...
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    STARTV5                         ; Se estiver ligado, Começe as verificaç
                            ões
                          M                         goto    ENDV5                           ; Salte para o fim e não faça nada
                          M                 STARTV5:                                                ; VERIFICAÇÃO DOS SENSORES -----
                            -------------------
                          M                         btfsc   LH                                      ; LH está ativado?
                          M                         goto    LHSTART                         ; Sim, então verifique o tempo de LH
                          M                         btfsc   LM                                      ; Não, LM está ativado?
                          M                         goto    LMSTART                         ; Sim, então verifique o tempo de LM
                          M                         btfsc   LL                                      ; Não, LL está ativado?
                          M                         goto    LLSTART                         ; Sim, então verifique o tempo de LL
                          M                         goto    ENDV5                           ; Não, Então saia e não faça nada
                          M                 LHSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LH ---
                            --------------------
                          M                         btfss   P2H                                     ; A Flag P2H está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LHON                            ; desacione a Flag LHON indicando que LH
                             está inativo
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 LMSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LM ---
                            --------------------
                          M                         btfss   P1M                                     ; A Flag P1M está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W     
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35  
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim     
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0 
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LMON                            ; desacione a Flag LMON indicando que LM
                             está inativo
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 LLSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LL ---
                            --------------------
                          M                         btfss   P1L                                     ; A Flag P1L está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W             
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35          
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         goto    ENDV5                           ; Não, então vai para o fim             
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0  
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LLON                            ; desacione a Flag LLON indicando que LL
                             está inativo
                          M                         bsf     RESC                            ; acione a Flag RESC indicando que o 2ª 
                            reservatorio esta cheio
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 STARTTIMER:                                             ; INICIALIZAÇÃO DO TEMPORIZADOR 
                            ----------------------
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Ative o temporizador   
                          M                         bsf     P1L                                     ; Acione a Flag P1L
                          M                         bsf     P1M                                     ; Acione a Flag P1M
                          M                         bsf     P2H                                     ; Acione a Flag P2H
                          M                 ENDV5:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 4,1 segundos para chegar a 120psi
                          M         if      FLAG1==FLAG2 & 3==4                             ; Se argumento for a FLAG P120 então faç
                            a o código abaixo...
                          M                         btfss   V4                                      ; Se V4 estiver ligado salte 1 i
                            nstrução        
                          M                         goto    ENDV4                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   P120                            ; Se P120 estiver inativo salte 1 instru
                            ção
                          M                         goto    ENDRES                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'120'                          ; Mova o valor 120 para W               
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 120 
                            até 255 (136 contagens)         
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                          M                         bsf     P120                            ; Ative a Flag P120 pra indicar que a te
                            mporização está ativa
                          M                 ENDRES:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'120'                          ; Mova o valor 120 para W       
                          M                         xorwf   PSI,W                           ; Compare PSI com 120psi (PSI vai de 0 a
                             120)   
                          M                         btfss   STATUS,Z                        ; Z=1? ou 120 xor PSI = 0? Se sim, signi
                            fica que PSI=120
                          M                         goto    ENDV4                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P120                            ; Se sim, então desative a Flag P120
                          M                         bcf     RESC                            ; Desative a FLAG RESC
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDV4:                                                  ; Fim da Execução, OBS.: Aqui nã
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            o limpo PSI, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de retenção de 5 segundos para desligar BOMB 
                          M         if      FLAG1==Q0 & 3==7                                ; Se argumento for BOMB então faça o cód
                            igo abaixo...   
                          M                         btfss   BOMB                            ; Se BOMB estiver ligado salte 1 instruç
                            ão              
                          M                         goto    BOMBOFF                         ; Não execute o temporizador, Vai para o
                             fim 
                          M                         btfsc   P3                                      ; Se P3 estiver inativo, inicie 
                            o temporizador          
                          M                         goto    COUNTP3                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     P3                                      ; Ative a Flag P3 pra indicar qu
                            e a temporização está ativa     
                          M                 COUNTP3:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'78'                           ; Mova o valor 78 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 78 (COUNT vai de 0 a
                             78)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 78 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=78
                          M                         goto    BOMBOFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     P3                                      ; Se sim, então desative a Flag 
                            P3 
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                         bsf     EOP                                     ; Ative a Flag EOP para indicar 
                            que será "Fim do Programa"
                          M                 BOMBOFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         IN              LL
00D1   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
00D2   1907               M         btfsc   PORTC,RC2                       ; O BIT 'bit' do registro 'reg' é 0?
00D3   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
00D4   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         OR              V1
00D5   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
00D6   0103               M         clrw                                            ; Limpa o W, W = 0
00D7   1808               M         btfsc   PORTD,RD0                       ; O dado atual é 0?
00D8   3001               M         movlw   H'01'                           ; Não, Então W será 1
00D9   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         ANDN    P1L
00DA   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
00DB   0103               M         clrw                                            ; Limpa o W, W = 0
00DC   1DAC               M         btfss   FLAG1,3                         ; O dado atual é 1?
00DD   3001               M         movlw   H'01'                           ; Não, Então W será 1
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00DE   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         OR              LL
00DF   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
00E0   0103               M         clrw                                            ; Limpa o W, W = 0
00E1   1907               M         btfsc   PORTC,RC2                       ; O dado atual é 0?
00E2   3001               M         movlw   H'01'                           ; Não, Então W será 1
00E3   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         OUT     LL              ; LL = (LL+V1).P1L´+LL | P1L´->LL
00E4   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
00E5   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
00E6   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
00E7   28EA               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
00E8   1107               M         bcf     PORTC,RC2                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
00E9   28EB               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
00EA   1507               M         bsf     PORTC,RC2                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
00EB   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                      00056         __ACTIVATE_LM_WHEN_DETECTS_P1                           ; Acione o sensor LM quando detectar o P
                            1
                          M         WHEN    P1M
                          M 
                          M         ; Retardo de 1 segundo para ligar V2
                          M         if      FLAG1==FLAG1 & 4==1                             ; Se argumento for a FLAG T1 então faça 
                            o código abaixo...
                          M                         btfsc   LH                                      ; Se LH estiver inativo, salte 1
                             instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   V1                                      ; Se V1 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   V2                                      ; Se V2 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim     
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim                     
                          M                         btfsc   T1                                      ; Se T1 estiver inativo, inicie 
                            o temporizador
                          M                         goto    ENDV10                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'11'                           ; Mova o valor 11 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 11 a
                            té 255 (245 contagens)
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                          M                         bsf     T1                                      ; Ative a Flag T1 pra indicar qu
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            e a temporização está ativa
                          M                         bsf     TIMER                           ; Ligue o display de tempo do Proteus
                          M                 ENDV10:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'16'                           ; Mova o valor 16 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 16 (COUNT vai de 0 a
                             16)
                          M                         btfss   STATUS,Z                        ; Z=1? ou 16 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=16
                          M                         goto    ENDV1                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     TIMER                           ; Desligue o display de tempo do Proteus
                          M                         bcf     T1                                      ; Se sim, então desative a Flag 
                            T1
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                          M                 ENDV1:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LL (Tempo imaginário de enchimento)
                          M         if      FLAG1==FLAG1 & 4==3                             ; Se argumento for a FLAG P1L então faça
                             o código abaixo...
                          M                         btfsc   LL                                      ; Se LL estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   P1L                                     ; Se P1L estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLL0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                          M                         bsf     P1L                                     ; Ative a Flag P1L pra indicar q
                            ue a temporização está ativa
                          M                 ENDLL0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                          M                         goto    ENDLL                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     P1L                                     ; Se sim, então desative a Flag 
                            P1L
                          M                         bsf     LLON                            ; Ative a Flag LLON pra indicar que LL e
                            stá ativo
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                          M                 ENDLL:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de 2,2 segundos para ativar LM (Tempo imaginário de enchimento)
                          M         if      FLAG1==FLAG1 & 4==4                             ; Se argumento for a FLAG P1M então faça
                             o código abaixo...
00EC   1887               M                         btfsc   LM                                      ; Se LM estiver inativo salte 1 
                            instrução
00ED   2900               M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
00EE   1D07               M                         btfss   LL                                      ; Se LL estiver ativo, salte 1 i
                            nstrução
00EF   2900               M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
00F0   1C08               M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
00F1   2900               M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
00F2   1A2C               M                         btfsc   P1M                                     ; Se P1M estiver inativo, inicie
                             o temporizador
00F3   28F8               M                         goto    ENDLM0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
00F4   3006               M                         movlw   D'6'                            ; Mova o valor 6 para W 
00F5   0081               M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
00F6   168B               M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador         
00F7   162C               M                         bsf     P1M                                     ; Ative a Flag P1M pra indicar q
                            ue a temporização está ativa
Warning[207]: Found label after column 1. (ENDLM0)
00F8                      M                 ENDLM0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
00F8   3023               M                         movlw   D'35'                           ; Mova o valor 35 para W        
00F9   062E               M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
00FA   1D03               M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35      
00FB   2900               M                         goto    ENDLM                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
00FC   122C               M                         bcf     P1M                                     ; Se sim, então desative a Flag 
                            P1M     
00FD   14AD               M                         bsf     LMON                            ; Ative a Flag LMON pra indicar que LM e
                            stá ativo
00FE   01AE               M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
00FF   128B               M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
Warning[207]: Found label after column 1. (ENDLM)
0100                      M                 ENDLM:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LH
                          M         if      FLAG1==FLAG1 & 4==5                             ; Se argumento for a FLAG P1H então faça
                             o código abaixo...
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         btfsc   LH                                      ; Se LH estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfss   V2                                      ; Se V2 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   P2H                                     ; Se P1H estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLH0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W         
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador 
                          M                         bsf     P2H                                     ; Ative a Flag P2H pra indicar q
                            ue a temporização está ativa
                          M                 ENDLH0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                          M                         goto    ENDLH                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P2H                                     ; Se sim, então desative a Flag 
                            P2H  
                          M                         bsf     LHON                            ; Ative a Flag LHON pra indicar que LH e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 ENDLH:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de retenção de 12 segundos para desligar MOT1
                          M         if      FLAG1==FLAG1 & 4==6                             ; Se argumento for a FLAG T12 então faça
                             o código abaixo...             
                          M                         btfss   MOT1                            ; Se MOT1 estiver ligado salte 1 instruç
                            ão      
                          M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim 
                          M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
                          M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         goto    MOT1OFF                         ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   T12                                     ; Se T12 estiver inativo, inicie
                             o temporizador         
                          M                         goto    COUNTER                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.              
                          M                         movlw   D'6'                            ; Mova o valor 6 para W                 
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     T12                                     ; Ative a Flag T12 pra indicar q
                            ue a temporização está ativa
                          M                 COUNTER:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'153'                          ; Mova o valor 153 para W       
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 153 (COUNT vai de 0 
                            a 153)  
                          M                         btfss   STATUS,Z                        ; Z=1? ou 153 xor COUNT = 0? Se sim, sig
                            nifica que COUNT=153    
                          M                         goto    MOT1OFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     T12                                     ; Se sim, então desative a Flag 
                            T12   
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 MOT1OFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 3,9 segundos para chegar a 100Cº
                          M         if      FLAG1==FLAG1 & 4==0                             ; Se argumento for a FLAG C100 então faç
                            a o código abaixo...    
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução     
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   TT                                      ; Se LH estiver inativo salte 1 
                            instrução
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   MOT1                            ; Se MOT1 estiver desligado salte 1 inst
                            rução   
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   C100                            ; Se C100 estiver inativo, inicie o temp
                            orizador
                          M                         goto    ENDTT0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'100'                          ; Mova o valor 100 para W               
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 100 
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            até 255 (156 contagens)         
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     C100                            ; Ative a Flag C100 pra indicar que a te
                            mporização está ativa
                          M                 ENDTT0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'100'                          ; Mova o valor 100 para W       
                          M                         xorwf   CELSIUS,W                       ; Compare CELSIUS com 100Cº (CELSIUS vai
                             de 0 a 100)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 100 xor CELSIUS = 0? Se sim, s
                            ignifica que CELSIUS=100
                          M                         goto    ENDTT                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     C100                            ; Se sim, então desative a Flag C100   
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDTT:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo CELSIUS, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de 3 segundos do repouso do aquecimento
                          M         if      FLAG1==FLAG1 & 4==2                             ; Se argumento for a FLAG RT então faça 
                            o código abaixo...
                          M                         btfss   TT                                      ; Se TT estiver ativo salte 1 in
                            strução 
                          M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   RT                                      ; Se RT estiver inativo, inicie 
                            o temporizador
                          M                         goto    ENDR0                           ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W         
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)                   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                          M                         bsf     RT                                      ; Ative a Flag RT pra indicar qu
                            e a temporização está ativa
                          M                 ENDR0:                                                  ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'47'                           ; Mova o valor 47 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 47 (COUNT vai de 0 a
                             47)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 47 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=47
                          M                         goto    ENDR                            ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     RT                                      ; Se sim, então desative a Flag 
                            RT   
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 ENDR:                                                   ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para desativar LH,LM e LL nesta ordem
                          M         if      FLAG1==Q0 & 4==4                                ; Se argumento for V5 então faça o códig
                            o abaixo...
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    STARTV5                         ; Se estiver ligado, Começe as verificaç
                            ões
                          M                         goto    ENDV5                           ; Salte para o fim e não faça nada
                          M                 STARTV5:                                                ; VERIFICAÇÃO DOS SENSORES -----
                            -------------------
                          M                         btfsc   LH                                      ; LH está ativado?
                          M                         goto    LHSTART                         ; Sim, então verifique o tempo de LH
                          M                         btfsc   LM                                      ; Não, LM está ativado?
                          M                         goto    LMSTART                         ; Sim, então verifique o tempo de LM
                          M                         btfsc   LL                                      ; Não, LL está ativado?
                          M                         goto    LLSTART                         ; Sim, então verifique o tempo de LL
                          M                         goto    ENDV5                           ; Não, Então saia e não faça nada
                          M                 LHSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LH ---
                            --------------------
                          M                         btfss   P2H                                     ; A Flag P2H está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LHON                            ; desacione a Flag LHON indicando que LH
                             está inativo
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 LMSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LM ---
                            --------------------
                          M                         btfss   P1M                                     ; A Flag P1M está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W     
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35  
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim     
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0 
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LMON                            ; desacione a Flag LMON indicando que LM
                             está inativo
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 LLSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LL ---
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            --------------------
                          M                         btfss   P1L                                     ; A Flag P1L está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W             
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35          
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim             
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0  
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LLON                            ; desacione a Flag LLON indicando que LL
                             está inativo
                          M                         bsf     RESC                            ; acione a Flag RESC indicando que o 2ª 
                            reservatorio esta cheio
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 STARTTIMER:                                             ; INICIALIZAÇÃO DO TEMPORIZADOR 
                            ----------------------
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Ative o temporizador   
                          M                         bsf     P1L                                     ; Acione a Flag P1L
                          M                         bsf     P1M                                     ; Acione a Flag P1M
                          M                         bsf     P2H                                     ; Acione a Flag P2H
                          M                 ENDV5:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 4,1 segundos para chegar a 120psi
                          M         if      FLAG1==FLAG2 & 4==4                             ; Se argumento for a FLAG P120 então faç
                            a o código abaixo...
                          M                         btfss   V4                                      ; Se V4 estiver ligado salte 1 i
                            nstrução        
                          M                         goto    ENDV4                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   P120                            ; Se P120 estiver inativo salte 1 instru
                            ção
                          M                         goto    ENDRES                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'120'                          ; Mova o valor 120 para W               
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 120 
                            até 255 (136 contagens)         
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                          M                         bsf     P120                            ; Ative a Flag P120 pra indicar que a te
                            mporização está ativa
                          M                 ENDRES:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'120'                          ; Mova o valor 120 para W       
                          M                         xorwf   PSI,W                           ; Compare PSI com 120psi (PSI vai de 0 a
                             120)   
                          M                         btfss   STATUS,Z                        ; Z=1? ou 120 xor PSI = 0? Se sim, signi
                            fica que PSI=120
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         goto    ENDV4                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P120                            ; Se sim, então desative a Flag P120
                          M                         bcf     RESC                            ; Desative a FLAG RESC
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDV4:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo PSI, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de retenção de 5 segundos para desligar BOMB 
                          M         if      FLAG1==Q0 & 4==7                                ; Se argumento for BOMB então faça o cód
                            igo abaixo...   
                          M                         btfss   BOMB                            ; Se BOMB estiver ligado salte 1 instruç
                            ão              
                          M                         goto    BOMBOFF                         ; Não execute o temporizador, Vai para o
                             fim 
                          M                         btfsc   P3                                      ; Se P3 estiver inativo, inicie 
                            o temporizador          
                          M                         goto    COUNTP3                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     P3                                      ; Ative a Flag P3 pra indicar qu
                            e a temporização está ativa     
                          M                 COUNTP3:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'78'                           ; Mova o valor 78 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 78 (COUNT vai de 0 a
                             78)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 78 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=78
                          M                         goto    BOMBOFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     P3                                      ; Se sim, então desative a Flag 
                            P3 
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                         bsf     EOP                                     ; Ative a Flag EOP para indicar 
                            que será "Fim do Programa"
                          M                 BOMBOFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         IN              LM
0100   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
0101   1887               M         btfsc   PORTC,RC1                       ; O BIT 'bit' do registro 'reg' é 0?
0102   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
0103   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         OR              V1
0104   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0105   0103               M         clrw                                            ; Limpa o W, W = 0
0106   1808               M         btfsc   PORTD,RD0                       ; O dado atual é 0?
0107   3001               M         movlw   H'01'                           ; Não, Então W será 1
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0108   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         ANDN    P1M
0109   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
010A   0103               M         clrw                                            ; Limpa o W, W = 0
010B   1E2C               M         btfss   FLAG1,4                         ; O dado atual é 1?
010C   3001               M         movlw   H'01'                           ; Não, Então W será 1
010D   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         AND     LL
010E   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
010F   0103               M         clrw                                            ; Limpa o W, W = 0
0110   1907               M         btfsc   PORTC,RC2                       ; O dado atual é 0?
0111   3001               M         movlw   H'01'                           ; Não, Então W será 1
0112   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         OR              LM
0113   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0114   0103               M         clrw                                            ; Limpa o W, W = 0
0115   1887               M         btfsc   PORTC,RC1                       ; O dado atual é 0?
0116   3001               M         movlw   H'01'                           ; Não, Então W será 1
0117   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         OUT     LM              ; LM = (LM+V1).P1M´.LL+LM | P1M´->LM
0118   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0119   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
011A   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
011B   291E               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
011C   1087               M         bcf     PORTC,RC1                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
011D   291F               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
011E   1487               M         bsf     PORTC,RC1                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
011F   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                      00057         __OPEN_V2_UNTIL_LH                                                      ; Abra a válvula V2 até 
                            que o sensor LH seja acionado
                          M         WHEN    T1
                          M 
                          M         ; Retardo de 1 segundo para ligar V2
                          M         if      FLAG1==FLAG1 & 1==1                             ; Se argumento for a FLAG T1 então faça 
                            o código abaixo...
0120   1807               M                         btfsc   LH                                      ; Se LH estiver inativo, salte 1
                             instrução
0121   2939               M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
0122   1C87               M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
0123   2939               M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
0124   1808               M                         btfsc   V1                                      ; Se V1 estiver desligado salte 
                            1 instrução
0125   2939               M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
0126   1888               M                         btfsc   V2                                      ; Se V2 estiver desligado salte 
                            1 instrução
0127   2939               M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim     
0128   1A08               M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            1 instrução
0129   2939               M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim                     
012A   18AC               M                         btfsc   T1                                      ; Se T1 estiver inativo, inicie 
                            o temporizador
012B   2931               M                         goto    ENDV10                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
012C   300B               M                         movlw   D'11'                           ; Mova o valor 11 para W
012D   0081               M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 11 a
                            té 255 (245 contagens)
012E   168B               M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
012F   14AC               M                         bsf     T1                                      ; Ative a Flag T1 pra indicar qu
                            e a temporização está ativa
0130   1506               M                         bsf     TIMER                           ; Ligue o display de tempo do Proteus
Warning[207]: Found label after column 1. (ENDV10)
0131                      M                 ENDV10:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
0131   3010               M                         movlw   D'16'                           ; Mova o valor 16 para W
0132   062E               M                         xorwf   COUNT,W                         ; Compare COUNT com 16 (COUNT vai de 0 a
                             16)
0133   1D03               M                         btfss   STATUS,Z                        ; Z=1? ou 16 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=16
0134   2939               M                         goto    ENDV1                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
0135   1106               M                         bcf     TIMER                           ; Desligue o display de tempo do Proteus
0136   10AC               M                         bcf     T1                                      ; Se sim, então desative a Flag 
                            T1
0137   01AE               M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
0138   128B               M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
Warning[207]: Found label after column 1. (ENDV1)
0139                      M                 ENDV1:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LL (Tempo imaginário de enchimento)
                          M         if      FLAG1==FLAG1 & 1==3                             ; Se argumento for a FLAG P1L então faça
                             o código abaixo...
                          M                         btfsc   LL                                      ; Se LL estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   P1L                                     ; Se P1L estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLL0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                          M                         bsf     P1L                                     ; Ative a Flag P1L pra indicar q
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            ue a temporização está ativa
                          M                 ENDLL0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                          M                         goto    ENDLL                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     P1L                                     ; Se sim, então desative a Flag 
                            P1L
                          M                         bsf     LLON                            ; Ative a Flag LLON pra indicar que LL e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                          M                 ENDLL:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de 2,2 segundos para ativar LM (Tempo imaginário de enchimento)
                          M         if      FLAG1==FLAG1 & 1==4                             ; Se argumento for a FLAG P1M então faça
                             o código abaixo...
                          M                         btfsc   LM                                      ; Se LM estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   LL                                      ; Se LL estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   P1M                                     ; Se P1M estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLM0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W 
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador         
                          M                         bsf     P1M                                     ; Ative a Flag P1M pra indicar q
                            ue a temporização está ativa
                          M                 ENDLM0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35      
                          M                         goto    ENDLM                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         bcf     P1M                                     ; Se sim, então desative a Flag 
                            P1M     
                          M                         bsf     LMON                            ; Ative a Flag LMON pra indicar que LM e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDLM:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LH
                          M         if      FLAG1==FLAG1 & 1==5                             ; Se argumento for a FLAG P1H então faça
                             o código abaixo...
                          M                         btfsc   LH                                      ; Se LH estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfss   V2                                      ; Se V2 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   P2H                                     ; Se P1H estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLH0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W         
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador 
                          M                         bsf     P2H                                     ; Ative a Flag P2H pra indicar q
                            ue a temporização está ativa
                          M                 ENDLH0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                          M                         goto    ENDLH                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P2H                                     ; Se sim, então desative a Flag 
                            P2H  
                          M                         bsf     LHON                            ; Ative a Flag LHON pra indicar que LH e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 ENDLH:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de retenção de 12 segundos para desligar MOT1
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if      FLAG1==FLAG1 & 1==6                             ; Se argumento for a FLAG T12 então faça
                             o código abaixo...             
                          M                         btfss   MOT1                            ; Se MOT1 estiver ligado salte 1 instruç
                            ão      
                          M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim 
                          M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
                          M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    MOT1OFF                         ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   T12                                     ; Se T12 estiver inativo, inicie
                             o temporizador         
                          M                         goto    COUNTER                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.              
                          M                         movlw   D'6'                            ; Mova o valor 6 para W                 
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     T12                                     ; Ative a Flag T12 pra indicar q
                            ue a temporização está ativa
                          M                 COUNTER:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'153'                          ; Mova o valor 153 para W       
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 153 (COUNT vai de 0 
                            a 153)  
                          M                         btfss   STATUS,Z                        ; Z=1? ou 153 xor COUNT = 0? Se sim, sig
                            nifica que COUNT=153    
                          M                         goto    MOT1OFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     T12                                     ; Se sim, então desative a Flag 
                            T12   
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 MOT1OFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 3,9 segundos para chegar a 100Cº
                          M         if      FLAG1==FLAG1 & 1==0                             ; Se argumento for a FLAG C100 então faç
                            a o código abaixo...    
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução     
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   TT                                      ; Se LH estiver inativo salte 1 
                            instrução
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   MOT1                            ; Se MOT1 estiver desligado salte 1 inst
                            rução   
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   C100                            ; Se C100 estiver inativo, inicie o temp
                            orizador
                          M                         goto    ENDTT0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'100'                          ; Mova o valor 100 para W               
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 100 
                            até 255 (156 contagens)         
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     C100                            ; Ative a Flag C100 pra indicar que a te
                            mporização está ativa
                          M                 ENDTT0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'100'                          ; Mova o valor 100 para W       
                          M                         xorwf   CELSIUS,W                       ; Compare CELSIUS com 100Cº (CELSIUS vai
                             de 0 a 100)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 100 xor CELSIUS = 0? Se sim, s
                            ignifica que CELSIUS=100
                          M                         goto    ENDTT                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     C100                            ; Se sim, então desative a Flag C100   
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDTT:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo CELSIUS, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de 3 segundos do repouso do aquecimento
                          M         if      FLAG1==FLAG1 & 1==2                             ; Se argumento for a FLAG RT então faça 
                            o código abaixo...
                          M                         btfss   TT                                      ; Se TT estiver ativo salte 1 in
                            strução 
                          M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   RT                                      ; Se RT estiver inativo, inicie 
                            o temporizador
                          M                         goto    ENDR0                           ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W         
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)                   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                          M                         bsf     RT                                      ; Ative a Flag RT pra indicar qu
                            e a temporização está ativa
                          M                 ENDR0:                                                  ; INICIO DA VERIFICAÇÃO DO TEMPO
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                             ----------------------------
                          M                         movlw   D'47'                           ; Mova o valor 47 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 47 (COUNT vai de 0 a
                             47)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 47 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=47
                          M                         goto    ENDR                            ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     RT                                      ; Se sim, então desative a Flag 
                            RT   
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 ENDR:                                                   ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para desativar LH,LM e LL nesta ordem
                          M         if      FLAG1==Q0 & 1==4                                ; Se argumento for V5 então faça o códig
                            o abaixo...
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    STARTV5                         ; Se estiver ligado, Começe as verificaç
                            ões
                          M                         goto    ENDV5                           ; Salte para o fim e não faça nada
                          M                 STARTV5:                                                ; VERIFICAÇÃO DOS SENSORES -----
                            -------------------
                          M                         btfsc   LH                                      ; LH está ativado?
                          M                         goto    LHSTART                         ; Sim, então verifique o tempo de LH
                          M                         btfsc   LM                                      ; Não, LM está ativado?
                          M                         goto    LMSTART                         ; Sim, então verifique o tempo de LM
                          M                         btfsc   LL                                      ; Não, LL está ativado?
                          M                         goto    LLSTART                         ; Sim, então verifique o tempo de LL
                          M                         goto    ENDV5                           ; Não, Então saia e não faça nada
                          M                 LHSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LH ---
                            --------------------
                          M                         btfss   P2H                                     ; A Flag P2H está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LHON                            ; desacione a Flag LHON indicando que LH
                             está inativo
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 LMSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LM ---
                            --------------------
                          M                         btfss   P1M                                     ; A Flag P1M está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W     
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35  
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim     
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0 
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LMON                            ; desacione a Flag LMON indicando que LM
                             está inativo
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 LLSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LL ---
                            --------------------
                          M                         btfss   P1L                                     ; A Flag P1L está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W             
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35          
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim             
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0  
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LLON                            ; desacione a Flag LLON indicando que LL
                             está inativo
                          M                         bsf     RESC                            ; acione a Flag RESC indicando que o 2ª 
                            reservatorio esta cheio
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 STARTTIMER:                                             ; INICIALIZAÇÃO DO TEMPORIZADOR 
                            ----------------------
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Ative o temporizador   
                          M                         bsf     P1L                                     ; Acione a Flag P1L
                          M                         bsf     P1M                                     ; Acione a Flag P1M
                          M                         bsf     P2H                                     ; Acione a Flag P2H
                          M                 ENDV5:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 4,1 segundos para chegar a 120psi
                          M         if      FLAG1==FLAG2 & 1==4                             ; Se argumento for a FLAG P120 então faç
                            a o código abaixo...
                          M                         btfss   V4                                      ; Se V4 estiver ligado salte 1 i
                            nstrução        
                          M                         goto    ENDV4                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   P120                            ; Se P120 estiver inativo salte 1 instru
                            ção
                          M                         goto    ENDRES                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'120'                          ; Mova o valor 120 para W               
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 120 
                            até 255 (136 contagens)         
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                          M                         bsf     P120                            ; Ative a Flag P120 pra indicar que a te
                            mporização está ativa
                          M                 ENDRES:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'120'                          ; Mova o valor 120 para W       
                          M                         xorwf   PSI,W                           ; Compare PSI com 120psi (PSI vai de 0 a
                             120)   
                          M                         btfss   STATUS,Z                        ; Z=1? ou 120 xor PSI = 0? Se sim, signi
                            fica que PSI=120
                          M                         goto    ENDV4                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P120                            ; Se sim, então desative a Flag P120
                          M                         bcf     RESC                            ; Desative a FLAG RESC
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDV4:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo PSI, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de retenção de 5 segundos para desligar BOMB 
                          M         if      FLAG1==Q0 & 1==7                                ; Se argumento for BOMB então faça o cód
                            igo abaixo...   
                          M                         btfss   BOMB                            ; Se BOMB estiver ligado salte 1 instruç
                            ão              
                          M                         goto    BOMBOFF                         ; Não execute o temporizador, Vai para o
                             fim 
                          M                         btfsc   P3                                      ; Se P3 estiver inativo, inicie 
                            o temporizador          
                          M                         goto    COUNTP3                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     P3                                      ; Ative a Flag P3 pra indicar qu
                            e a temporização está ativa     
                          M                 COUNTP3:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'78'                           ; Mova o valor 78 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 78 (COUNT vai de 0 a
                             78)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 78 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=78
                          M                         goto    BOMBOFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     P3                                      ; Se sim, então desative a Flag 
                            P3 
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                         bsf     EOP                                     ; Ative a Flag EOP para indicar 
                            que será "Fim do Programa"
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 BOMBOFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         IN              V2
0139   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
013A   1888               M         btfsc   PORTD,RD1                       ; O BIT 'bit' do registro 'reg' é 0?
013B   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
013C   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         OR              LM
013D   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
013E   0103               M         clrw                                            ; Limpa o W, W = 0
013F   1887               M         btfsc   PORTC,RC1                       ; O dado atual é 0?
0140   3001               M         movlw   H'01'                           ; Não, Então W será 1
0141   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         ANDN    T1
0142   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0143   0103               M         clrw                                            ; Limpa o W, W = 0
0144   1CAC               M         btfss   FLAG1,1                         ; O dado atual é 1?
0145   3001               M         movlw   H'01'                           ; Não, Então W será 1
0146   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         AND     LL
0147   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0148   0103               M         clrw                                            ; Limpa o W, W = 0
0149   1907               M         btfsc   PORTC,RC2                       ; O dado atual é 0?
014A   3001               M         movlw   H'01'                           ; Não, Então W será 1
014B   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         ANDN    LH
014C   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
014D   0103               M         clrw                                            ; Limpa o W, W = 0
014E   1C07               M         btfss   PORTC,RC0                       ; O dado atual é 1?
014F   3001               M         movlw   H'01'                           ; Não, Então W será 1
0150   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         ANDN    V1
0151   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0152   0103               M         clrw                                            ; Limpa o W, W = 0
0153   1C08               M         btfss   PORTD,RD0                       ; O dado atual é 1?
0154   3001               M         movlw   H'01'                           ; Não, Então W será 1
0155   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         ANDN    V5
0156   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0157   0103               M         clrw                                            ; Limpa o W, W = 0
0158   1E08               M         btfss   PORTD,RD4                       ; O dado atual é 1?
0159   3001               M         movlw   H'01'                           ; Não, Então W será 1
015A   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         OUT     V2      ; V2 = (V2+LM).T1´.LL.LH´.V1´.V5´ | T1´->V5
015B   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
015C   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
015D   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
015E   2961               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
015F   1088               M         bcf     PORTD,RD1                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
0160   2962               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
0161   1488               M         bsf     PORTD,RD1                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
0162   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00058         __ACTIVATE_LH_WHEN_DETECTS_P2                           ; Acione o sensor LH quando detectar o P
                            2
                          M         WHEN    P2H
                          M 
                          M         ; Retardo de 1 segundo para ligar V2
                          M         if      FLAG1==FLAG1 & 5==1                             ; Se argumento for a FLAG T1 então faça 
                            o código abaixo...
                          M                         btfsc   LH                                      ; Se LH estiver inativo, salte 1
                             instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   V1                                      ; Se V1 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   V2                                      ; Se V2 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim     
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim                     
                          M                         btfsc   T1                                      ; Se T1 estiver inativo, inicie 
                            o temporizador
                          M                         goto    ENDV10                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'11'                           ; Mova o valor 11 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 11 a
                            té 255 (245 contagens)
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                          M                         bsf     T1                                      ; Ative a Flag T1 pra indicar qu
                            e a temporização está ativa
                          M                         bsf     TIMER                           ; Ligue o display de tempo do Proteus
                          M                 ENDV10:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'16'                           ; Mova o valor 16 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 16 (COUNT vai de 0 a
                             16)
                          M                         btfss   STATUS,Z                        ; Z=1? ou 16 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=16
                          M                         goto    ENDV1                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     TIMER                           ; Desligue o display de tempo do Proteus
                          M                         bcf     T1                                      ; Se sim, então desative a Flag 
                            T1
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                          M                 ENDV1:                                                  ; Fim da Execução
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LL (Tempo imaginário de enchimento)
                          M         if      FLAG1==FLAG1 & 5==3                             ; Se argumento for a FLAG P1L então faça
                             o código abaixo...
                          M                         btfsc   LL                                      ; Se LL estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   P1L                                     ; Se P1L estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLL0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                          M                         bsf     P1L                                     ; Ative a Flag P1L pra indicar q
                            ue a temporização está ativa
                          M                 ENDLL0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                          M                         goto    ENDLL                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     P1L                                     ; Se sim, então desative a Flag 
                            P1L
                          M                         bsf     LLON                            ; Ative a Flag LLON pra indicar que LL e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                          M                 ENDLL:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de 2,2 segundos para ativar LM (Tempo imaginário de enchimento)
                          M         if      FLAG1==FLAG1 & 5==4                             ; Se argumento for a FLAG P1M então faça
                             o código abaixo...
                          M                         btfsc   LM                                      ; Se LM estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   LL                                      ; Se LL estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            nstrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   P1M                                     ; Se P1M estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLM0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W 
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador         
                          M                         bsf     P1M                                     ; Ative a Flag P1M pra indicar q
                            ue a temporização está ativa
                          M                 ENDLM0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35      
                          M                         goto    ENDLM                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P1M                                     ; Se sim, então desative a Flag 
                            P1M     
                          M                         bsf     LMON                            ; Ative a Flag LMON pra indicar que LM e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDLM:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LH
                          M         if      FLAG1==FLAG1 & 5==5                             ; Se argumento for a FLAG P1H então faça
                             o código abaixo...
0163   1807               M                         btfsc   LH                                      ; Se LH estiver inativo salte 1 
                            instrução
0164   2977               M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
0165   1C87               M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
0166   2977               M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
0167   1C88               M                         btfss   V2                                      ; Se V2 estiver ativo, salte 1 i
                            nstrução
0168   2977               M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
0169   1AAC               M                         btfsc   P2H                                     ; Se P1H estiver inativo, inicie
                             o temporizador
016A   296F               M                         goto    ENDLH0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
016B   3006               M                         movlw   D'6'                            ; Mova o valor 6 para W         
016C   0081               M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

016D   168B               M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador 
016E   16AC               M                         bsf     P2H                                     ; Ative a Flag P2H pra indicar q
                            ue a temporização está ativa
Warning[207]: Found label after column 1. (ENDLH0)
016F                      M                 ENDLH0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
016F   3023               M                         movlw   D'35'                           ; Mova o valor 35 para W        
0170   062E               M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
0171   1D03               M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
0172   2977               M                         goto    ENDLH                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
0173   12AC               M                         bcf     P2H                                     ; Se sim, então desative a Flag 
                            P2H  
0174   142D               M                         bsf     LHON                            ; Ative a Flag LHON pra indicar que LH e
                            stá ativo
0175   01AE               M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
0176   128B               M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
Warning[207]: Found label after column 1. (ENDLH)
0177                      M                 ENDLH:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de retenção de 12 segundos para desligar MOT1
                          M         if      FLAG1==FLAG1 & 5==6                             ; Se argumento for a FLAG T12 então faça
                             o código abaixo...             
                          M                         btfss   MOT1                            ; Se MOT1 estiver ligado salte 1 instruç
                            ão      
                          M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim 
                          M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
                          M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    MOT1OFF                         ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   T12                                     ; Se T12 estiver inativo, inicie
                             o temporizador         
                          M                         goto    COUNTER                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.              
                          M                         movlw   D'6'                            ; Mova o valor 6 para W                 
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     T12                                     ; Ative a Flag T12 pra indicar q
                            ue a temporização está ativa
                          M                 COUNTER:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'153'                          ; Mova o valor 153 para W       
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 153 (COUNT vai de 0 
                            a 153)  
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         btfss   STATUS,Z                        ; Z=1? ou 153 xor COUNT = 0? Se sim, sig
                            nifica que COUNT=153    
                          M                         goto    MOT1OFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     T12                                     ; Se sim, então desative a Flag 
                            T12   
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 MOT1OFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 3,9 segundos para chegar a 100Cº
                          M         if      FLAG1==FLAG1 & 5==0                             ; Se argumento for a FLAG C100 então faç
                            a o código abaixo...    
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução     
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   TT                                      ; Se LH estiver inativo salte 1 
                            instrução
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   MOT1                            ; Se MOT1 estiver desligado salte 1 inst
                            rução   
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   C100                            ; Se C100 estiver inativo, inicie o temp
                            orizador
                          M                         goto    ENDTT0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'100'                          ; Mova o valor 100 para W               
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 100 
                            até 255 (156 contagens)         
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     C100                            ; Ative a Flag C100 pra indicar que a te
                            mporização está ativa
                          M                 ENDTT0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'100'                          ; Mova o valor 100 para W       
                          M                         xorwf   CELSIUS,W                       ; Compare CELSIUS com 100Cº (CELSIUS vai
                             de 0 a 100)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 100 xor CELSIUS = 0? Se sim, s
                            ignifica que CELSIUS=100
                          M                         goto    ENDTT                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     C100                            ; Se sim, então desative a Flag C100   
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDTT:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo CELSIUS, para fins de depuração.
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de 3 segundos do repouso do aquecimento
                          M         if      FLAG1==FLAG1 & 5==2                             ; Se argumento for a FLAG RT então faça 
                            o código abaixo...
                          M                         btfss   TT                                      ; Se TT estiver ativo salte 1 in
                            strução 
                          M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   RT                                      ; Se RT estiver inativo, inicie 
                            o temporizador
                          M                         goto    ENDR0                           ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W         
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)                   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                          M                         bsf     RT                                      ; Ative a Flag RT pra indicar qu
                            e a temporização está ativa
                          M                 ENDR0:                                                  ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'47'                           ; Mova o valor 47 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 47 (COUNT vai de 0 a
                             47)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 47 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=47
                          M                         goto    ENDR                            ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     RT                                      ; Se sim, então desative a Flag 
                            RT   
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 ENDR:                                                   ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para desativar LH,LM e LL nesta ordem
                          M         if      FLAG1==Q0 & 5==4                                ; Se argumento for V5 então faça o códig
                            o abaixo...
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    STARTV5                         ; Se estiver ligado, Começe as verificaç
                            ões
                          M                         goto    ENDV5                           ; Salte para o fim e não faça nada
                          M                 STARTV5:                                                ; VERIFICAÇÃO DOS SENSORES -----
                            -------------------
                          M                         btfsc   LH                                      ; LH está ativado?
                          M                         goto    LHSTART                         ; Sim, então verifique o tempo de LH
                          M                         btfsc   LM                                      ; Não, LM está ativado?
                          M                         goto    LMSTART                         ; Sim, então verifique o tempo de LM
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         btfsc   LL                                      ; Não, LL está ativado?
                          M                         goto    LLSTART                         ; Sim, então verifique o tempo de LL
                          M                         goto    ENDV5                           ; Não, Então saia e não faça nada
                          M                 LHSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LH ---
                            --------------------
                          M                         btfss   P2H                                     ; A Flag P2H está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LHON                            ; desacione a Flag LHON indicando que LH
                             está inativo
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 LMSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LM ---
                            --------------------
                          M                         btfss   P1M                                     ; A Flag P1M está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W     
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35  
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim     
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0 
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LMON                            ; desacione a Flag LMON indicando que LM
                             está inativo
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 LLSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LL ---
                            --------------------
                          M                         btfss   P1L                                     ; A Flag P1L está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W             
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35          
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim             
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0  
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LLON                            ; desacione a Flag LLON indicando que LL
                             está inativo
                          M                         bsf     RESC                            ; acione a Flag RESC indicando que o 2ª 
                            reservatorio esta cheio
                          M                         goto    ENDV5                           ; Finalize as operações
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 STARTTIMER:                                             ; INICIALIZAÇÃO DO TEMPORIZADOR 
                            ----------------------
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Ative o temporizador   
                          M                         bsf     P1L                                     ; Acione a Flag P1L
                          M                         bsf     P1M                                     ; Acione a Flag P1M
                          M                         bsf     P2H                                     ; Acione a Flag P2H
                          M                 ENDV5:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 4,1 segundos para chegar a 120psi
                          M         if      FLAG1==FLAG2 & 5==4                             ; Se argumento for a FLAG P120 então faç
                            a o código abaixo...
                          M                         btfss   V4                                      ; Se V4 estiver ligado salte 1 i
                            nstrução        
                          M                         goto    ENDV4                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   P120                            ; Se P120 estiver inativo salte 1 instru
                            ção
                          M                         goto    ENDRES                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'120'                          ; Mova o valor 120 para W               
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 120 
                            até 255 (136 contagens)         
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                          M                         bsf     P120                            ; Ative a Flag P120 pra indicar que a te
                            mporização está ativa
                          M                 ENDRES:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'120'                          ; Mova o valor 120 para W       
                          M                         xorwf   PSI,W                           ; Compare PSI com 120psi (PSI vai de 0 a
                             120)   
                          M                         btfss   STATUS,Z                        ; Z=1? ou 120 xor PSI = 0? Se sim, signi
                            fica que PSI=120
                          M                         goto    ENDV4                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P120                            ; Se sim, então desative a Flag P120
                          M                         bcf     RESC                            ; Desative a FLAG RESC
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDV4:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo PSI, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de retenção de 5 segundos para desligar BOMB 
                          M         if      FLAG1==Q0 & 5==7                                ; Se argumento for BOMB então faça o cód
                            igo abaixo...   
                          M                         btfss   BOMB                            ; Se BOMB estiver ligado salte 1 instruç
                            ão              
                          M                         goto    BOMBOFF                         ; Não execute o temporizador, Vai para o
                             fim 
                          M                         btfsc   P3                                      ; Se P3 estiver inativo, inicie 
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            o temporizador          
                          M                         goto    COUNTP3                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     P3                                      ; Ative a Flag P3 pra indicar qu
                            e a temporização está ativa     
                          M                 COUNTP3:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'78'                           ; Mova o valor 78 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 78 (COUNT vai de 0 a
                             78)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 78 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=78
                          M                         goto    BOMBOFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     P3                                      ; Se sim, então desative a Flag 
                            P3 
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                         bsf     EOP                                     ; Ative a Flag EOP para indicar 
                            que será "Fim do Programa"
                          M                 BOMBOFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         IN              LH
0177   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
0178   1807               M         btfsc   PORTC,RC0                       ; O BIT 'bit' do registro 'reg' é 0?
0179   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
017A   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         OR              V2
017B   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
017C   0103               M         clrw                                            ; Limpa o W, W = 0
017D   1888               M         btfsc   PORTD,RD1                       ; O dado atual é 0?
017E   3001               M         movlw   H'01'                           ; Não, Então W será 1
017F   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         ANDN    P2H
0180   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0181   0103               M         clrw                                            ; Limpa o W, W = 0
0182   1EAC               M         btfss   FLAG1,5                         ; O dado atual é 1?
0183   3001               M         movlw   H'01'                           ; Não, Então W será 1
0184   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         AND     LM
0185   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0186   0103               M         clrw                                            ; Limpa o W, W = 0
0187   1887               M         btfsc   PORTC,RC1                       ; O dado atual é 0?
0188   3001               M         movlw   H'01'                           ; Não, Então W será 1
0189   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         OR              LH
018A   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
018B   0103               M         clrw                                            ; Limpa o W, W = 0
018C   1807               M         btfsc   PORTC,RC0                       ; O dado atual é 0?
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018D   3001               M         movlw   H'01'                           ; Não, Então W será 1
018E   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         OUT     LH              ; LH = (LH+V2).P2H´.LM+LH | P2H´->LH
018F   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0190   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
0191   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
0192   2995               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
0193   1007               M         bcf     PORTC,RC0                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
0194   2996               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
0195   1407               M         bsf     PORTC,RC0                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
0196   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                      00059         __TURNS_ON_MOTOR_UNTIL_12S                                      ; Ative o MOTOR 1 até chegar em 
                            12 segundos
                          M         IN              MOT1
0197   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
0198   1B08               M         btfsc   PORTD,RD6                       ; O BIT 'bit' do registro 'reg' é 0?
0199   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
019A   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         OR              V2
019B   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
019C   0103               M         clrw                                            ; Limpa o W, W = 0
019D   1888               M         btfsc   PORTD,RD1                       ; O dado atual é 0?
019E   3001               M         movlw   H'01'                           ; Não, Então W será 1
019F   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         OUT     MOT1    ; MOT1 = MOT1+V2
01A0   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
01A1   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
01A2   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
01A3   29A6               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
01A4   1308               M         bcf     PORTD,RD6                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
01A5   29A7               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
01A6   1708               M         bsf     PORTD,RD6                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
01A7   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                          M         WHEN    T12
                          M 
                          M         ; Retardo de 1 segundo para ligar V2
                          M         if      FLAG1==FLAG1 & 6==1                             ; Se argumento for a FLAG T1 então faça 
                            o código abaixo...
                          M                         btfsc   LH                                      ; Se LH estiver inativo, salte 1
                             instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   V1                                      ; Se V1 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   V2                                      ; Se V2 estiver desligado salte 
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim     
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim                     
                          M                         btfsc   T1                                      ; Se T1 estiver inativo, inicie 
                            o temporizador
                          M                         goto    ENDV10                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'11'                           ; Mova o valor 11 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 11 a
                            té 255 (245 contagens)
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                          M                         bsf     T1                                      ; Ative a Flag T1 pra indicar qu
                            e a temporização está ativa
                          M                         bsf     TIMER                           ; Ligue o display de tempo do Proteus
                          M                 ENDV10:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'16'                           ; Mova o valor 16 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 16 (COUNT vai de 0 a
                             16)
                          M                         btfss   STATUS,Z                        ; Z=1? ou 16 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=16
                          M                         goto    ENDV1                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     TIMER                           ; Desligue o display de tempo do Proteus
                          M                         bcf     T1                                      ; Se sim, então desative a Flag 
                            T1
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                          M                 ENDV1:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LL (Tempo imaginário de enchimento)
                          M         if      FLAG1==FLAG1 & 6==3                             ; Se argumento for a FLAG P1L então faça
                             o código abaixo...
                          M                         btfsc   LL                                      ; Se LL estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   P1L                                     ; Se P1L estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLL0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                          M                         bsf     P1L                                     ; Ative a Flag P1L pra indicar q
                            ue a temporização está ativa
                          M                 ENDLL0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                          M                         goto    ENDLL                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     P1L                                     ; Se sim, então desative a Flag 
                            P1L
                          M                         bsf     LLON                            ; Ative a Flag LLON pra indicar que LL e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                          M                 ENDLL:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de 2,2 segundos para ativar LM (Tempo imaginário de enchimento)
                          M         if      FLAG1==FLAG1 & 6==4                             ; Se argumento for a FLAG P1M então faça
                             o código abaixo...
                          M                         btfsc   LM                                      ; Se LM estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   LL                                      ; Se LL estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   P1M                                     ; Se P1M estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLM0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W 
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador         
                          M                         bsf     P1M                                     ; Ative a Flag P1M pra indicar q
                            ue a temporização está ativa
                          M                 ENDLM0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35      
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         goto    ENDLM                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P1M                                     ; Se sim, então desative a Flag 
                            P1M     
                          M                         bsf     LMON                            ; Ative a Flag LMON pra indicar que LM e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDLM:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LH
                          M         if      FLAG1==FLAG1 & 6==5                             ; Se argumento for a FLAG P1H então faça
                             o código abaixo...
                          M                         btfsc   LH                                      ; Se LH estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfss   V2                                      ; Se V2 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   P2H                                     ; Se P1H estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLH0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W         
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador 
                          M                         bsf     P2H                                     ; Ative a Flag P2H pra indicar q
                            ue a temporização está ativa
                          M                 ENDLH0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                          M                         goto    ENDLH                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P2H                                     ; Se sim, então desative a Flag 
                            P2H  
                          M                         bsf     LHON                            ; Ative a Flag LHON pra indicar que LH e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 ENDLH:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         
                          M         ; Tempo de retenção de 12 segundos para desligar MOT1
                          M         if      FLAG1==FLAG1 & 6==6                             ; Se argumento for a FLAG T12 então faça
                             o código abaixo...             
01A8   1F08               M                         btfss   MOT1                            ; Se MOT1 estiver ligado salte 1 instruç
                            ão      
01A9   29BB               M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim 
01AA   1C07               M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
01AB   29BB               M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim
01AC   1C87               M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
01AD   29BB               M                         goto    MOT1OFF                         ; Não execute o temporizador, Vai para o
                             fim
01AE   1B2C               M                         btfsc   T12                                     ; Se T12 estiver inativo, inicie
                             o temporizador         
01AF   29B4               M                         goto    COUNTER                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.              
01B0   3006               M                         movlw   D'6'                            ; Mova o valor 6 para W                 
01B1   0081               M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
01B2   168B               M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
01B3   172C               M                         bsf     T12                                     ; Ative a Flag T12 pra indicar q
                            ue a temporização está ativa
Warning[207]: Found label after column 1. (COUNTER)
01B4                      M                 COUNTER:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
01B4   3099               M                         movlw   D'153'                          ; Mova o valor 153 para W       
01B5   062E               M                         xorwf   COUNT,W                         ; Compare COUNT com 153 (COUNT vai de 0 
                            a 153)  
01B6   1D03               M                         btfss   STATUS,Z                        ; Z=1? ou 153 xor COUNT = 0? Se sim, sig
                            nifica que COUNT=153    
01B7   29BB               M                         goto    MOT1OFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
01B8   132C               M                         bcf     T12                                     ; Se sim, então desative a Flag 
                            T12   
01B9   01AE               M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
01BA   128B               M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
Warning[207]: Found label after column 1. (MOT1OFF)
01BB                      M                 MOT1OFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 3,9 segundos para chegar a 100Cº
                          M         if      FLAG1==FLAG1 & 6==0                             ; Se argumento for a FLAG C100 então faç
                            a o código abaixo...    
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução     
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   TT                                      ; Se LH estiver inativo salte 1 
                            instrução
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   MOT1                            ; Se MOT1 estiver desligado salte 1 inst
                            rução   
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   C100                            ; Se C100 estiver inativo, inicie o temp
                            orizador
                          M                         goto    ENDTT0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'100'                          ; Mova o valor 100 para W               
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 100 
                            até 255 (156 contagens)         
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     C100                            ; Ative a Flag C100 pra indicar que a te
                            mporização está ativa
                          M                 ENDTT0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'100'                          ; Mova o valor 100 para W       
                          M                         xorwf   CELSIUS,W                       ; Compare CELSIUS com 100Cº (CELSIUS vai
                             de 0 a 100)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 100 xor CELSIUS = 0? Se sim, s
                            ignifica que CELSIUS=100
                          M                         goto    ENDTT                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     C100                            ; Se sim, então desative a Flag C100   
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDTT:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo CELSIUS, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de 3 segundos do repouso do aquecimento
                          M         if      FLAG1==FLAG1 & 6==2                             ; Se argumento for a FLAG RT então faça 
                            o código abaixo...
                          M                         btfss   TT                                      ; Se TT estiver ativo salte 1 in
                            strução 
                          M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   RT                                      ; Se RT estiver inativo, inicie 
                            o temporizador
                          M                         goto    ENDR0                           ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W         
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)                   
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                          M                         bsf     RT                                      ; Ative a Flag RT pra indicar qu
                            e a temporização está ativa
                          M                 ENDR0:                                                  ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'47'                           ; Mova o valor 47 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 47 (COUNT vai de 0 a
                             47)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 47 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=47
                          M                         goto    ENDR                            ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     RT                                      ; Se sim, então desative a Flag 
                            RT   
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 ENDR:                                                   ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para desativar LH,LM e LL nesta ordem
                          M         if      FLAG1==Q0 & 6==4                                ; Se argumento for V5 então faça o códig
                            o abaixo...
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    STARTV5                         ; Se estiver ligado, Começe as verificaç
                            ões
                          M                         goto    ENDV5                           ; Salte para o fim e não faça nada
                          M                 STARTV5:                                                ; VERIFICAÇÃO DOS SENSORES -----
                            -------------------
                          M                         btfsc   LH                                      ; LH está ativado?
                          M                         goto    LHSTART                         ; Sim, então verifique o tempo de LH
                          M                         btfsc   LM                                      ; Não, LM está ativado?
                          M                         goto    LMSTART                         ; Sim, então verifique o tempo de LM
                          M                         btfsc   LL                                      ; Não, LL está ativado?
                          M                         goto    LLSTART                         ; Sim, então verifique o tempo de LL
                          M                         goto    ENDV5                           ; Não, Então saia e não faça nada
                          M                 LHSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LH ---
                            --------------------
                          M                         btfss   P2H                                     ; A Flag P2H está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LHON                            ; desacione a Flag LHON indicando que LH
                             está inativo
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 LMSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LM ---
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            --------------------
                          M                         btfss   P1M                                     ; A Flag P1M está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W     
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35  
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim     
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0 
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LMON                            ; desacione a Flag LMON indicando que LM
                             está inativo
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 LLSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LL ---
                            --------------------
                          M                         btfss   P1L                                     ; A Flag P1L está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W             
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35          
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim             
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0  
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LLON                            ; desacione a Flag LLON indicando que LL
                             está inativo
                          M                         bsf     RESC                            ; acione a Flag RESC indicando que o 2ª 
                            reservatorio esta cheio
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 STARTTIMER:                                             ; INICIALIZAÇÃO DO TEMPORIZADOR 
                            ----------------------
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Ative o temporizador   
                          M                         bsf     P1L                                     ; Acione a Flag P1L
                          M                         bsf     P1M                                     ; Acione a Flag P1M
                          M                         bsf     P2H                                     ; Acione a Flag P2H
                          M                 ENDV5:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 4,1 segundos para chegar a 120psi
                          M         if      FLAG1==FLAG2 & 6==4                             ; Se argumento for a FLAG P120 então faç
                            a o código abaixo...
                          M                         btfss   V4                                      ; Se V4 estiver ligado salte 1 i
                            nstrução        
                          M                         goto    ENDV4                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   P120                            ; Se P120 estiver inativo salte 1 instru
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            ção
                          M                         goto    ENDRES                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'120'                          ; Mova o valor 120 para W               
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 120 
                            até 255 (136 contagens)         
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                          M                         bsf     P120                            ; Ative a Flag P120 pra indicar que a te
                            mporização está ativa
                          M                 ENDRES:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'120'                          ; Mova o valor 120 para W       
                          M                         xorwf   PSI,W                           ; Compare PSI com 120psi (PSI vai de 0 a
                             120)   
                          M                         btfss   STATUS,Z                        ; Z=1? ou 120 xor PSI = 0? Se sim, signi
                            fica que PSI=120
                          M                         goto    ENDV4                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P120                            ; Se sim, então desative a Flag P120
                          M                         bcf     RESC                            ; Desative a FLAG RESC
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDV4:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo PSI, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de retenção de 5 segundos para desligar BOMB 
                          M         if      FLAG1==Q0 & 6==7                                ; Se argumento for BOMB então faça o cód
                            igo abaixo...   
                          M                         btfss   BOMB                            ; Se BOMB estiver ligado salte 1 instruç
                            ão              
                          M                         goto    BOMBOFF                         ; Não execute o temporizador, Vai para o
                             fim 
                          M                         btfsc   P3                                      ; Se P3 estiver inativo, inicie 
                            o temporizador          
                          M                         goto    COUNTP3                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     P3                                      ; Ative a Flag P3 pra indicar qu
                            e a temporização está ativa     
                          M                 COUNTP3:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'78'                           ; Mova o valor 78 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 78 (COUNT vai de 0 a
                             78)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 78 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=78
                          M                         goto    BOMBOFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     P3                                      ; Se sim, então desative a Flag 
                            P3 
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                         bsf     EOP                                     ; Ative a Flag EOP para indicar 
                            que será "Fim do Programa"
                          M                 BOMBOFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         IN              MOT1
01BB   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
01BC   1B08               M         btfsc   PORTD,RD6                       ; O BIT 'bit' do registro 'reg' é 0?
01BD   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
01BE   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         AND             T12
01BF   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
01C0   0103               M         clrw                                            ; Limpa o W, W = 0
01C1   1B2C               M         btfsc   FLAG1,6                         ; O dado atual é 0?
01C2   3001               M         movlw   H'01'                           ; Não, Então W será 1
01C3   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         OR              V2
01C4   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
01C5   0103               M         clrw                                            ; Limpa o W, W = 0
01C6   1888               M         btfsc   PORTD,RD1                       ; O dado atual é 0?
01C7   3001               M         movlw   H'01'                           ; Não, Então W será 1
01C8   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         OUT     MOT1    ; MOT1 = MOT1.T12+V2 | T12->MOT1
01C9   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
01CA   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
01CB   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
01CC   29CF               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
01CD   1308               M         bcf     PORTD,RD6                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
01CE   29D0               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
01CF   1708               M         bsf     PORTD,RD6                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
01D0   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                      00060         __OPEN_V3_UNTIL_TT                                                      ; Abra a válvula V3 até 
                            que o sensor TT seja acionado
                          M         IN              TT
01D1   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
01D2   1987               M         btfsc   PORTC,RC3                       ; O BIT 'bit' do registro 'reg' é 0?
01D3   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
01D4   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         ORN             MOT1
01D5   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
01D6   0103               M         clrw                                            ; Limpa o W, W = 0
01D7   1F08               M         btfss   PORTD,RD6                       ; O dado atual é 1?
01D8   3001               M         movlw   H'01'                           ; Não, Então W será 1
01D9   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         AND             LL
01DA   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
01DB   0103               M         clrw                                            ; Limpa o W, W = 0
01DC   1907               M         btfsc   PORTC,RC2                       ; O dado atual é 0?
01DD   3001               M         movlw   H'01'                           ; Não, Então W será 1
01DE   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         AND             LM
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01DF   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
01E0   0103               M         clrw                                            ; Limpa o W, W = 0
01E1   1887               M         btfsc   PORTC,RC1                       ; O dado atual é 0?
01E2   3001               M         movlw   H'01'                           ; Não, Então W será 1
01E3   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         AND             LH
01E4   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
01E5   0103               M         clrw                                            ; Limpa o W, W = 0
01E6   1807               M         btfsc   PORTC,RC0                       ; O dado atual é 0?
01E7   3001               M         movlw   H'01'                           ; Não, Então W será 1
01E8   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         ANDN    V2
01E9   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
01EA   0103               M         clrw                                            ; Limpa o W, W = 0
01EB   1C88               M         btfss   PORTD,RD1                       ; O dado atual é 1?
01EC   3001               M         movlw   H'01'                           ; Não, Então W será 1
01ED   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         AND     C100
01EE   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
01EF   0103               M         clrw                                            ; Limpa o W, W = 0
01F0   182C               M         btfsc   FLAG1,0                         ; O dado atual é 0?
01F1   3001               M         movlw   H'01'                           ; Não, Então W será 1
01F2   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         OUT             V3              ; V3 = (TT+MOT1´).LL.LM.LH.V2´.C100
01F3   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
01F4   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
01F5   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
01F6   29F9               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
01F7   1108               M         bcf     PORTD,RD2                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
01F8   29FA               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
01F9   1508               M         bsf     PORTD,RD2                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
01FA   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                      00061         __ACTIVATE_TT_WHEN_DETECTS_100C                         ; Acione o sensor TT quando detectar 100
                             Cº
                          M         WHEN    C100
                          M 
                          M         ; Retardo de 1 segundo para ligar V2
                          M         if      FLAG1==FLAG1 & 0==1                             ; Se argumento for a FLAG T1 então faça 
                            o código abaixo...
                          M                         btfsc   LH                                      ; Se LH estiver inativo, salte 1
                             instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   V1                                      ; Se V1 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   V2                                      ; Se V2 estiver desligado salte 
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim     
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim                     
                          M                         btfsc   T1                                      ; Se T1 estiver inativo, inicie 
                            o temporizador
                          M                         goto    ENDV10                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'11'                           ; Mova o valor 11 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 11 a
                            té 255 (245 contagens)
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                          M                         bsf     T1                                      ; Ative a Flag T1 pra indicar qu
                            e a temporização está ativa
                          M                         bsf     TIMER                           ; Ligue o display de tempo do Proteus
                          M                 ENDV10:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'16'                           ; Mova o valor 16 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 16 (COUNT vai de 0 a
                             16)
                          M                         btfss   STATUS,Z                        ; Z=1? ou 16 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=16
                          M                         goto    ENDV1                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     TIMER                           ; Desligue o display de tempo do Proteus
                          M                         bcf     T1                                      ; Se sim, então desative a Flag 
                            T1
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                          M                 ENDV1:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LL (Tempo imaginário de enchimento)
                          M         if      FLAG1==FLAG1 & 0==3                             ; Se argumento for a FLAG P1L então faça
                             o código abaixo...
                          M                         btfsc   LL                                      ; Se LL estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   P1L                                     ; Se P1L estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLL0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                          M                         bsf     P1L                                     ; Ative a Flag P1L pra indicar q
                            ue a temporização está ativa
                          M                 ENDLL0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                          M                         goto    ENDLL                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     P1L                                     ; Se sim, então desative a Flag 
                            P1L
                          M                         bsf     LLON                            ; Ative a Flag LLON pra indicar que LL e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                          M                 ENDLL:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de 2,2 segundos para ativar LM (Tempo imaginário de enchimento)
                          M         if      FLAG1==FLAG1 & 0==4                             ; Se argumento for a FLAG P1M então faça
                             o código abaixo...
                          M                         btfsc   LM                                      ; Se LM estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   LL                                      ; Se LL estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   P1M                                     ; Se P1M estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLM0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W 
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador         
                          M                         bsf     P1M                                     ; Ative a Flag P1M pra indicar q
                            ue a temporização está ativa
                          M                 ENDLM0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35      
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         goto    ENDLM                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P1M                                     ; Se sim, então desative a Flag 
                            P1M     
                          M                         bsf     LMON                            ; Ative a Flag LMON pra indicar que LM e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDLM:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LH
                          M         if      FLAG1==FLAG1 & 0==5                             ; Se argumento for a FLAG P1H então faça
                             o código abaixo...
                          M                         btfsc   LH                                      ; Se LH estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfss   V2                                      ; Se V2 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   P2H                                     ; Se P1H estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLH0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W         
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador 
                          M                         bsf     P2H                                     ; Ative a Flag P2H pra indicar q
                            ue a temporização está ativa
                          M                 ENDLH0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                          M                         goto    ENDLH                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P2H                                     ; Se sim, então desative a Flag 
                            P2H  
                          M                         bsf     LHON                            ; Ative a Flag LHON pra indicar que LH e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 ENDLH:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         
                          M         ; Tempo de retenção de 12 segundos para desligar MOT1
                          M         if      FLAG1==FLAG1 & 0==6                             ; Se argumento for a FLAG T12 então faça
                             o código abaixo...             
                          M                         btfss   MOT1                            ; Se MOT1 estiver ligado salte 1 instruç
                            ão      
                          M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim 
                          M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
                          M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    MOT1OFF                         ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   T12                                     ; Se T12 estiver inativo, inicie
                             o temporizador         
                          M                         goto    COUNTER                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.              
                          M                         movlw   D'6'                            ; Mova o valor 6 para W                 
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     T12                                     ; Ative a Flag T12 pra indicar q
                            ue a temporização está ativa
                          M                 COUNTER:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'153'                          ; Mova o valor 153 para W       
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 153 (COUNT vai de 0 
                            a 153)  
                          M                         btfss   STATUS,Z                        ; Z=1? ou 153 xor COUNT = 0? Se sim, sig
                            nifica que COUNT=153    
                          M                         goto    MOT1OFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     T12                                     ; Se sim, então desative a Flag 
                            T12   
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 MOT1OFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 3,9 segundos para chegar a 100Cº
                          M         if      FLAG1==FLAG1 & 0==0                             ; Se argumento for a FLAG C100 então faç
                            a o código abaixo...    
01FB   1A08               M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução     
01FC   2A0F               M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
01FD   1987               M                         btfsc   TT                                      ; Se LH estiver inativo salte 1 
                            instrução
01FE   2A0F               M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01FF   1C07               M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
0200   2A0F               M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
0201   1B08               M                         btfsc   MOT1                            ; Se MOT1 estiver desligado salte 1 inst
                            rução   
0202   2A0F               M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
0203   182C               M                         btfsc   C100                            ; Se C100 estiver inativo, inicie o temp
                            orizador
0204   2A09               M                         goto    ENDTT0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
0205   3064               M                         movlw   D'100'                          ; Mova o valor 100 para W               
0206   0081               M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 100 
                            até 255 (156 contagens)         
0207   168B               M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
0208   142C               M                         bsf     C100                            ; Ative a Flag C100 pra indicar que a te
                            mporização está ativa
Warning[207]: Found label after column 1. (ENDTT0)
0209                      M                 ENDTT0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
0209   3064               M                         movlw   D'100'                          ; Mova o valor 100 para W       
020A   062F               M                         xorwf   CELSIUS,W                       ; Compare CELSIUS com 100Cº (CELSIUS vai
                             de 0 a 100)    
020B   1D03               M                         btfss   STATUS,Z                        ; Z=1? ou 100 xor CELSIUS = 0? Se sim, s
                            ignifica que CELSIUS=100
020C   2A0F               M                         goto    ENDTT                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
020D   102C               M                         bcf     C100                            ; Se sim, então desative a Flag C100   
020E   128B               M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
Warning[207]: Found label after column 1. (ENDTT)
020F                      M                 ENDTT:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo CELSIUS, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de 3 segundos do repouso do aquecimento
                          M         if      FLAG1==FLAG1 & 0==2                             ; Se argumento for a FLAG RT então faça 
                            o código abaixo...
                          M                         btfss   TT                                      ; Se TT estiver ativo salte 1 in
                            strução 
                          M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   RT                                      ; Se RT estiver inativo, inicie 
                            o temporizador
                          M                         goto    ENDR0                           ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W         
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)                   
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                          M                         bsf     RT                                      ; Ative a Flag RT pra indicar qu
                            e a temporização está ativa
                          M                 ENDR0:                                                  ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'47'                           ; Mova o valor 47 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 47 (COUNT vai de 0 a
                             47)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 47 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=47
                          M                         goto    ENDR                            ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     RT                                      ; Se sim, então desative a Flag 
                            RT   
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 ENDR:                                                   ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para desativar LH,LM e LL nesta ordem
                          M         if      FLAG1==Q0 & 0==4                                ; Se argumento for V5 então faça o códig
                            o abaixo...
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    STARTV5                         ; Se estiver ligado, Começe as verificaç
                            ões
                          M                         goto    ENDV5                           ; Salte para o fim e não faça nada
                          M                 STARTV5:                                                ; VERIFICAÇÃO DOS SENSORES -----
                            -------------------
                          M                         btfsc   LH                                      ; LH está ativado?
                          M                         goto    LHSTART                         ; Sim, então verifique o tempo de LH
                          M                         btfsc   LM                                      ; Não, LM está ativado?
                          M                         goto    LMSTART                         ; Sim, então verifique o tempo de LM
                          M                         btfsc   LL                                      ; Não, LL está ativado?
                          M                         goto    LLSTART                         ; Sim, então verifique o tempo de LL
                          M                         goto    ENDV5                           ; Não, Então saia e não faça nada
                          M                 LHSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LH ---
                            --------------------
                          M                         btfss   P2H                                     ; A Flag P2H está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LHON                            ; desacione a Flag LHON indicando que LH
                             está inativo
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 LMSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LM ---
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            --------------------
                          M                         btfss   P1M                                     ; A Flag P1M está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W     
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35  
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim     
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0 
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LMON                            ; desacione a Flag LMON indicando que LM
                             está inativo
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 LLSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LL ---
                            --------------------
                          M                         btfss   P1L                                     ; A Flag P1L está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W             
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35          
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim             
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0  
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LLON                            ; desacione a Flag LLON indicando que LL
                             está inativo
                          M                         bsf     RESC                            ; acione a Flag RESC indicando que o 2ª 
                            reservatorio esta cheio
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 STARTTIMER:                                             ; INICIALIZAÇÃO DO TEMPORIZADOR 
                            ----------------------
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Ative o temporizador   
                          M                         bsf     P1L                                     ; Acione a Flag P1L
                          M                         bsf     P1M                                     ; Acione a Flag P1M
                          M                         bsf     P2H                                     ; Acione a Flag P2H
                          M                 ENDV5:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 4,1 segundos para chegar a 120psi
                          M         if      FLAG1==FLAG2 & 0==4                             ; Se argumento for a FLAG P120 então faç
                            a o código abaixo...
                          M                         btfss   V4                                      ; Se V4 estiver ligado salte 1 i
                            nstrução        
                          M                         goto    ENDV4                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   P120                            ; Se P120 estiver inativo salte 1 instru
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            ção
                          M                         goto    ENDRES                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'120'                          ; Mova o valor 120 para W               
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 120 
                            até 255 (136 contagens)         
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                          M                         bsf     P120                            ; Ative a Flag P120 pra indicar que a te
                            mporização está ativa
                          M                 ENDRES:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'120'                          ; Mova o valor 120 para W       
                          M                         xorwf   PSI,W                           ; Compare PSI com 120psi (PSI vai de 0 a
                             120)   
                          M                         btfss   STATUS,Z                        ; Z=1? ou 120 xor PSI = 0? Se sim, signi
                            fica que PSI=120
                          M                         goto    ENDV4                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P120                            ; Se sim, então desative a Flag P120
                          M                         bcf     RESC                            ; Desative a FLAG RESC
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDV4:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo PSI, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de retenção de 5 segundos para desligar BOMB 
                          M         if      FLAG1==Q0 & 0==7                                ; Se argumento for BOMB então faça o cód
                            igo abaixo...   
                          M                         btfss   BOMB                            ; Se BOMB estiver ligado salte 1 instruç
                            ão              
                          M                         goto    BOMBOFF                         ; Não execute o temporizador, Vai para o
                             fim 
                          M                         btfsc   P3                                      ; Se P3 estiver inativo, inicie 
                            o temporizador          
                          M                         goto    COUNTP3                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     P3                                      ; Ative a Flag P3 pra indicar qu
                            e a temporização está ativa     
                          M                 COUNTP3:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'78'                           ; Mova o valor 78 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 78 (COUNT vai de 0 a
                             78)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 78 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=78
                          M                         goto    BOMBOFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     P3                                      ; Se sim, então desative a Flag 
                            P3 
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                         bsf     EOP                                     ; Ative a Flag EOP para indicar 
                            que será "Fim do Programa"
                          M                 BOMBOFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         IN              TT
020F   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
0210   1987               M         btfsc   PORTC,RC3                       ; O BIT 'bit' do registro 'reg' é 0?
0211   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
0212   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         OR              V3
0213   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0214   0103               M         clrw                                            ; Limpa o W, W = 0
0215   1908               M         btfsc   PORTD,RD2                       ; O dado atual é 0?
0216   3001               M         movlw   H'01'                           ; Não, Então W será 1
0217   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         ANDN    C100
0218   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0219   0103               M         clrw                                            ; Limpa o W, W = 0
021A   1C2C               M         btfss   FLAG1,0                         ; O dado atual é 1?
021B   3001               M         movlw   H'01'                           ; Não, Então W será 1
021C   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         ANDN    V5
021D   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
021E   0103               M         clrw                                            ; Limpa o W, W = 0
021F   1E08               M         btfss   PORTD,RD4                       ; O dado atual é 1?
0220   3001               M         movlw   H'01'                           ; Não, Então W será 1
0221   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         OUT     TT              ; TT = (TT+V3).C100´.V5´ | C100´->TT
0222   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0223   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
0224   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
0225   2A28               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
0226   1187               M         bcf     PORTC,RC3                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
0227   2A29               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
0228   1587               M         bsf     PORTC,RC3                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
0229   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                      00062         __OPEN_V5_WHEN_3S_UNTIL_LL_OFF                          ; Abra a válvula V5 após 3 segundos até 
                            LL desacionar
                          M         WHEN    RT
                          M 
                          M         ; Retardo de 1 segundo para ligar V2
                          M         if      FLAG1==FLAG1 & 2==1                             ; Se argumento for a FLAG T1 então faça 
                            o código abaixo...
                          M                         btfsc   LH                                      ; Se LH estiver inativo, salte 1
                             instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            fim
                          M                         btfsc   V1                                      ; Se V1 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   V2                                      ; Se V2 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim     
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim                     
                          M                         btfsc   T1                                      ; Se T1 estiver inativo, inicie 
                            o temporizador
                          M                         goto    ENDV10                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'11'                           ; Mova o valor 11 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 11 a
                            té 255 (245 contagens)
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                          M                         bsf     T1                                      ; Ative a Flag T1 pra indicar qu
                            e a temporização está ativa
                          M                         bsf     TIMER                           ; Ligue o display de tempo do Proteus
                          M                 ENDV10:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'16'                           ; Mova o valor 16 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 16 (COUNT vai de 0 a
                             16)
                          M                         btfss   STATUS,Z                        ; Z=1? ou 16 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=16
                          M                         goto    ENDV1                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     TIMER                           ; Desligue o display de tempo do Proteus
                          M                         bcf     T1                                      ; Se sim, então desative a Flag 
                            T1
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                          M                 ENDV1:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LL (Tempo imaginário de enchimento)
                          M         if      FLAG1==FLAG1 & 2==3                             ; Se argumento for a FLAG P1L então faça
                             o código abaixo...
                          M                         btfsc   LL                                      ; Se LL estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   P1L                                     ; Se P1L estiver inativo, inicie
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                             o temporizador
                          M                         goto    ENDLL0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                          M                         bsf     P1L                                     ; Ative a Flag P1L pra indicar q
                            ue a temporização está ativa
                          M                 ENDLL0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                          M                         goto    ENDLL                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     P1L                                     ; Se sim, então desative a Flag 
                            P1L
                          M                         bsf     LLON                            ; Ative a Flag LLON pra indicar que LL e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                          M                 ENDLL:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de 2,2 segundos para ativar LM (Tempo imaginário de enchimento)
                          M         if      FLAG1==FLAG1 & 2==4                             ; Se argumento for a FLAG P1M então faça
                             o código abaixo...
                          M                         btfsc   LM                                      ; Se LM estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   LL                                      ; Se LL estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   P1M                                     ; Se P1M estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLM0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W 
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador         
                          M                         bsf     P1M                                     ; Ative a Flag P1M pra indicar q
                            ue a temporização está ativa
                          M                 ENDLM0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35      
                          M                         goto    ENDLM                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P1M                                     ; Se sim, então desative a Flag 
                            P1M     
                          M                         bsf     LMON                            ; Ative a Flag LMON pra indicar que LM e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDLM:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LH
                          M         if      FLAG1==FLAG1 & 2==5                             ; Se argumento for a FLAG P1H então faça
                             o código abaixo...
                          M                         btfsc   LH                                      ; Se LH estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfss   V2                                      ; Se V2 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   P2H                                     ; Se P1H estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLH0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W         
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador 
                          M                         bsf     P2H                                     ; Ative a Flag P2H pra indicar q
                            ue a temporização está ativa
                          M                 ENDLH0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                          M                         goto    ENDLH                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P2H                                     ; Se sim, então desative a Flag 
                            P2H  
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         bsf     LHON                            ; Ative a Flag LHON pra indicar que LH e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 ENDLH:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de retenção de 12 segundos para desligar MOT1
                          M         if      FLAG1==FLAG1 & 2==6                             ; Se argumento for a FLAG T12 então faça
                             o código abaixo...             
                          M                         btfss   MOT1                            ; Se MOT1 estiver ligado salte 1 instruç
                            ão      
                          M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim 
                          M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
                          M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    MOT1OFF                         ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   T12                                     ; Se T12 estiver inativo, inicie
                             o temporizador         
                          M                         goto    COUNTER                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.              
                          M                         movlw   D'6'                            ; Mova o valor 6 para W                 
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     T12                                     ; Ative a Flag T12 pra indicar q
                            ue a temporização está ativa
                          M                 COUNTER:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'153'                          ; Mova o valor 153 para W       
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 153 (COUNT vai de 0 
                            a 153)  
                          M                         btfss   STATUS,Z                        ; Z=1? ou 153 xor COUNT = 0? Se sim, sig
                            nifica que COUNT=153    
                          M                         goto    MOT1OFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     T12                                     ; Se sim, então desative a Flag 
                            T12   
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 MOT1OFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 3,9 segundos para chegar a 100Cº
                          M         if      FLAG1==FLAG1 & 2==0                             ; Se argumento for a FLAG C100 então faç
                            a o código abaixo...    
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução     
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   TT                                      ; Se LH estiver inativo salte 1 
                            instrução
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   MOT1                            ; Se MOT1 estiver desligado salte 1 inst
                            rução   
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   C100                            ; Se C100 estiver inativo, inicie o temp
                            orizador
                          M                         goto    ENDTT0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'100'                          ; Mova o valor 100 para W               
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 100 
                            até 255 (156 contagens)         
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     C100                            ; Ative a Flag C100 pra indicar que a te
                            mporização está ativa
                          M                 ENDTT0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'100'                          ; Mova o valor 100 para W       
                          M                         xorwf   CELSIUS,W                       ; Compare CELSIUS com 100Cº (CELSIUS vai
                             de 0 a 100)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 100 xor CELSIUS = 0? Se sim, s
                            ignifica que CELSIUS=100
                          M                         goto    ENDTT                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     C100                            ; Se sim, então desative a Flag C100   
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDTT:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo CELSIUS, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de 3 segundos do repouso do aquecimento
                          M         if      FLAG1==FLAG1 & 2==2                             ; Se argumento for a FLAG RT então faça 
                            o código abaixo...
022A   1D87               M                         btfss   TT                                      ; Se TT estiver ativo salte 1 in
                            strução 
022B   2A3B               M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
022C   1A08               M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
022D   2A3B               M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
022E   192C               M                         btfsc   RT                                      ; Se RT estiver inativo, inicie 
                            o temporizador
022F   2A34               M                         goto    ENDR0                           ; Se já estiver ativo, só verifique se j
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            á chegou no tempo.
0230   3006               M                         movlw   D'6'                            ; Mova o valor 6 para W         
0231   0081               M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)                   
0232   168B               M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
0233   152C               M                         bsf     RT                                      ; Ative a Flag RT pra indicar qu
                            e a temporização está ativa
Warning[207]: Found label after column 1. (ENDR0)
0234                      M                 ENDR0:                                                  ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
0234   302F               M                         movlw   D'47'                           ; Mova o valor 47 para W        
0235   062E               M                         xorwf   COUNT,W                         ; Compare COUNT com 47 (COUNT vai de 0 a
                             47)    
0236   1D03               M                         btfss   STATUS,Z                        ; Z=1? ou 47 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=47
0237   2A3B               M                         goto    ENDR                            ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
0238   112C               M                         bcf     RT                                      ; Se sim, então desative a Flag 
                            RT   
0239   01AE               M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
023A   128B               M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
Warning[207]: Found label after column 1. (ENDR)
023B                      M                 ENDR:                                                   ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para desativar LH,LM e LL nesta ordem
                          M         if      FLAG1==Q0 & 2==4                                ; Se argumento for V5 então faça o códig
                            o abaixo...
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    STARTV5                         ; Se estiver ligado, Começe as verificaç
                            ões
                          M                         goto    ENDV5                           ; Salte para o fim e não faça nada
                          M                 STARTV5:                                                ; VERIFICAÇÃO DOS SENSORES -----
                            -------------------
                          M                         btfsc   LH                                      ; LH está ativado?
                          M                         goto    LHSTART                         ; Sim, então verifique o tempo de LH
                          M                         btfsc   LM                                      ; Não, LM está ativado?
                          M                         goto    LMSTART                         ; Sim, então verifique o tempo de LM
                          M                         btfsc   LL                                      ; Não, LL está ativado?
                          M                         goto    LLSTART                         ; Sim, então verifique o tempo de LL
                          M                         goto    ENDV5                           ; Não, Então saia e não faça nada
                          M                 LHSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LH ---
                            --------------------
                          M                         btfss   P2H                                     ; A Flag P2H está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0
                          M                         bcf     P2H                                     ; desacione a Flag P2H
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LHON                            ; desacione a Flag LHON indicando que LH
                             está inativo
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 LMSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LM ---
                            --------------------
                          M                         btfss   P1M                                     ; A Flag P1M está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W     
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35  
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim     
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0 
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LMON                            ; desacione a Flag LMON indicando que LM
                             está inativo
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 LLSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LL ---
                            --------------------
                          M                         btfss   P1L                                     ; A Flag P1L está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W             
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35          
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim             
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0  
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LLON                            ; desacione a Flag LLON indicando que LL
                             está inativo
                          M                         bsf     RESC                            ; acione a Flag RESC indicando que o 2ª 
                            reservatorio esta cheio
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 STARTTIMER:                                             ; INICIALIZAÇÃO DO TEMPORIZADOR 
                            ----------------------
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Ative o temporizador   
                          M                         bsf     P1L                                     ; Acione a Flag P1L
                          M                         bsf     P1M                                     ; Acione a Flag P1M
                          M                         bsf     P2H                                     ; Acione a Flag P2H
                          M                 ENDV5:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 4,1 segundos para chegar a 120psi
                          M         if      FLAG1==FLAG2 & 2==4                             ; Se argumento for a FLAG P120 então faç
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            a o código abaixo...
                          M                         btfss   V4                                      ; Se V4 estiver ligado salte 1 i
                            nstrução        
                          M                         goto    ENDV4                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   P120                            ; Se P120 estiver inativo salte 1 instru
                            ção
                          M                         goto    ENDRES                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'120'                          ; Mova o valor 120 para W               
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 120 
                            até 255 (136 contagens)         
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                          M                         bsf     P120                            ; Ative a Flag P120 pra indicar que a te
                            mporização está ativa
                          M                 ENDRES:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'120'                          ; Mova o valor 120 para W       
                          M                         xorwf   PSI,W                           ; Compare PSI com 120psi (PSI vai de 0 a
                             120)   
                          M                         btfss   STATUS,Z                        ; Z=1? ou 120 xor PSI = 0? Se sim, signi
                            fica que PSI=120
                          M                         goto    ENDV4                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P120                            ; Se sim, então desative a Flag P120
                          M                         bcf     RESC                            ; Desative a FLAG RESC
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDV4:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo PSI, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de retenção de 5 segundos para desligar BOMB 
                          M         if      FLAG1==Q0 & 2==7                                ; Se argumento for BOMB então faça o cód
                            igo abaixo...   
                          M                         btfss   BOMB                            ; Se BOMB estiver ligado salte 1 instruç
                            ão              
                          M                         goto    BOMBOFF                         ; Não execute o temporizador, Vai para o
                             fim 
                          M                         btfsc   P3                                      ; Se P3 estiver inativo, inicie 
                            o temporizador          
                          M                         goto    COUNTP3                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     P3                                      ; Ative a Flag P3 pra indicar qu
                            e a temporização está ativa     
                          M                 COUNTP3:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'78'                           ; Mova o valor 78 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 78 (COUNT vai de 0 a
                             78)    
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         btfss   STATUS,Z                        ; Z=1? ou 78 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=78
                          M                         goto    BOMBOFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     P3                                      ; Se sim, então desative a Flag 
                            P3 
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                         bsf     EOP                                     ; Ative a Flag EOP para indicar 
                            que será "Fim do Programa"
                          M                 BOMBOFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         IN              V5
023B   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
023C   1A08               M         btfsc   PORTD,RD4                       ; O BIT 'bit' do registro 'reg' é 0?
023D   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
023E   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         OR              TT
023F   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0240   0103               M         clrw                                            ; Limpa o W, W = 0
0241   1987               M         btfsc   PORTC,RC3                       ; O dado atual é 0?
0242   3001               M         movlw   H'01'                           ; Não, Então W será 1
0243   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         ANDN    RT
0244   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0245   0103               M         clrw                                            ; Limpa o W, W = 0
0246   1D2C               M         btfss   FLAG1,2                         ; O dado atual é 1?
0247   3001               M         movlw   H'01'                           ; Não, Então W será 1
0248   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         AND     LL
0249   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
024A   0103               M         clrw                                            ; Limpa o W, W = 0
024B   1907               M         btfsc   PORTC,RC2                       ; O dado atual é 0?
024C   3001               M         movlw   H'01'                           ; Não, Então W será 1
024D   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         OUT     V5              ; V5 = (V5+TT).RT´.LL | RT´->TT´->V5
024E   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
024F   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
0250   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
0251   2A54               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
0252   1208               M         bcf     PORTD,RD4                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
0253   2A55               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
0254   1608               M         bsf     PORTD,RD4                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
0255   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                      00063         __TURNS_OFF_LH_LM_LL_WHEN_V5                            ; Desacione LH,LM e LL enquanto V5 estiv
                            er ligado
                          M         WHEN    V5
                          M 
                          M         ; Retardo de 1 segundo para ligar V2
                          M         if      PORTD==FLAG1 & RD4==1                           ; Se argumento for a FLAG T1 então faça 
                            o código abaixo...
                          M                         btfsc   LH                                      ; Se LH estiver inativo, salte 1
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                             instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   V1                                      ; Se V1 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   V2                                      ; Se V2 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim     
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim                     
                          M                         btfsc   T1                                      ; Se T1 estiver inativo, inicie 
                            o temporizador
                          M                         goto    ENDV10                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'11'                           ; Mova o valor 11 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 11 a
                            té 255 (245 contagens)
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                          M                         bsf     T1                                      ; Ative a Flag T1 pra indicar qu
                            e a temporização está ativa
                          M                         bsf     TIMER                           ; Ligue o display de tempo do Proteus
                          M                 ENDV10:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'16'                           ; Mova o valor 16 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 16 (COUNT vai de 0 a
                             16)
                          M                         btfss   STATUS,Z                        ; Z=1? ou 16 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=16
                          M                         goto    ENDV1                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     TIMER                           ; Desligue o display de tempo do Proteus
                          M                         bcf     T1                                      ; Se sim, então desative a Flag 
                            T1
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                          M                 ENDV1:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LL (Tempo imaginário de enchimento)
                          M         if      PORTD==FLAG1 & RD4==3                           ; Se argumento for a FLAG P1L então faça
                             o código abaixo...
                          M                         btfsc   LL                                      ; Se LL estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            fim
                          M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   P1L                                     ; Se P1L estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLL0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                          M                         bsf     P1L                                     ; Ative a Flag P1L pra indicar q
                            ue a temporização está ativa
                          M                 ENDLL0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                          M                         goto    ENDLL                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     P1L                                     ; Se sim, então desative a Flag 
                            P1L
                          M                         bsf     LLON                            ; Ative a Flag LLON pra indicar que LL e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                          M                 ENDLL:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de 2,2 segundos para ativar LM (Tempo imaginário de enchimento)
                          M         if      PORTD==FLAG1 & RD4==4                           ; Se argumento for a FLAG P1M então faça
                             o código abaixo...
                          M                         btfsc   LM                                      ; Se LM estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   LL                                      ; Se LL estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   P1M                                     ; Se P1M estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLM0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W 
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador         
                          M                         bsf     P1M                                     ; Ative a Flag P1M pra indicar q
                            ue a temporização está ativa
                          M                 ENDLM0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35      
                          M                         goto    ENDLM                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P1M                                     ; Se sim, então desative a Flag 
                            P1M     
                          M                         bsf     LMON                            ; Ative a Flag LMON pra indicar que LM e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDLM:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LH
                          M         if      PORTD==FLAG1 & RD4==5                           ; Se argumento for a FLAG P1H então faça
                             o código abaixo...
                          M                         btfsc   LH                                      ; Se LH estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfss   V2                                      ; Se V2 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   P2H                                     ; Se P1H estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLH0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W         
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador 
                          M                         bsf     P2H                                     ; Ative a Flag P2H pra indicar q
                            ue a temporização está ativa
                          M                 ENDLH0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                          M                         goto    ENDLH                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P2H                                     ; Se sim, então desative a Flag 
                            P2H  
                          M                         bsf     LHON                            ; Ative a Flag LHON pra indicar que LH e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 ENDLH:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de retenção de 12 segundos para desligar MOT1
                          M         if      PORTD==FLAG1 & RD4==6                           ; Se argumento for a FLAG T12 então faça
                             o código abaixo...             
                          M                         btfss   MOT1                            ; Se MOT1 estiver ligado salte 1 instruç
                            ão      
                          M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim 
                          M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
                          M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    MOT1OFF                         ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   T12                                     ; Se T12 estiver inativo, inicie
                             o temporizador         
                          M                         goto    COUNTER                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.              
                          M                         movlw   D'6'                            ; Mova o valor 6 para W                 
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     T12                                     ; Ative a Flag T12 pra indicar q
                            ue a temporização está ativa
                          M                 COUNTER:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'153'                          ; Mova o valor 153 para W       
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 153 (COUNT vai de 0 
                            a 153)  
                          M                         btfss   STATUS,Z                        ; Z=1? ou 153 xor COUNT = 0? Se sim, sig
                            nifica que COUNT=153    
                          M                         goto    MOT1OFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     T12                                     ; Se sim, então desative a Flag 
                            T12   
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 MOT1OFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M         ; Tempo de 3,9 segundos para chegar a 100Cº
                          M         if      PORTD==FLAG1 & RD4==0                           ; Se argumento for a FLAG C100 então faç
                            a o código abaixo...    
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução     
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   TT                                      ; Se LH estiver inativo salte 1 
                            instrução
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   MOT1                            ; Se MOT1 estiver desligado salte 1 inst
                            rução   
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   C100                            ; Se C100 estiver inativo, inicie o temp
                            orizador
                          M                         goto    ENDTT0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'100'                          ; Mova o valor 100 para W               
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 100 
                            até 255 (156 contagens)         
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     C100                            ; Ative a Flag C100 pra indicar que a te
                            mporização está ativa
                          M                 ENDTT0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'100'                          ; Mova o valor 100 para W       
                          M                         xorwf   CELSIUS,W                       ; Compare CELSIUS com 100Cº (CELSIUS vai
                             de 0 a 100)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 100 xor CELSIUS = 0? Se sim, s
                            ignifica que CELSIUS=100
                          M                         goto    ENDTT                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     C100                            ; Se sim, então desative a Flag C100   
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDTT:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo CELSIUS, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de 3 segundos do repouso do aquecimento
                          M         if      PORTD==FLAG1 & RD4==2                           ; Se argumento for a FLAG RT então faça 
                            o código abaixo...
                          M                         btfss   TT                                      ; Se TT estiver ativo salte 1 in
                            strução 
                          M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            1 instrução
                          M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   RT                                      ; Se RT estiver inativo, inicie 
                            o temporizador
                          M                         goto    ENDR0                           ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W         
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)                   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                          M                         bsf     RT                                      ; Ative a Flag RT pra indicar qu
                            e a temporização está ativa
                          M                 ENDR0:                                                  ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'47'                           ; Mova o valor 47 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 47 (COUNT vai de 0 a
                             47)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 47 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=47
                          M                         goto    ENDR                            ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     RT                                      ; Se sim, então desative a Flag 
                            RT   
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 ENDR:                                                   ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para desativar LH,LM e LL nesta ordem
                          M         if      PORTD==Q0 & RD4==4                              ; Se argumento for V5 então faça o códig
                            o abaixo...
0256   1A08               M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
0257   2A59               M                         goto    STARTV5                         ; Se estiver ligado, Começe as verificaç
                            ões
0258   2A8E               M                         goto    ENDV5                           ; Salte para o fim e não faça nada
Warning[207]: Found label after column 1. (STARTV5)
0259                      M                 STARTV5:                                                ; VERIFICAÇÃO DOS SENSORES -----
                            -------------------
0259   1807               M                         btfsc   LH                                      ; LH está ativado?
025A   2A60               M                         goto    LHSTART                         ; Sim, então verifique o tempo de LH
025B   1887               M                         btfsc   LM                                      ; Não, LM está ativado?
025C   2A6D               M                         goto    LMSTART                         ; Sim, então verifique o tempo de LM
025D   1907               M                         btfsc   LL                                      ; Não, LL está ativado?
025E   2A7A               M                         goto    LLSTART                         ; Sim, então verifique o tempo de LL
025F   2A8E               M                         goto    ENDV5                           ; Não, Então saia e não faça nada
Warning[207]: Found label after column 1. (LHSTART)
0260                      M                 LHSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LH ---
                            --------------------
0260   1EAC               M                         btfss   P2H                                     ; A Flag P2H está acionada?
0261   2A88               M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
0262   3023               M                         movlw   D'35'                           ; Sim, então mova 35 para W
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0263   062E               M                         xorwf   COUNT,W                         ; Compara COUNT com 35
0264   1D03               M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
0265   2A8E               M                         goto    ENDV5                           ; Não, então vai para o fim
0266   01AE               M                         clrf    COUNT                           ; Sim, então limpe o contador
0267   128B               M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0
0268   12AC               M                         bcf     P2H                                     ; desacione a Flag P2H
0269   11AC               M                         bcf     P1L                                     ; desacione a Flag P1L
026A   122C               M                         bcf     P1M                                     ; desacione a Flag P1M
026B   102D               M                         bcf     LHON                            ; desacione a Flag LHON indicando que LH
                             está inativo
026C   2A8E               M                         goto    ENDV5                           ; Finalize as operações
Warning[207]: Found label after column 1. (LMSTART)
026D                      M                 LMSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LM ---
                            --------------------
026D   1E2C               M                         btfss   P1M                                     ; A Flag P1M está acionada?
026E   2A88               M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
026F   3023               M                         movlw   D'35'                           ; Sim, então mova 35 para W     
0270   062E               M                         xorwf   COUNT,W                         ; Compara COUNT com 35  
0271   1D03               M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
0272   2A8E               M                         goto    ENDV5                           ; Não, então vai para o fim     
0273   01AE               M                         clrf    COUNT                           ; Sim, então limpe o contador
0274   128B               M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0 
0275   12AC               M                         bcf     P2H                                     ; desacione a Flag P2H
0276   11AC               M                         bcf     P1L                                     ; desacione a Flag P1L
0277   122C               M                         bcf     P1M                                     ; desacione a Flag P1M
0278   10AD               M                         bcf     LMON                            ; desacione a Flag LMON indicando que LM
                             está inativo
0279   2A8E               M                         goto    ENDV5                           ; Finalize as operações
Warning[207]: Found label after column 1. (LLSTART)
027A                      M                 LLSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LL ---
                            --------------------
027A   1DAC               M                         btfss   P1L                                     ; A Flag P1L está acionada?
027B   2A88               M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
027C   3023               M                         movlw   D'35'                           ; Sim, então mova 35 para W             
027D   062E               M                         xorwf   COUNT,W                         ; Compara COUNT com 35          
027E   1D03               M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
027F   2A8E               M                         goto    ENDV5                           ; Não, então vai para o fim             
0280   01AE               M                         clrf    COUNT                           ; Sim, então limpe o contador
0281   128B               M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0  
0282   12AC               M                         bcf     P2H                                     ; desacione a Flag P2H
0283   11AC               M                         bcf     P1L                                     ; desacione a Flag P1L
0284   122C               M                         bcf     P1M                                     ; desacione a Flag P1M
0285   112D               M                         bcf     LLON                            ; desacione a Flag LLON indicando que LL
                             está inativo
0286   15AD               M                         bsf     RESC                            ; acione a Flag RESC indicando que o 2ª 
                            reservatorio esta cheio
0287   2A8E               M                         goto    ENDV5                           ; Finalize as operações
Warning[207]: Found label after column 1. (STARTTIMER)
0288                      M                 STARTTIMER:                                             ; INICIALIZAÇÃO DO TEMPORIZADOR 
                            ----------------------
0288   3006               M                         movlw   D'6'                            ; Mova o valor 6 para W
0289   0081               M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

028A   168B               M                         bsf     INTCON,TMR0IE           ; Ative o temporizador   
028B   15AC               M                         bsf     P1L                                     ; Acione a Flag P1L
028C   162C               M                         bsf     P1M                                     ; Acione a Flag P1M
028D   16AC               M                         bsf     P2H                                     ; Acione a Flag P2H
Warning[207]: Found label after column 1. (ENDV5)
028E                      M                 ENDV5:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 4,1 segundos para chegar a 120psi
                          M         if      PORTD==FLAG2 & RD4==4                           ; Se argumento for a FLAG P120 então faç
                            a o código abaixo...
                          M                         btfss   V4                                      ; Se V4 estiver ligado salte 1 i
                            nstrução        
                          M                         goto    ENDV4                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   P120                            ; Se P120 estiver inativo salte 1 instru
                            ção
                          M                         goto    ENDRES                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'120'                          ; Mova o valor 120 para W               
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 120 
                            até 255 (136 contagens)         
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                          M                         bsf     P120                            ; Ative a Flag P120 pra indicar que a te
                            mporização está ativa
                          M                 ENDRES:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'120'                          ; Mova o valor 120 para W       
                          M                         xorwf   PSI,W                           ; Compare PSI com 120psi (PSI vai de 0 a
                             120)   
                          M                         btfss   STATUS,Z                        ; Z=1? ou 120 xor PSI = 0? Se sim, signi
                            fica que PSI=120
                          M                         goto    ENDV4                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P120                            ; Se sim, então desative a Flag P120
                          M                         bcf     RESC                            ; Desative a FLAG RESC
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDV4:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo PSI, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de retenção de 5 segundos para desligar BOMB 
                          M         if      PORTD==Q0 & RD4==7                              ; Se argumento for BOMB então faça o cód
                            igo abaixo...   
                          M                         btfss   BOMB                            ; Se BOMB estiver ligado salte 1 instruç
                            ão              
                          M                         goto    BOMBOFF                         ; Não execute o temporizador, Vai para o
                             fim 
                          M                         btfsc   P3                                      ; Se P3 estiver inativo, inicie 
                            o temporizador          
                          M                         goto    COUNTP3                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     P3                                      ; Ative a Flag P3 pra indicar qu
                            e a temporização está ativa     
                          M                 COUNTP3:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'78'                           ; Mova o valor 78 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 78 (COUNT vai de 0 a
                             78)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 78 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=78
                          M                         goto    BOMBOFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     P3                                      ; Se sim, então desative a Flag 
                            P3 
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                         bsf     EOP                                     ; Ative a Flag EOP para indicar 
                            que será "Fim do Programa"
                          M                 BOMBOFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         IN              LH
028E   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
028F   1807               M         btfsc   PORTC,RC0                       ; O BIT 'bit' do registro 'reg' é 0?
0290   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
0291   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         AND     LHON
0292   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0293   0103               M         clrw                                            ; Limpa o W, W = 0
0294   182D               M         btfsc   FLAG2,0                         ; O dado atual é 0?
0295   3001               M         movlw   H'01'                           ; Não, Então W será 1
0296   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         OUT     LH              ; LH = LH´->LHON´<->(V5.LH.P2H´) | LH=LH.LHON
0297   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0298   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
0299   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
029A   2A9D               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
029B   1007               M         bcf     PORTC,RC0                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
029C   2A9E               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
029D   1407               M         bsf     PORTC,RC0                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
029E   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                          M         IN              LM
029F   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
02A0   1887               M         btfsc   PORTC,RC1                       ; O BIT 'bit' do registro 'reg' é 0?
02A1   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
02A2   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         AND     LMON
02A3   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
02A4   0103               M         clrw                                            ; Limpa o W, W = 0
02A5   18AD               M         btfsc   FLAG2,1                         ; O dado atual é 0?
02A6   3001               M         movlw   H'01'                           ; Não, Então W será 1
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A7   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         OUT     LM              ; LM = LM´->LMON´<->(V5.LM.P1M´) | LM=LM.LMON
02A8   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
02A9   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
02AA   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
02AB   2AAE               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
02AC   1087               M         bcf     PORTC,RC1                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
02AD   2AAF               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
02AE   1487               M         bsf     PORTC,RC1                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
02AF   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                          M         IN              LL
02B0   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
02B1   1907               M         btfsc   PORTC,RC2                       ; O BIT 'bit' do registro 'reg' é 0?
02B2   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
02B3   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         AND     LLON
02B4   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
02B5   0103               M         clrw                                            ; Limpa o W, W = 0
02B6   192D               M         btfsc   FLAG2,2                         ; O dado atual é 0?
02B7   3001               M         movlw   H'01'                           ; Não, Então W será 1
02B8   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         OUT     LL              ; LL = LL´->LLON´<->(V5.LL.P1L´) | LL=LL.LLON
02B9   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
02BA   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
02BB   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
02BC   2ABF               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
02BD   1107               M         bcf     PORTC,RC2                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
02BE   2AC0               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
02BF   1507               M         bsf     PORTC,RC2                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
02C0   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                      00064         __OPEN_V4_UNTIL_TP                                                      ; Abra a válvula V4 até 
                            que o sensor TP seja acionado
                          M         WHEN    P120
                          M 
                          M         ; Retardo de 1 segundo para ligar V2
                          M         if      FLAG2==FLAG1 & 4==1                             ; Se argumento for a FLAG T1 então faça 
                            o código abaixo...
                          M                         btfsc   LH                                      ; Se LH estiver inativo, salte 1
                             instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   V1                                      ; Se V1 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   V2                                      ; Se V2 estiver desligado salte 
                            1 instrução
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim     
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim                     
                          M                         btfsc   T1                                      ; Se T1 estiver inativo, inicie 
                            o temporizador
                          M                         goto    ENDV10                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'11'                           ; Mova o valor 11 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 11 a
                            té 255 (245 contagens)
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                          M                         bsf     T1                                      ; Ative a Flag T1 pra indicar qu
                            e a temporização está ativa
                          M                         bsf     TIMER                           ; Ligue o display de tempo do Proteus
                          M                 ENDV10:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'16'                           ; Mova o valor 16 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 16 (COUNT vai de 0 a
                             16)
                          M                         btfss   STATUS,Z                        ; Z=1? ou 16 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=16
                          M                         goto    ENDV1                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     TIMER                           ; Desligue o display de tempo do Proteus
                          M                         bcf     T1                                      ; Se sim, então desative a Flag 
                            T1
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                          M                 ENDV1:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LL (Tempo imaginário de enchimento)
                          M         if      FLAG2==FLAG1 & 4==3                             ; Se argumento for a FLAG P1L então faça
                             o código abaixo...
                          M                         btfsc   LL                                      ; Se LL estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   P1L                                     ; Se P1L estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLL0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         bsf     P1L                                     ; Ative a Flag P1L pra indicar q
                            ue a temporização está ativa
                          M                 ENDLL0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                          M                         goto    ENDLL                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     P1L                                     ; Se sim, então desative a Flag 
                            P1L
                          M                         bsf     LLON                            ; Ative a Flag LLON pra indicar que LL e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                          M                 ENDLL:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de 2,2 segundos para ativar LM (Tempo imaginário de enchimento)
                          M         if      FLAG2==FLAG1 & 4==4                             ; Se argumento for a FLAG P1M então faça
                             o código abaixo...
                          M                         btfsc   LM                                      ; Se LM estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   LL                                      ; Se LL estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   P1M                                     ; Se P1M estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLM0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W 
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador         
                          M                         bsf     P1M                                     ; Ative a Flag P1M pra indicar q
                            ue a temporização está ativa
                          M                 ENDLM0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35      
                          M                         goto    ENDLM                           ; Se não, ainda não chegou no tempo entã
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            o vai para o fim        
                          M                         bcf     P1M                                     ; Se sim, então desative a Flag 
                            P1M     
                          M                         bsf     LMON                            ; Ative a Flag LMON pra indicar que LM e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDLM:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LH
                          M         if      FLAG2==FLAG1 & 4==5                             ; Se argumento for a FLAG P1H então faça
                             o código abaixo...
                          M                         btfsc   LH                                      ; Se LH estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfss   V2                                      ; Se V2 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   P2H                                     ; Se P1H estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLH0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W         
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador 
                          M                         bsf     P2H                                     ; Ative a Flag P2H pra indicar q
                            ue a temporização está ativa
                          M                 ENDLH0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                          M                         goto    ENDLH                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P2H                                     ; Se sim, então desative a Flag 
                            P2H  
                          M                         bsf     LHON                            ; Ative a Flag LHON pra indicar que LH e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 ENDLH:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ; Tempo de retenção de 12 segundos para desligar MOT1
                          M         if      FLAG2==FLAG1 & 4==6                             ; Se argumento for a FLAG T12 então faça
                             o código abaixo...             
                          M                         btfss   MOT1                            ; Se MOT1 estiver ligado salte 1 instruç
                            ão      
                          M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim 
                          M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
                          M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    MOT1OFF                         ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   T12                                     ; Se T12 estiver inativo, inicie
                             o temporizador         
                          M                         goto    COUNTER                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.              
                          M                         movlw   D'6'                            ; Mova o valor 6 para W                 
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     T12                                     ; Ative a Flag T12 pra indicar q
                            ue a temporização está ativa
                          M                 COUNTER:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'153'                          ; Mova o valor 153 para W       
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 153 (COUNT vai de 0 
                            a 153)  
                          M                         btfss   STATUS,Z                        ; Z=1? ou 153 xor COUNT = 0? Se sim, sig
                            nifica que COUNT=153    
                          M                         goto    MOT1OFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     T12                                     ; Se sim, então desative a Flag 
                            T12   
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 MOT1OFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 3,9 segundos para chegar a 100Cº
                          M         if      FLAG2==FLAG1 & 4==0                             ; Se argumento for a FLAG C100 então faç
                            a o código abaixo...    
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução     
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   TT                                      ; Se LH estiver inativo salte 1 
                            instrução
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            strução
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   MOT1                            ; Se MOT1 estiver desligado salte 1 inst
                            rução   
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   C100                            ; Se C100 estiver inativo, inicie o temp
                            orizador
                          M                         goto    ENDTT0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'100'                          ; Mova o valor 100 para W               
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 100 
                            até 255 (156 contagens)         
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     C100                            ; Ative a Flag C100 pra indicar que a te
                            mporização está ativa
                          M                 ENDTT0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'100'                          ; Mova o valor 100 para W       
                          M                         xorwf   CELSIUS,W                       ; Compare CELSIUS com 100Cº (CELSIUS vai
                             de 0 a 100)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 100 xor CELSIUS = 0? Se sim, s
                            ignifica que CELSIUS=100
                          M                         goto    ENDTT                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     C100                            ; Se sim, então desative a Flag C100   
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDTT:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo CELSIUS, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de 3 segundos do repouso do aquecimento
                          M         if      FLAG2==FLAG1 & 4==2                             ; Se argumento for a FLAG RT então faça 
                            o código abaixo...
                          M                         btfss   TT                                      ; Se TT estiver ativo salte 1 in
                            strução 
                          M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   RT                                      ; Se RT estiver inativo, inicie 
                            o temporizador
                          M                         goto    ENDR0                           ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W         
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)                   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                          M                         bsf     RT                                      ; Ative a Flag RT pra indicar qu
                            e a temporização está ativa
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 ENDR0:                                                  ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'47'                           ; Mova o valor 47 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 47 (COUNT vai de 0 a
                             47)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 47 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=47
                          M                         goto    ENDR                            ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     RT                                      ; Se sim, então desative a Flag 
                            RT   
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 ENDR:                                                   ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para desativar LH,LM e LL nesta ordem
                          M         if      FLAG2==Q0 & 4==4                                ; Se argumento for V5 então faça o códig
                            o abaixo...
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    STARTV5                         ; Se estiver ligado, Começe as verificaç
                            ões
                          M                         goto    ENDV5                           ; Salte para o fim e não faça nada
                          M                 STARTV5:                                                ; VERIFICAÇÃO DOS SENSORES -----
                            -------------------
                          M                         btfsc   LH                                      ; LH está ativado?
                          M                         goto    LHSTART                         ; Sim, então verifique o tempo de LH
                          M                         btfsc   LM                                      ; Não, LM está ativado?
                          M                         goto    LMSTART                         ; Sim, então verifique o tempo de LM
                          M                         btfsc   LL                                      ; Não, LL está ativado?
                          M                         goto    LLSTART                         ; Sim, então verifique o tempo de LL
                          M                         goto    ENDV5                           ; Não, Então saia e não faça nada
                          M                 LHSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LH ---
                            --------------------
                          M                         btfss   P2H                                     ; A Flag P2H está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LHON                            ; desacione a Flag LHON indicando que LH
                             está inativo
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 LMSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LM ---
                            --------------------
                          M                         btfss   P1M                                     ; A Flag P1M está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         movlw   D'35'                           ; Sim, então mova 35 para W     
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35  
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim     
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0 
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LMON                            ; desacione a Flag LMON indicando que LM
                             está inativo
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 LLSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LL ---
                            --------------------
                          M                         btfss   P1L                                     ; A Flag P1L está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W             
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35          
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim             
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0  
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LLON                            ; desacione a Flag LLON indicando que LL
                             está inativo
                          M                         bsf     RESC                            ; acione a Flag RESC indicando que o 2ª 
                            reservatorio esta cheio
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 STARTTIMER:                                             ; INICIALIZAÇÃO DO TEMPORIZADOR 
                            ----------------------
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Ative o temporizador   
                          M                         bsf     P1L                                     ; Acione a Flag P1L
                          M                         bsf     P1M                                     ; Acione a Flag P1M
                          M                         bsf     P2H                                     ; Acione a Flag P2H
                          M                 ENDV5:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 4,1 segundos para chegar a 120psi
                          M         if      FLAG2==FLAG2 & 4==4                             ; Se argumento for a FLAG P120 então faç
                            a o código abaixo...
02C1   1D88               M                         btfss   V4                                      ; Se V4 estiver ligado salte 1 i
                            nstrução        
02C2   2AD0               M                         goto    ENDV4                           ; Não execute o temporizador, Vai para o
                             fim
02C3   1A2D               M                         btfsc   P120                            ; Se P120 estiver inativo salte 1 instru
                            ção
02C4   2AC9               M                         goto    ENDRES                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02C5   3078               M                         movlw   D'120'                          ; Mova o valor 120 para W               
02C6   0081               M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 120 
                            até 255 (136 contagens)         
02C7   168B               M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
02C8   162D               M                         bsf     P120                            ; Ative a Flag P120 pra indicar que a te
                            mporização está ativa
Warning[207]: Found label after column 1. (ENDRES)
02C9                      M                 ENDRES:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
02C9   3078               M                         movlw   D'120'                          ; Mova o valor 120 para W       
02CA   0630               M                         xorwf   PSI,W                           ; Compare PSI com 120psi (PSI vai de 0 a
                             120)   
02CB   1D03               M                         btfss   STATUS,Z                        ; Z=1? ou 120 xor PSI = 0? Se sim, signi
                            fica que PSI=120
02CC   2AD0               M                         goto    ENDV4                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
02CD   122D               M                         bcf     P120                            ; Se sim, então desative a Flag P120
02CE   11AD               M                         bcf     RESC                            ; Desative a FLAG RESC
02CF   128B               M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
Warning[207]: Found label after column 1. (ENDV4)
02D0                      M                 ENDV4:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo PSI, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de retenção de 5 segundos para desligar BOMB 
                          M         if      FLAG2==Q0 & 4==7                                ; Se argumento for BOMB então faça o cód
                            igo abaixo...   
                          M                         btfss   BOMB                            ; Se BOMB estiver ligado salte 1 instruç
                            ão              
                          M                         goto    BOMBOFF                         ; Não execute o temporizador, Vai para o
                             fim 
                          M                         btfsc   P3                                      ; Se P3 estiver inativo, inicie 
                            o temporizador          
                          M                         goto    COUNTP3                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     P3                                      ; Ative a Flag P3 pra indicar qu
                            e a temporização está ativa     
                          M                 COUNTP3:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'78'                           ; Mova o valor 78 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 78 (COUNT vai de 0 a
                             78)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 78 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=78
                          M                         goto    BOMBOFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     P3                                      ; Se sim, então desative a Flag 
                            P3 
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                         bsf     EOP                                     ; Ative a Flag EOP para indicar 
                            que será "Fim do Programa"
                          M                 BOMBOFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         IN              V4
02D0   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
02D1   1988               M         btfsc   PORTD,RD3                       ; O BIT 'bit' do registro 'reg' é 0?
02D2   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
02D3   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         ORN     LL
02D4   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
02D5   0103               M         clrw                                            ; Limpa o W, W = 0
02D6   1D07               M         btfss   PORTC,RC2                       ; O dado atual é 1?
02D7   3001               M         movlw   H'01'                           ; Não, Então W será 1
02D8   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         AND     RESC
02D9   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
02DA   0103               M         clrw                                            ; Limpa o W, W = 0
02DB   19AD               M         btfsc   FLAG2,3                         ; O dado atual é 0?
02DC   3001               M         movlw   H'01'                           ; Não, Então W será 1
02DD   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         OR              P120
02DE   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
02DF   0103               M         clrw                                            ; Limpa o W, W = 0
02E0   1A2D               M         btfsc   FLAG2,4                         ; O dado atual é 0?
02E1   3001               M         movlw   H'01'                           ; Não, Então W será 1
02E2   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         OUT     V4              ; V4 = ((V4+LL´).RESC+P120) | P120->V4
02E3   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
02E4   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
02E5   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
02E6   2AE9               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
02E7   1188               M         bcf     PORTD,RD3                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
02E8   2AEA               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
02E9   1588               M         bsf     PORTD,RD3                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
02EA   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                      00065         __ACTIVATE_TP_WHEN_DETECTS_120PSI                       ; Acione o sensor TP quando detectar 120
                             psi
                          M         IN              ST
02EB   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
02EC   1A87               M         btfsc   PORTC,RC5                       ; O BIT 'bit' do registro 'reg' é 0?
02ED   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
02EE   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         ANDN    V1
02EF   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
02F0   0103               M         clrw                                            ; Limpa o W, W = 0
02F1   1C08               M         btfss   PORTD,RD0                       ; O dado atual é 1?
02F2   3001               M         movlw   H'01'                           ; Não, Então W será 1
02F3   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         ANDN    LL
02F4   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02F5   0103               M         clrw                                            ; Limpa o W, W = 0
02F6   1D07               M         btfss   PORTC,RC2                       ; O dado atual é 1?
02F7   3001               M         movlw   H'01'                           ; Não, Então W será 1
02F8   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         ANDN    V5
02F9   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
02FA   0103               M         clrw                                            ; Limpa o W, W = 0
02FB   1E08               M         btfss   PORTD,RD4                       ; O dado atual é 1?
02FC   3001               M         movlw   H'01'                           ; Não, Então W será 1
02FD   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         ANDN    V4
02FE   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
02FF   0103               M         clrw                                            ; Limpa o W, W = 0
0300   1D88               M         btfss   PORTD,RD3                       ; O dado atual é 1?
0301   3001               M         movlw   H'01'                           ; Não, Então W será 1
0302   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         ANDN    P120
0303   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0304   0103               M         clrw                                            ; Limpa o W, W = 0
0305   1E2D               M         btfss   FLAG2,4                         ; O dado atual é 1?
0306   3001               M         movlw   H'01'                           ; Não, Então W será 1
0307   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         OUT     TP              ; TP = ST.V1´.LL´.V5´.V4´.P120´
0308   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0309   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
030A   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
030B   2B0E               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
030C   1207               M         bcf     PORTC,RC4                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
030D   2B0F               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
030E   1607               M         bsf     PORTC,RC4                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
030F   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                      00066         __TURNS_ON_BOMB_UNTIL_5S                                        ; Ative a Bomba até chegar em 5 
                            segundos
                          M         IN              BOMB
0310   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
0311   1B88               M         btfsc   PORTD,RD7                       ; O BIT 'bit' do registro 'reg' é 0?
0312   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
0313   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         OR              TP
0314   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0315   0103               M         clrw                                            ; Limpa o W, W = 0
0316   1A07               M         btfsc   PORTC,RC4                       ; O dado atual é 0?
0317   3001               M         movlw   H'01'                           ; Não, Então W será 1
0318   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         OUT     BOMB    ; BOMB = (BOMB+TP)      
0319   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
031A   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
031B   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
031C   2B1F               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
031D   1388               M         bcf     PORTD,RD7                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
031E   2B20               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

031F   1788               M         bsf     PORTD,RD7                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
0320   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                          M         WHEN    BOMB
                          M 
                          M         ; Retardo de 1 segundo para ligar V2
                          M         if      PORTD==FLAG1 & RD7==1                           ; Se argumento for a FLAG T1 então faça 
                            o código abaixo...
                          M                         btfsc   LH                                      ; Se LH estiver inativo, salte 1
                             instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   V1                                      ; Se V1 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   V2                                      ; Se V2 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim     
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDV1                           ; Não inicie o temporizador, Vai para o 
                            fim                     
                          M                         btfsc   T1                                      ; Se T1 estiver inativo, inicie 
                            o temporizador
                          M                         goto    ENDV10                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'11'                           ; Mova o valor 11 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 11 a
                            té 255 (245 contagens)
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                          M                         bsf     T1                                      ; Ative a Flag T1 pra indicar qu
                            e a temporização está ativa
                          M                         bsf     TIMER                           ; Ligue o display de tempo do Proteus
                          M                 ENDV10:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'16'                           ; Mova o valor 16 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 16 (COUNT vai de 0 a
                             16)
                          M                         btfss   STATUS,Z                        ; Z=1? ou 16 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=16
                          M                         goto    ENDV1                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     TIMER                           ; Desligue o display de tempo do Proteus
                          M                         bcf     T1                                      ; Se sim, então desative a Flag 
                            T1
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                          M                 ENDV1:                                                  ; Fim da Execução
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LL (Tempo imaginário de enchimento)
                          M         if      PORTD==FLAG1 & RD7==3                           ; Se argumento for a FLAG P1L então faça
                             o código abaixo...
                          M                         btfsc   LL                                      ; Se LL estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLL                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   P1L                                     ; Se P1L estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLL0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador
                          M                         bsf     P1L                                     ; Ative a Flag P1L pra indicar q
                            ue a temporização está ativa
                          M                 ENDLL0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                          M                         goto    ENDLL                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     P1L                                     ; Se sim, então desative a Flag 
                            P1L
                          M                         bsf     LLON                            ; Ative a Flag LLON pra indicar que LL e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto
                          M                 ENDLL:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de 2,2 segundos para ativar LM (Tempo imaginário de enchimento)
                          M         if      PORTD==FLAG1 & RD7==4                           ; Se argumento for a FLAG P1M então faça
                             o código abaixo...
                          M                         btfsc   LM                                      ; Se LM estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   LL                                      ; Se LL estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfss   V1                                      ; Se V1 estiver ativo, salte 1 i
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            nstrução
                          M                         goto    ENDLM                           ; Não inicie o temporizador, Vai para o 
                            fim
                          M                         btfsc   P1M                                     ; Se P1M estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLM0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W 
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador         
                          M                         bsf     P1M                                     ; Ative a Flag P1M pra indicar q
                            ue a temporização está ativa
                          M                 ENDLM0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35      
                          M                         goto    ENDLM                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P1M                                     ; Se sim, então desative a Flag 
                            P1M     
                          M                         bsf     LMON                            ; Ative a Flag LMON pra indicar que LM e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDLM:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para ativar LH
                          M         if      PORTD==FLAG1 & RD7==5                           ; Se argumento for a FLAG P1H então faça
                             o código abaixo...
                          M                         btfsc   LH                                      ; Se LH estiver inativo salte 1 
                            instrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfss   V2                                      ; Se V2 estiver ativo, salte 1 i
                            nstrução
                          M                         goto    ENDLH                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   P2H                                     ; Se P1H estiver inativo, inicie
                             o temporizador
                          M                         goto    ENDLH0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W         
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)           
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador 
                          M                         bsf     P2H                                     ; Ative a Flag P2H pra indicar q
                            ue a temporização está ativa
                          M                 ENDLH0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'35'                           ; Mova o valor 35 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 35 (COUNT vai de 0 a
                             35)            
                          M                         btfss   STATUS,Z                        ; Z=1? ou 35 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=35
                          M                         goto    ENDLH                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P2H                                     ; Se sim, então desative a Flag 
                            P2H  
                          M                         bsf     LHON                            ; Ative a Flag LHON pra indicar que LH e
                            stá ativo
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 ENDLH:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         
                          M         ; Tempo de retenção de 12 segundos para desligar MOT1
                          M         if      PORTD==FLAG1 & RD7==6                           ; Se argumento for a FLAG T12 então faça
                             o código abaixo...             
                          M                         btfss   MOT1                            ; Se MOT1 estiver ligado salte 1 instruç
                            ão      
                          M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim 
                          M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
                          M                         goto    MOT1OFF                         ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfss   LM                                      ; Se LM estiver ativo, salte 1 i
                            nstrução
                          M                         goto    MOT1OFF                         ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   T12                                     ; Se T12 estiver inativo, inicie
                             o temporizador         
                          M                         goto    COUNTER                         ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.              
                          M                         movlw   D'6'                            ; Mova o valor 6 para W                 
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     T12                                     ; Ative a Flag T12 pra indicar q
                            ue a temporização está ativa
                          M                 COUNTER:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'153'                          ; Mova o valor 153 para W       
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 153 (COUNT vai de 0 
                            a 153)  
                          M                         btfss   STATUS,Z                        ; Z=1? ou 153 xor COUNT = 0? Se sim, sig
                            nifica que COUNT=153    
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         goto    MOT1OFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     T12                                     ; Se sim, então desative a Flag 
                            T12   
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 MOT1OFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 3,9 segundos para chegar a 100Cº
                          M         if      PORTD==FLAG1 & RD7==0                           ; Se argumento for a FLAG C100 então faç
                            a o código abaixo...    
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução     
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   TT                                      ; Se LH estiver inativo salte 1 
                            instrução
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfss   LH                                      ; Se LH estiver ativo salte 1 in
                            strução
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   MOT1                            ; Se MOT1 estiver desligado salte 1 inst
                            rução   
                          M                         goto    ENDTT                           ; Se não, Não execute o temporizador, Va
                            i para o fim
                          M                         btfsc   C100                            ; Se C100 estiver inativo, inicie o temp
                            orizador
                          M                         goto    ENDTT0                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'100'                          ; Mova o valor 100 para W               
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 100 
                            até 255 (156 contagens)         
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
                          M                         bsf     C100                            ; Ative a Flag C100 pra indicar que a te
                            mporização está ativa
                          M                 ENDTT0:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'100'                          ; Mova o valor 100 para W       
                          M                         xorwf   CELSIUS,W                       ; Compare CELSIUS com 100Cº (CELSIUS vai
                             de 0 a 100)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 100 xor CELSIUS = 0? Se sim, s
                            ignifica que CELSIUS=100
                          M                         goto    ENDTT                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
                          M                         bcf     C100                            ; Se sim, então desative a Flag C100   
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDTT:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo CELSIUS, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M         
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ; Tempo de 3 segundos do repouso do aquecimento
                          M         if      PORTD==FLAG1 & RD7==2                           ; Se argumento for a FLAG RT então faça 
                            o código abaixo...
                          M                         btfss   TT                                      ; Se TT estiver ativo salte 1 in
                            strução 
                          M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    ENDR                            ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   RT                                      ; Se RT estiver inativo, inicie 
                            o temporizador
                          M                         goto    ENDR0                           ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'6'                            ; Mova o valor 6 para W         
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)                   
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                          M                         bsf     RT                                      ; Ative a Flag RT pra indicar qu
                            e a temporização está ativa
                          M                 ENDR0:                                                  ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'47'                           ; Mova o valor 47 para W        
                          M                         xorwf   COUNT,W                         ; Compare COUNT com 47 (COUNT vai de 0 a
                             47)    
                          M                         btfss   STATUS,Z                        ; Z=1? ou 47 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=47
                          M                         goto    ENDR                            ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     RT                                      ; Se sim, então desative a Flag 
                            RT   
                          M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
                          M                 ENDR:                                                   ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 2,2 segundos para desativar LH,LM e LL nesta ordem
                          M         if      PORTD==Q0 & RD7==4                              ; Se argumento for V5 então faça o códig
                            o abaixo...
                          M                         btfsc   V5                                      ; Se V5 estiver desligado salte 
                            1 instrução
                          M                         goto    STARTV5                         ; Se estiver ligado, Começe as verificaç
                            ões
                          M                         goto    ENDV5                           ; Salte para o fim e não faça nada
                          M                 STARTV5:                                                ; VERIFICAÇÃO DOS SENSORES -----
                            -------------------
                          M                         btfsc   LH                                      ; LH está ativado?
                          M                         goto    LHSTART                         ; Sim, então verifique o tempo de LH
                          M                         btfsc   LM                                      ; Não, LM está ativado?
                          M                         goto    LMSTART                         ; Sim, então verifique o tempo de LM
                          M                         btfsc   LL                                      ; Não, LL está ativado?
                          M                         goto    LLSTART                         ; Sim, então verifique o tempo de LL
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         goto    ENDV5                           ; Não, Então saia e não faça nada
                          M                 LHSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LH ---
                            --------------------
                          M                         btfss   P2H                                     ; A Flag P2H está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LHON                            ; desacione a Flag LHON indicando que LH
                             está inativo
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 LMSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LM ---
                            --------------------
                          M                         btfss   P1M                                     ; A Flag P1M está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W     
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35  
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim     
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0 
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LMON                            ; desacione a Flag LMON indicando que LM
                             está inativo
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 LLSTART:                                                ; VERIFICAÇÃO DO TEMPO DE LL ---
                            --------------------
                          M                         btfss   P1L                                     ; A Flag P1L está acionada?
                          M                         goto    STARTTIMER                      ; Não, então inicie o temporizador
                          M                         movlw   D'35'                           ; Sim, então mova 35 para W             
                          M                         xorwf   COUNT,W                         ; Compara COUNT com 35          
                          M                         btfss   STATUS,Z                        ; Z=1? ou É igual a 35?
                          M                         goto    ENDV5                           ; Não, então vai para o fim             
                          M                         clrf    COUNT                           ; Sim, então limpe o contador
                          M                         bcf     INTCON,TMR0IE           ; desative a interrupção do TMR0  
                          M                         bcf     P2H                                     ; desacione a Flag P2H
                          M                         bcf     P1L                                     ; desacione a Flag P1L
                          M                         bcf     P1M                                     ; desacione a Flag P1M
                          M                         bcf     LLON                            ; desacione a Flag LLON indicando que LL
                             está inativo
                          M                         bsf     RESC                            ; acione a Flag RESC indicando que o 2ª 
                            reservatorio esta cheio
                          M                         goto    ENDV5                           ; Finalize as operações
                          M                 STARTTIMER:                                             ; INICIALIZAÇÃO DO TEMPORIZADOR 
                            ----------------------
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                         movlw   D'6'                            ; Mova o valor 6 para W
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
                          M                         bsf     INTCON,TMR0IE           ; Ative o temporizador   
                          M                         bsf     P1L                                     ; Acione a Flag P1L
                          M                         bsf     P1M                                     ; Acione a Flag P1M
                          M                         bsf     P2H                                     ; Acione a Flag P2H
                          M                 ENDV5:                                                  ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de 4,1 segundos para chegar a 120psi
                          M         if      PORTD==FLAG2 & RD7==4                           ; Se argumento for a FLAG P120 então faç
                            a o código abaixo...
                          M                         btfss   V4                                      ; Se V4 estiver ligado salte 1 i
                            nstrução        
                          M                         goto    ENDV4                           ; Não execute o temporizador, Vai para o
                             fim
                          M                         btfsc   P120                            ; Se P120 estiver inativo salte 1 instru
                            ção
                          M                         goto    ENDRES                          ; Se já estiver ativo, só verifique se j
                            á chegou no tempo.
                          M                         movlw   D'120'                          ; Mova o valor 120 para W               
                          M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 120 
                            até 255 (136 contagens)         
                          M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador   
                          M                         bsf     P120                            ; Ative a Flag P120 pra indicar que a te
                            mporização está ativa
                          M                 ENDRES:                                                 ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
                          M                         movlw   D'120'                          ; Mova o valor 120 para W       
                          M                         xorwf   PSI,W                           ; Compare PSI com 120psi (PSI vai de 0 a
                             120)   
                          M                         btfss   STATUS,Z                        ; Z=1? ou 120 xor PSI = 0? Se sim, signi
                            fica que PSI=120
                          M                         goto    ENDV4                           ; Se não, ainda não chegou no tempo entã
                            o vai para o fim        
                          M                         bcf     P120                            ; Se sim, então desative a Flag P120
                          M                         bcf     RESC                            ; Desative a FLAG RESC
                          M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto 
                          M                 ENDV4:                                                  ; Fim da Execução, OBS.: Aqui nã
                            o limpo PSI, para fins de depuração.
                          M         endif                                                           ; Fim da Condição
                          M 
                          M         ; Tempo de retenção de 5 segundos para desligar BOMB 
                          M         if      PORTD==Q0 & RD7==7                              ; Se argumento for BOMB então faça o cód
                            igo abaixo...   
0321   1F88               M                         btfss   BOMB                            ; Se BOMB estiver ligado salte 1 instruç
                            ão              
0322   2B31               M                         goto    BOMBOFF                         ; Não execute o temporizador, Vai para o
                             fim 
0323   1BAC               M                         btfsc   P3                                      ; Se P3 estiver inativo, inicie 
                            o temporizador          
0324   2B29               M                         goto    COUNTP3                         ; Se já estiver ativo, só verifique se j
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            á chegou no tempo.
0325   3006               M                         movlw   D'6'                            ; Mova o valor 6 para W
0326   0081               M                         movwf   TMR0                            ; Mova W para TMR0, TMR0 contará de 6 at
                            é 255 (250 contagens)   
0327   168B               M                         bsf     INTCON,TMR0IE           ; Inicie o temporizador  
0328   17AC               M                         bsf     P3                                      ; Ative a Flag P3 pra indicar qu
                            e a temporização está ativa     
Warning[207]: Found label after column 1. (COUNTP3)
0329                      M                 COUNTP3:                                                ; INICIO DA VERIFICAÇÃO DO TEMPO
                             ----------------------------
0329   304E               M                         movlw   D'78'                           ; Mova o valor 78 para W
032A   062E               M                         xorwf   COUNT,W                         ; Compare COUNT com 78 (COUNT vai de 0 a
                             78)    
032B   1D03               M                         btfss   STATUS,Z                        ; Z=1? ou 78 xor COUNT = 0? Se sim, sign
                            ifica que COUNT=78
032C   2B31               M                         goto    BOMBOFF                         ; Se não, ainda não chegou no tempo entã
                            o vai para o fim
032D   13AC               M                         bcf     P3                                      ; Se sim, então desative a Flag 
                            P3 
032E   01AE               M                         clrf    COUNT                           ; Zere o conteúdo de COUNT
032F   128B               M                         bcf     INTCON,TMR0IE           ; Desativa o temporizador por enquanto  
0330   16AD               M                         bsf     EOP                                     ; Ative a Flag EOP para indicar 
                            que será "Fim do Programa"
Warning[207]: Found label after column 1. (BOMBOFF)
0331                      M                 BOMBOFF:                                                ; Fim da Execução
                          M         endif                                                           ; Fim da Condição
                          M         IN              BOMB
0331   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
0332   1B88               M         btfsc   PORTD,RD7                       ; O BIT 'bit' do registro 'reg' é 0?
0333   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
0334   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         AND             P3
0335   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0336   0103               M         clrw                                            ; Limpa o W, W = 0
0337   1BAC               M         btfsc   FLAG1,7                         ; O dado atual é 0?
0338   3001               M         movlw   H'01'                           ; Não, Então W será 1
0339   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         OUT     BOMB    ; BOMB = BOMB.P3 | TP->P3->BOMB
033A   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
033B   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
033C   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
033D   2B40               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
033E   1388               M         bcf     PORTD,RD7                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
033F   2B41               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
0340   1788               M         bsf     PORTD,RD7                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
0341   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                      00067         __OPEN_V6_UNTIL_RESET                                           ; Abra a válvula V6 até que o us
                            uário pressione RESET
                          M         IN              V6              
0342   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
0343   1A88               M         btfsc   PORTD,RD5                       ; O BIT 'bit' do registro 'reg' é 0?
0344   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0345   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         ORN     ST
0346   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0347   0103               M         clrw                                            ; Limpa o W, W = 0
0348   1E87               M         btfss   PORTC,RC5                       ; O dado atual é 1?
0349   3001               M         movlw   H'01'                           ; Não, Então W será 1
034A   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         AND     EOP
034B   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
034C   0103               M         clrw                                            ; Limpa o W, W = 0
034D   1AAD               M         btfsc   FLAG2,5                         ; O dado atual é 0?
034E   3001               M         movlw   H'01'                           ; Não, Então W será 1
034F   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         OR              V6
0350   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0351   0103               M         clrw                                            ; Limpa o W, W = 0
0352   1A88               M         btfsc   PORTD,RD5                       ; O dado atual é 0?
0353   3001               M         movlw   H'01'                           ; Não, Então W será 1
0354   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         OUT     V6              ; V6 = ST´.EOP+V6
0355   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0356   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
0357   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
0358   2B5B               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
0359   1288               M         bcf     PORTD,RD5                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
035A   2B5C               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
035B   1688               M         bsf     PORTD,RD5                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
035C   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                      00068         __TURNS_OFF_OPERATION_STATE                                     ; Desligue o LED de Estado de Op
                            eração
                          M         IN              TP
035D   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
035E   1A07               M         btfsc   PORTC,RC4                       ; O BIT 'bit' do registro 'reg' é 0?
035F   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
0360   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         AND             BOMB
0361   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0362   0103               M         clrw                                            ; Limpa o W, W = 0
0363   1B88               M         btfsc   PORTD,RD7                       ; O dado atual é 0?
0364   3001               M         movlw   H'01'                           ; Não, Então W será 1
0365   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         OR              V5
0366   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0367   0103               M         clrw                                            ; Limpa o W, W = 0
0368   1A08               M         btfsc   PORTD,RD4                       ; O dado atual é 0?
0369   3001               M         movlw   H'01'                           ; Não, Então W será 1
036A   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         OR              V4
036B   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
036C   0103               M         clrw                                            ; Limpa o W, W = 0
036D   1988               M         btfsc   PORTD,RD3                       ; O dado atual é 0?
036E   3001               M         movlw   H'01'                           ; Não, Então W será 1
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

036F   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         OR              V3
0370   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0371   0103               M         clrw                                            ; Limpa o W, W = 0
0372   1908               M         btfsc   PORTD,RD2                       ; O dado atual é 0?
0373   3001               M         movlw   H'01'                           ; Não, Então W será 1
0374   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         OR              V1
0375   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0376   0103               M         clrw                                            ; Limpa o W, W = 0
0377   1808               M         btfsc   PORTD,RD0                       ; O dado atual é 0?
0378   3001               M         movlw   H'01'                           ; Não, Então W será 1
0379   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         OR              MOT1
037A   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
037B   0103               M         clrw                                            ; Limpa o W, W = 0
037C   1B08               M         btfsc   PORTD,RD6                       ; O dado atual é 0?
037D   3001               M         movlw   H'01'                           ; Não, Então W será 1
037E   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         OR              TT
037F   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0380   0103               M         clrw                                            ; Limpa o W, W = 0
0381   1987               M         btfsc   PORTC,RC3                       ; O dado atual é 0?
0382   3001               M         movlw   H'01'                           ; Não, Então W será 1
0383   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         OUT     ST              ; ST = TP.BOMB+V5+V4+V3+V2+MOT1+TT
0384   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0385   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
0386   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
0387   2B8A               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
0388   1287               M         bcf     PORTC,RC5                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
0389   2B8B               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
038A   1687               M         bsf     PORTC,RC5                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
038B   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                      00069         __TURNS_ON_FINALIZATION_STATE                           ; Ligue o LED de Estado de Finalização
                          M         IN              FN
038C   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
038D   1B07               M         btfsc   PORTC,RC6                       ; O BIT 'bit' do registro 'reg' é 0?
038E   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
038F   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         ORN             ST
0390   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0391   0103               M         clrw                                            ; Limpa o W, W = 0
0392   1E87               M         btfss   PORTC,RC5                       ; O dado atual é 1?
0393   3001               M         movlw   H'01'                           ; Não, Então W será 1
0394   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         AND     V6
0395   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
0396   0103               M         clrw                                            ; Limpa o W, W = 0
0397   1A88               M         btfsc   PORTD,RD5                       ; O dado atual é 0?
0398   3001               M         movlw   H'01'                           ; Não, Então W será 1
0399   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         OR              FN
039A   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
039B   0103               M         clrw                                            ; Limpa o W, W = 0
039C   1B07               M         btfsc   PORTC,RC6                       ; O dado atual é 0?
039D   3001               M         movlw   H'01'                           ; Não, Então W será 1
039E   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         OUT     FN              ; FN = FN+ST´.V6+FN
039F   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
03A0   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
03A1   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
03A2   2BA5               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
03A3   1307               M         bcf     PORTC,RC6                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
03A4   2BA6               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
03A5   1707               M         bsf     PORTC,RC6                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
03A6   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
                      00070         __TURNS_OFF_RESET_STATE                                         ; Desligue o LED de Estado de RE
                            SET
                          M         IN              RESETS
03A7   0103               M         clrw                                            ; Limpe o conteudo de W -> W = 0
03A8   1986               M         btfsc   PORTB,RB3                       ; O BIT 'bit' do registro 'reg' é 0?
03A9   3001               M         movlw   H'01'                           ; Não, Salve 1 em W
03AA   0000               M         nop                                                     ; Sim, W permanece em 0
                          M         OR              RESETS
03AB   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
03AC   0103               M         clrw                                            ; Limpa o W, W = 0
03AD   1986               M         btfsc   PORTB,RB3                       ; O dado atual é 0?
03AE   3001               M         movlw   H'01'                           ; Não, Então W será 1
03AF   0420               M         iorwf   TEMP,W                          ; Sim, Salva em W um OR de W com o dado anterior
                          M         ANDN    ST
03B0   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
03B1   0103               M         clrw                                            ; Limpa o W, W = 0
03B2   1E87               M         btfss   PORTC,RC5                       ; O dado atual é 1?
03B3   3001               M         movlw   H'01'                           ; Não, Então W será 1
03B4   0520               M         andwf   TEMP,W                          ; Sim, Salva em W um AND de W com o dado anterior
                          M         OUT     RESETS  ; RESETS = RESETS.ST´
03B5   00A0               M         movwf   TEMP                            ; Salva o dado anterior em TEMP
03B6   3901               M         andlw   H'01'                           ; Faça um AND de W com 1
03B7   1D03               M         btfss   STATUS,Z                        ; O resultado do AND deu 0?
03B8   2BBB               M         goto    $ + 3                           ; Não, Então vai para a 3ª instrução após esta linha
03B9   1186               M         bcf     PORTB,RB3                       ; Sim, Então limpe o BIT 'bit' do registro 'reg'
03BA   2BBC               M         goto    $ + 2                           ; Vai para a 2ª instrução após esta linha porque o AND d
                            eu 0
03BB   1586               M         bsf     PORTB,RB3                       ; Sete o BIT 'bit' do registro 'reg' porque no AND deu 1
03BC   0820               M         movf    TEMP,W                          ; Salve o dado anterior de TEMP para W
Warning[206]: Found call to macro in column 1. (__END_REACTOR__)
                      00071 __END_REACTOR__                                                                 ; FIM das Operações (LOO
                            P - de volta ao MAIN)
03BD   2893               M         goto    R_MAIN
                      00072 
                      00073 ; ---------------------------------------------------------------------------------------------------
                      00074 
Warning[205]: Found directive in column 1. (END)
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00075 END
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 131


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AND                               
ANDN                              
BANK_SELECT                       
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BOMB                              Q0,RD7
BOMBOFF                           00000331
BRGH                              00000002
C                                 00000000
C100                              FLAG1,0
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 132


SYMBOL TABLE
  LABEL                             VALUE 

CCPR2L                            0000001B
CELSIUS                           0000002F
CELS_TEMP                         00000028
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CIS                               00000003
CKE                               00000006
CKP                               00000004
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000009C
CMIE                              00000006
CMIF                              00000006
COUNT                             0000002E
COUNTER                           000001B4
COUNTP3                           00000329
COUNT_TEMP                        0000002B
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            0000009D
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DELAY1                            00000031
DELAY2                            00000032
D_A                               00000005
D_NOT_A                           00000005
DefTimer                          00000074
DefTimer1                         00000078
Delay500ms                        00000083
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
ENDLH                             00000177
ENDLH0                            0000016F
ENDLL                             000000D1
ENDLL0                            000000C9
ENDLM                             00000100
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 133


SYMBOL TABLE
  LABEL                             VALUE 

ENDLM0                            000000F8
ENDR                              0000023B
ENDR0                             00000234
ENDRES                            000002C9
ENDTT                             0000020F
ENDTT0                            00000209
ENDV1                             00000139
ENDV10                            00000131
ENDV4                             000002D0
ENDV5                             0000028E
END_INT                           0000007C
EOP                               FLAG2,5
F                                 00000001
FERR                              00000002
FLAG1                             0000002C
FLAG1_TEMP                        00000026
FLAG2                             0000002D
FLAG2_TEMP                        00000027
FN                                Q1,RC6
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I0                                PORTB
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
IEND                              0000007C
IN                                
INDF                              00000000
INIT_CONF                         00000006
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
IncCelsius                        0000006C
IncPsi                            00000070
LH                                Q1,RC0
LHON                              FLAG2,0
LHSTART                           00000260
LL                                Q1,RC2
LLON                              FLAG2,2
LLSTART                           0000027A
LM                                Q1,RC1
LMON                              FLAG2,1
LMSTART                           0000026D
MOT1                              Q0,RD6
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 134


SYMBOL TABLE
  LABEL                             VALUE 

MOT1OFF                           000001BB
NOT                               
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OR                                
ORN                               
OUT                               
P                                 00000004
P120                              FLAG2,4
P1L                               FLAG1,3
P1M                               FLAG1,4
P2H                               FLAG1,5
P3                                FLAG1,7
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCLATH_TEMP                       00000023
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS                                Q1,RC7
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 135


SYMBOL TABLE
  LABEL                             VALUE 

PSI                               00000030
PSI_TEMP                          00000029
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Q0                                PORTD
Q0_TEMP                           00000024
Q1                                PORTC
Q1_TEMP                           00000025
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 136


SYMBOL TABLE
  LABEL                             VALUE 

RE2                               00000002
READ_WRITE                        00000002
RESC                              FLAG2,3
RESETS                            PORTB,RB3
RESTORE_CONTEXT                   
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RT                                FLAG1,2
RX9                               00000006
RX9D                              00000000
R_MAIN                            00000093
R_NOT_W                           00000002
R_W                               00000002
RestoreDatas                      00000050
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
ST                                Q1,RC5
START                             I0,RB1
STARTTIMER                        00000288
STARTV5                           00000259
STATUS                            00000003
STATUS_TEMP                       00000022
STOP                              I0,RB0
STOP_BUTTON                       00000027
STORE_CONTEXT                     
SYNC                              00000004
SaveDatas                         0000002A
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1                                FLAG1,1
T12                               FLAG1,6
T1CKPS0                           00000004
T1CKPS1                           00000005
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 137


SYMBOL TABLE
  LABEL                             VALUE 

T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TEMP                              00000020
TIMER                             PORTB,RB2
TIMER0INT                         00000062
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR0_TEMP                         0000002A
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TP                                Q1,RC4
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 138


SYMBOL TABLE
  LABEL                             VALUE 

TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TT                                Q1,RC3
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Time1                             00000085
Time2                             00000087
UA                                00000001
V1                                Q0,RD0
V2                                Q0,RD1
V3                                Q0,RD2
V4                                Q0,RD3
V5                                Q0,RD4
V6                                Q0,RD5
VOID_INT                          00000020
W                                 00000000
WCOL                              00000007
WHEN                              
WR                                00000001
WREN                              00000002
WRERR                             00000003
W_TEMP                            00000021
WaitStop                          0000004B
WaitTime                          0000004A
XOR                               
XORN                              
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 139


SYMBOL TABLE
  LABEL                             VALUE 

_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00001FFF
_CP_OFF                           00003FFF
_CP_ON                            00001FFF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FFD
__16F877A                         00000001
__ACTIVATE_LH_WHEN_DETECTS_P2     
__ACTIVATE_LL_WHEN_DETECTS_P1     
__ACTIVATE_LM_WHEN_DETECTS_P1     
__ACTIVATE_TP_WHEN_DETECTS_120PS  
__ACTIVATE_TT_WHEN_DETECTS_100C   
__DEBUG                           1
__END_REACTOR__                   
__INI_REACTOR__                   
__OPEN_V1_UNTIL_LM                
__OPEN_V2_UNTIL_LH                
__OPEN_V3_UNTIL_TT                
__OPEN_V4_UNTIL_TP                
__OPEN_V5_WHEN_3S_UNTIL_LL_OFF    
__OPEN_V6_UNTIL_RESET             
__REACTBOOLS_INC__                
__REACTCONF_INC__                 
__REACTDATA_INC__                 
__REACTINTR_INC__                 
__REACTLIB_INC__                  
__REACTMACR_INC__                 
MPASM  5.51                     REACTMAIN.ASM   12-7-2021  4:40:28         PAGE 140


SYMBOL TABLE
  LABEL                             VALUE 

__REACTOR_ON                      
__TURNS_OFF_LH_LM_LL_WHEN_V5      
__TURNS_OFF_OPERATION_STATE       
__TURNS_OFF_RESET_STATE           
__TURNS_ON_BOMB_UNTIL_5S          
__TURNS_ON_FINALIZATION_STATE     
__TURNS_ON_MOTOR_UNTIL_12S        


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXX--
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   955
Program Memory Words Free:  7237


Errors   :     0
Warnings :    71 reported,     0 suppressed
Messages :     6 reported,     0 suppressed

